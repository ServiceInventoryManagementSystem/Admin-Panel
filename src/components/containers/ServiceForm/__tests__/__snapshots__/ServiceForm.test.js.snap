// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ServiceForm renders with no props 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ServiceForm />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <div
        className={undefined}
>
        <MuiThemeProvider
                muiTheme={
                        Object {
                                "appBar": Object {
                                  "color": "#00bcd4",
                                  "height": 64,
                                  "padding": 24,
                                  "textColor": "#ffffff",
                                  "titleFontWeight": 400,
                                },
                                "avatar": Object {
                                  "backgroundColor": "rgb(188, 188, 188)",
                                  "color": "#ffffff",
                                },
                                "badge": Object {
                                  "color": "#ffffff",
                                  "fontWeight": 500,
                                  "primaryColor": "#00bcd4",
                                  "primaryTextColor": "#ffffff",
                                  "secondaryColor": "#ff4081",
                                  "secondaryTextColor": "#ffffff",
                                  "textColor": "rgba(0, 0, 0, 0.87)",
                                },
                                "baseTheme": Object {
                                  "fontFamily": "Roboto, sans-serif",
                                  "palette": Object {
                                    "accent1Color": "#ff4081",
                                    "accent2Color": "#f5f5f5",
                                    "accent3Color": "#9e9e9e",
                                    "alternateTextColor": "#ffffff",
                                    "borderColor": "#e0e0e0",
                                    "canvasColor": "#ffffff",
                                    "clockCircleColor": "rgba(0, 0, 0, 0.07)",
                                    "disabledColor": "rgba(0, 0, 0, 0.3)",
                                    "pickerHeaderColor": "#00bcd4",
                                    "primary1Color": "#00bcd4",
                                    "primary2Color": "#0097a7",
                                    "primary3Color": "#bdbdbd",
                                    "secondaryTextColor": "rgba(0, 0, 0, 0.54)",
                                    "shadowColor": "rgba(0, 0, 0, 1)",
                                    "textColor": "rgba(0, 0, 0, 0.87)",
                                  },
                                  "spacing": Object {
                                    "desktopDrawerMenuItemHeight": 48,
                                    "desktopDropDownMenuFontSize": 15,
                                    "desktopDropDownMenuItemHeight": 32,
                                    "desktopGutter": 24,
                                    "desktopGutterLess": 16,
                                    "desktopGutterMini": 8,
                                    "desktopGutterMore": 32,
                                    "desktopKeylineIncrement": 64,
                                    "desktopSubheaderHeight": 48,
                                    "desktopToolbarHeight": 56,
                                    "iconSize": 24,
                                  },
                                },
                                "borderRadius": 2,
                                "bottomNavigation": Object {
                                  "backgroundColor": "#ffffff",
                                  "height": 56,
                                  "selectedColor": "#00bcd4",
                                  "selectedFontSize": 14,
                                  "unselectedColor": "rgba(0, 0, 0, 0.54)",
                                  "unselectedFontSize": 12,
                                },
                                "button": Object {
                                  "height": 36,
                                  "iconButtonSize": 48,
                                  "minWidth": 88,
                                },
                                "card": Object {
                                  "fontWeight": 500,
                                  "subtitleColor": "rgba(0, 0, 0, 0.54)",
                                  "titleColor": "rgba(0, 0, 0, 0.87)",
                                },
                                "cardMedia": Object {
                                  "color": "rgba(255, 255, 255, 0.87)",
                                  "overlayContentBackground": "rgba(0, 0, 0, 0.54)",
                                  "subtitleColor": "rgba(255, 255, 255, 0.54)",
                                  "titleColor": "rgba(255, 255, 255, 0.87)",
                                },
                                "cardText": Object {
                                  "textColor": "rgba(0, 0, 0, 0.87)",
                                },
                                "checkbox": Object {
                                  "boxColor": "rgba(0, 0, 0, 0.87)",
                                  "checkedColor": "#00bcd4",
                                  "disabledColor": "rgba(0, 0, 0, 0.3)",
                                  "labelColor": "rgba(0, 0, 0, 0.87)",
                                  "labelDisabledColor": "rgba(0, 0, 0, 0.3)",
                                  "requiredColor": "#00bcd4",
                                },
                                "chip": Object {
                                  "backgroundColor": "rgb(224, 224, 224)",
                                  "deleteIconColor": "rgba(0, 0, 0, 0.26)",
                                  "fontSize": 14,
                                  "fontWeight": 400,
                                  "shadow": "0 1px 6px rgba(0, 0, 0, 0.12),
                                0 1px 4px rgba(0, 0, 0, 0.12)",
                                  "textColor": "rgba(0, 0, 0, 0.87)",
                                },
                                "datePicker": Object {
                                  "calendarTextColor": "rgba(0, 0, 0, 0.87)",
                                  "calendarYearBackgroundColor": "#ffffff",
                                  "color": "#7cb342",
                                  "headerColor": "#aed581",
                                  "selectColor": "#7cb342",
                                  "selectTextColor": "#ffffff",
                                  "textColor": "#ffffff",
                                },
                                "dialog": Object {
                                  "bodyColor": "rgba(0, 0, 0, 0.6)",
                                  "bodyFontSize": 16,
                                  "titleFontSize": 22,
                                },
                                "drawer": Object {
                                  "color": "#ffffff",
                                  "width": 256,
                                },
                                "dropDownMenu": Object {
                                  "accentColor": "#e0e0e0",
                                },
                                "enhancedButton": Object {
                                  "tapHighlightColor": "rgba(0, 0, 0, 0)",
                                },
                                "flatButton": Object {
                                  "buttonFilterColor": "#999999",
                                  "color": "rgba(0, 0, 0, 0)",
                                  "disabledTextColor": "rgba(0, 0, 0, 0.3)",
                                  "fontSize": 14,
                                  "fontWeight": 500,
                                  "primaryTextColor": "#689f38",
                                  "secondaryTextColor": "#ff4081",
                                  "textColor": "rgba(0, 0, 0, 0.87)",
                                },
                                "floatingActionButton": Object {
                                  "buttonSize": 56,
                                  "color": "#00bcd4",
                                  "disabledColor": "rgb(224, 224, 224)",
                                  "disabledTextColor": "rgba(0, 0, 0, 0.3)",
                                  "iconColor": "#ffffff",
                                  "miniSize": 40,
                                  "secondaryColor": "#ff4081",
                                  "secondaryIconColor": "#ffffff",
                                },
                                "fontFamily": "Roboto, sans-serif",
                                "gridTile": Object {
                                  "textColor": "#ffffff",
                                },
                                "icon": Object {
                                  "backgroundColor": "#00bcd4",
                                  "color": "#ffffff",
                                },
                                "inkBar": Object {
                                  "backgroundColor": "#ff4081",
                                },
                                "isRtl": false,
                                "listItem": Object {
                                  "leftIconColor": "#757575",
                                  "nestedLevelDepth": 18,
                                  "rightIconColor": "#757575",
                                  "secondaryTextColor": "rgba(0, 0, 0, 0.54)",
                                },
                                "menu": Object {
                                  "backgroundColor": "#ffffff",
                                  "containerBackgroundColor": "#ffffff",
                                },
                                "menuItem": Object {
                                  "dataHeight": 32,
                                  "height": 48,
                                  "hoverColor": "rgba(0, 0, 0, 0.1)",
                                  "padding": 24,
                                  "rightIconDesktopFill": "#757575",
                                  "selectedTextColor": "#ff4081",
                                },
                                "menuSubheader": Object {
                                  "borderColor": "#e0e0e0",
                                  "padding": 24,
                                  "textColor": "#00bcd4",
                                },
                                "overlay": Object {
                                  "backgroundColor": "rgba(0, 0, 0, 0.54)",
                                },
                                "palette": Object {
                                  "accent1Color": "#ff4081",
                                  "accent2Color": "#f5f5f5",
                                  "accent3Color": "#9e9e9e",
                                  "alternateTextColor": "#ffffff",
                                  "borderColor": "#e0e0e0",
                                  "canvasColor": "#ffffff",
                                  "clockCircleColor": "rgba(0, 0, 0, 0.07)",
                                  "disabledColor": "rgba(0, 0, 0, 0.3)",
                                  "pickerHeaderColor": "#00bcd4",
                                  "primary1Color": "#00bcd4",
                                  "primary2Color": "#0097a7",
                                  "primary3Color": "#bdbdbd",
                                  "secondaryTextColor": "rgba(0, 0, 0, 0.54)",
                                  "shadowColor": "rgba(0, 0, 0, 1)",
                                  "textColor": "rgba(0, 0, 0, 0.87)",
                                },
                                "paper": Object {
                                  "backgroundColor": "#ffffff",
                                  "color": "rgba(0, 0, 0, 0.87)",
                                  "zDepthShadows": Array [
                                    "0 1px 6px rgba(0, 0, 0, 0.12),
                                 0 1px 4px rgba(0, 0, 0, 0.12)",
                                    "0 3px 10px rgba(0, 0, 0, 0.16),
                                 0 3px 10px rgba(0, 0, 0, 0.23)",
                                    "0 10px 30px rgba(0, 0, 0, 0.19),
                                 0 6px 10px rgba(0, 0, 0, 0.23)",
                                    "0 14px 45px rgba(0, 0, 0, 0.25),
                                 0 10px 18px rgba(0, 0, 0, 0.22)",
                                    "0 19px 60px rgba(0, 0, 0, 0.3),
                                 0 15px 20px rgba(0, 0, 0, 0.22)",
                                  ],
                                },
                                "prepareStyles": [Function],
                                "radioButton": Object {
                                  "backgroundColor": "#ffffff",
                                  "borderColor": "rgba(0, 0, 0, 0.87)",
                                  "checkedColor": "#00bcd4",
                                  "disabledColor": "rgba(0, 0, 0, 0.3)",
                                  "labelColor": "rgba(0, 0, 0, 0.87)",
                                  "labelDisabledColor": "rgba(0, 0, 0, 0.3)",
                                  "requiredColor": "#00bcd4",
                                  "size": 24,
                                },
                                "raisedButton": Object {
                                  "color": "#ffffff",
                                  "disabledColor": "rgb(229, 229, 229)",
                                  "disabledTextColor": "rgba(0, 0, 0, 0.3)",
                                  "fontSize": 14,
                                  "fontWeight": 500,
                                  "primaryColor": "#9ccc65",
                                  "primaryTextColor": "#ffffff",
                                  "secondaryColor": "#ff4081",
                                  "secondaryTextColor": "#ffffff",
                                  "textColor": "rgba(0, 0, 0, 0.87)",
                                },
                                "rawTheme": Object {
                                  "fontFamily": "Roboto, sans-serif",
                                  "palette": Object {
                                    "accent1Color": "#ff4081",
                                    "accent2Color": "#f5f5f5",
                                    "accent3Color": "#9e9e9e",
                                    "alternateTextColor": "#ffffff",
                                    "borderColor": "#e0e0e0",
                                    "canvasColor": "#ffffff",
                                    "clockCircleColor": "rgba(0, 0, 0, 0.07)",
                                    "disabledColor": "rgba(0, 0, 0, 0.3)",
                                    "pickerHeaderColor": "#00bcd4",
                                    "primary1Color": "#00bcd4",
                                    "primary2Color": "#0097a7",
                                    "primary3Color": "#bdbdbd",
                                    "secondaryTextColor": "rgba(0, 0, 0, 0.54)",
                                    "shadowColor": "rgba(0, 0, 0, 1)",
                                    "textColor": "rgba(0, 0, 0, 0.87)",
                                  },
                                  "spacing": Object {
                                    "desktopDrawerMenuItemHeight": 48,
                                    "desktopDropDownMenuFontSize": 15,
                                    "desktopDropDownMenuItemHeight": 32,
                                    "desktopGutter": 24,
                                    "desktopGutterLess": 16,
                                    "desktopGutterMini": 8,
                                    "desktopGutterMore": 32,
                                    "desktopKeylineIncrement": 64,
                                    "desktopSubheaderHeight": 48,
                                    "desktopToolbarHeight": 56,
                                    "iconSize": 24,
                                  },
                                },
                                "refreshIndicator": Object {
                                  "loadingStrokeColor": "#00bcd4",
                                  "strokeColor": "#e0e0e0",
                                },
                                "ripple": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                },
                                "slider": Object {
                                  "handleColorZero": "#bdbdbd",
                                  "handleFillColor": "#ffffff",
                                  "handleSize": 12,
                                  "handleSizeActive": 18,
                                  "handleSizeDisabled": 8,
                                  "rippleColor": "#00bcd4",
                                  "selectionColor": "#00bcd4",
                                  "trackColor": "#bdbdbd",
                                  "trackColorSelected": "#9e9e9e",
                                  "trackSize": 2,
                                },
                                "snackbar": Object {
                                  "actionColor": "#ff4081",
                                  "backgroundColor": "rgba(0, 0, 0, 0.87)",
                                  "textColor": "#ffffff",
                                },
                                "spacing": Object {
                                  "desktopDrawerMenuItemHeight": 48,
                                  "desktopDropDownMenuFontSize": 15,
                                  "desktopDropDownMenuItemHeight": 32,
                                  "desktopGutter": 24,
                                  "desktopGutterLess": 16,
                                  "desktopGutterMini": 8,
                                  "desktopGutterMore": 32,
                                  "desktopKeylineIncrement": 64,
                                  "desktopSubheaderHeight": 48,
                                  "desktopToolbarHeight": 56,
                                  "iconSize": 24,
                                },
                                "stepper": Object {
                                  "backgroundColor": "transparent",
                                  "connectorLineColor": "#bdbdbd",
                                  "disabledTextColor": "rgba(0, 0, 0, 0.26)",
                                  "hoverBackgroundColor": "rgba(0, 0, 0, 0.06)",
                                  "hoveredIconColor": "#616161",
                                  "iconColor": "#00bcd4",
                                  "inactiveIconColor": "#9e9e9e",
                                  "textColor": "rgba(0, 0, 0, 0.87)",
                                },
                                "subheader": Object {
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "fontWeight": 500,
                                },
                                "svgIcon": Object {
                                  "color": "rgba(0, 0, 0, 0.87)",
                                },
                                "table": Object {
                                  "backgroundColor": "#ffffff",
                                },
                                "tableFooter": Object {
                                  "borderColor": "#e0e0e0",
                                  "textColor": "#9e9e9e",
                                },
                                "tableHeader": Object {
                                  "borderColor": "#e0e0e0",
                                },
                                "tableHeaderColumn": Object {
                                  "height": 56,
                                  "spacing": 24,
                                  "textColor": "#9e9e9e",
                                },
                                "tableRow": Object {
                                  "borderColor": "#e0e0e0",
                                  "height": 48,
                                  "hoverColor": "#f5f5f5",
                                  "selectedColor": "#e0e0e0",
                                  "stripeColor": "rgba(127, 221, 233, 0.4)",
                                  "textColor": "rgba(0, 0, 0, 0.87)",
                                },
                                "tableRowColumn": Object {
                                  "height": 48,
                                  "spacing": 24,
                                },
                                "tabs": Object {
                                  "backgroundColor": "#00bcd4",
                                  "selectedTextColor": "#ffffff",
                                  "textColor": "rgba(255, 255, 255, 0.7)",
                                },
                                "textField": Object {
                                  "backgroundColor": "transparent",
                                  "borderColor": "#e0e0e0",
                                  "disabledTextColor": "rgba(0, 0, 0, 0.3)",
                                  "errorColor": "#f44336",
                                  "floatingLabelColor": "rgba(0, 0, 0, 0.3)",
                                  "focusColor": "#aed581",
                                  "hintColor": "rgba(0, 0, 0, 0.3)",
                                  "textColor": "rgba(0, 0, 0, 0.87)",
                                },
                                "timePicker": Object {
                                  "accentColor": "#00bcd4",
                                  "clockCircleColor": "rgba(0, 0, 0, 0.07)",
                                  "clockColor": "rgba(0, 0, 0, 0.87)",
                                  "color": "#ffffff",
                                  "headerColor": "#00bcd4",
                                  "selectColor": "#0097a7",
                                  "selectTextColor": "#ffffff",
                                  "textColor": "#ffffff",
                                },
                                "toggle": Object {
                                  "labelColor": "rgba(0, 0, 0, 0.87)",
                                  "labelDisabledColor": "rgba(0, 0, 0, 0.3)",
                                  "thumbDisabledColor": "#e0e0e0",
                                  "thumbOffColor": "#f5f5f5",
                                  "thumbOnColor": "#7cb342",
                                  "thumbRequiredColor": "#00bcd4",
                                  "trackDisabledColor": "#bdbdbd",
                                  "trackOffColor": "#bdbdbd",
                                  "trackOnColor": "#aed581",
                                  "trackRequiredColor": "rgba(0, 188, 212, 0.5)",
                                },
                                "toolbar": Object {
                                  "backgroundColor": "rgb(232, 232, 232)",
                                  "color": "rgba(0, 0, 0, 0.54)",
                                  "height": 56,
                                  "hoverColor": "rgba(0, 0, 0, 0.87)",
                                  "iconColor": "rgba(0, 0, 0, 0.4)",
                                  "menuHoverColor": "rgba(0, 0, 0, 0.1)",
                                  "separatorColor": "rgba(0, 0, 0, 0.175)",
                                  "titleFontSize": 20,
                                },
                                "tooltip": Object {
                                  "color": "#ffffff",
                                  "opacity": 0.9,
                                  "rippleBackgroundColor": "#616161",
                                },
                                "userAgent": undefined,
                                "zIndex": Object {
                                  "appBar": 1100,
                                  "dialog": 1500,
                                  "dialogOverlay": 1400,
                                  "drawer": 1300,
                                  "drawerOverlay": 1200,
                                  "layer": 2000,
                                  "menu": 1000,
                                  "popover": 2100,
                                  "snackbar": 2900,
                                  "tooltip": 3000,
                                },
                              }
                }
        >
                <h1
                        className={undefined}
                >
                         Add New Service
                </h1>
                <div
                        className={undefined}
                >
                        <TextField
                                disabled={false}
                                floatingLabelFixed={false}
                                floatingLabelText="HREF"
                                fullWidth={false}
                                hintText="Reference of the service..."
                                multiLine={false}
                                onChange={[Function]}
                                rows={1}
                                type="text"
                                underlineShow={true}
                                value=""
                        />
                </div>
                <div
                        className={undefined}
                >
                        <TextField
                                disabled={false}
                                floatingLabelFixed={false}
                                floatingLabelText="Category"
                                fullWidth={false}
                                hintText="Enter category..."
                                multiLine={false}
                                onChange={[Function]}
                                rows={1}
                                type="text"
                                underlineShow={true}
                                value=""
                        />
                </div>
                <div
                        className={undefined}
                >
                        <TextField
                                disabled={false}
                                errorText="Name is a required field"
                                floatingLabelFixed={false}
                                floatingLabelText="Name"
                                fullWidth={false}
                                hintText="Enter name..."
                                multiLine={false}
                                onChange={[Function]}
                                rows={1}
                                type="text"
                                underlineShow={true}
                                value=""
                        />
                </div>
                <div
                        className={undefined}
                >
                        <TextField
                                disabled={false}
                                floatingLabelFixed={false}
                                floatingLabelText="Description"
                                fullWidth={false}
                                hintText="Description of the service..."
                                multiLine={true}
                                onChange={[Function]}
                                rows={1}
                                type="text"
                                underlineShow={true}
                                value=""
                        />
                </div>
                <Divider
                        className={undefined}
                        inset={false}
                />
                <div
                        className={undefined}
                >
                        <Toggle
                                defaultToggled={false}
                                disabled={false}
                                iconStyle={
                                        Object {
                                                "marginLeft": "0px",
                                              }
                                }
                                label="Is the service enabled?"
                                labelPosition="left"
                                labelStyle={
                                        Object {
                                                "width": "50%",
                                              }
                                }
                                onToggle={[Function]}
                                toggled={false}
                        />
                </div>
                <div
                        className={undefined}
                >
                        <Toggle
                                defaultToggled={false}
                                disabled={false}
                                iconStyle={
                                        Object {
                                                "marginLeft": "0px",
                                              }
                                }
                                label="Has the service started?"
                                labelPosition="left"
                                labelStyle={
                                        Object {
                                                "width": "50%",
                                              }
                                }
                                onToggle={[Function]}
                                toggled={false}
                        />
                </div>
                <div
                        className={undefined}
                >
                        <Toggle
                                defaultToggled={false}
                                disabled={false}
                                iconStyle={
                                        Object {
                                                "marginLeft": "0px",
                                              }
                                }
                                label="Can this service be changed without affecting any other service?"
                                labelPosition="left"
                                labelStyle={
                                        Object {
                                                "width": "50%",
                                              }
                                }
                                onToggle={[Function]}
                                toggled={false}
                        />
                </div>
                <Divider
                        className={undefined}
                        inset={false}
                />
                <div
                        className={undefined}
                >
                        <h3>
                                Start Mode
                        </h3>
                        <SelectField
                                autoWidth={false}
                                disabled={false}
                                fullWidth={false}
                                hintText="Start mode..."
                                multiple={false}
                                onChange={[Function]}
                                value=""
                        >
                                <MenuItem
                                        anchorOrigin={
                                                Object {
                                                        "horizontal": "right",
                                                        "vertical": "top",
                                                      }
                                        }
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="Unknown"
                                        targetOrigin={
                                                Object {
                                                        "horizontal": "left",
                                                        "vertical": "top",
                                                      }
                                        }
                                        value={0}
                                />
                                <MenuItem
                                        anchorOrigin={
                                                Object {
                                                        "horizontal": "right",
                                                        "vertical": "top",
                                                      }
                                        }
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="Automatically by the managed environment"
                                        targetOrigin={
                                                Object {
                                                        "horizontal": "left",
                                                        "vertical": "top",
                                                      }
                                        }
                                        value={1}
                                />
                                <MenuItem
                                        anchorOrigin={
                                                Object {
                                                        "horizontal": "right",
                                                        "vertical": "top",
                                                      }
                                        }
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="Automatically by the owning device"
                                        targetOrigin={
                                                Object {
                                                        "horizontal": "left",
                                                        "vertical": "top",
                                                      }
                                        }
                                        value={2}
                                />
                                <MenuItem
                                        anchorOrigin={
                                                Object {
                                                        "horizontal": "right",
                                                        "vertical": "top",
                                                      }
                                        }
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="Manually by the Provider of the Service"
                                        targetOrigin={
                                                Object {
                                                        "horizontal": "left",
                                                        "vertical": "top",
                                                      }
                                        }
                                        value={3}
                                />
                                <MenuItem
                                        anchorOrigin={
                                                Object {
                                                        "horizontal": "right",
                                                        "vertical": "top",
                                                      }
                                        }
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="Manually by a Customer of the Provider"
                                        targetOrigin={
                                                Object {
                                                        "horizontal": "left",
                                                        "vertical": "top",
                                                      }
                                        }
                                        value={4}
                                />
                                <MenuItem
                                        anchorOrigin={
                                                Object {
                                                        "horizontal": "right",
                                                        "vertical": "top",
                                                      }
                                        }
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="Any of the above"
                                        targetOrigin={
                                                Object {
                                                        "horizontal": "left",
                                                        "vertical": "top",
                                                      }
                                        }
                                        value={5}
                                />
                        </SelectField>
                </div>
                <div
                        className={undefined}
                >
                        <h3>
                                State
                        </h3>
                        <SelectField
                                autoWidth={false}
                                disabled={false}
                                fullWidth={false}
                                hintText="State of the service..."
                                multiple={false}
                                onChange={[Function]}
                                value=""
                        >
                                <MenuItem
                                        anchorOrigin={
                                                Object {
                                                        "horizontal": "right",
                                                        "vertical": "top",
                                                      }
                                        }
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="feasibilityChecked"
                                        targetOrigin={
                                                Object {
                                                        "horizontal": "left",
                                                        "vertical": "top",
                                                      }
                                        }
                                        value={0}
                                />
                                <MenuItem
                                        anchorOrigin={
                                                Object {
                                                        "horizontal": "right",
                                                        "vertical": "top",
                                                      }
                                        }
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="designed"
                                        targetOrigin={
                                                Object {
                                                        "horizontal": "left",
                                                        "vertical": "top",
                                                      }
                                        }
                                        value={1}
                                />
                                <MenuItem
                                        anchorOrigin={
                                                Object {
                                                        "horizontal": "right",
                                                        "vertical": "top",
                                                      }
                                        }
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="reserved"
                                        targetOrigin={
                                                Object {
                                                        "horizontal": "left",
                                                        "vertical": "top",
                                                      }
                                        }
                                        value={2}
                                />
                                <MenuItem
                                        anchorOrigin={
                                                Object {
                                                        "horizontal": "right",
                                                        "vertical": "top",
                                                      }
                                        }
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="active"
                                        targetOrigin={
                                                Object {
                                                        "horizontal": "left",
                                                        "vertical": "top",
                                                      }
                                        }
                                        value={3}
                                />
                                <MenuItem
                                        anchorOrigin={
                                                Object {
                                                        "horizontal": "right",
                                                        "vertical": "top",
                                                      }
                                        }
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="inactive"
                                        targetOrigin={
                                                Object {
                                                        "horizontal": "left",
                                                        "vertical": "top",
                                                      }
                                        }
                                        value={4}
                                />
                                <MenuItem
                                        anchorOrigin={
                                                Object {
                                                        "horizontal": "right",
                                                        "vertical": "top",
                                                      }
                                        }
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="terminated"
                                        targetOrigin={
                                                Object {
                                                        "horizontal": "left",
                                                        "vertical": "top",
                                                      }
                                        }
                                        value={5}
                                />
                        </SelectField>
                </div>
                <Divider
                        className={undefined}
                        inset={false}
                />
                <div
                        className={undefined}
                >
                        <h3>
                                Order date
                        </h3>
                        <DatePicker
                                autoOk={false}
                                container="dialog"
                                disableYearSelection={false}
                                disabled={false}
                                firstDayOfWeek={1}
                                hideCalendarDate={false}
                                hintText="Order Date"
                                onChange={[Function]}
                                openToYearSelection={false}
                                style={Object {}}
                                value=""
                        />
                </div>
                <div
                        className={undefined}
                >
                        <h3>
                                Start date
                        </h3>
                        <DatePicker
                                autoOk={false}
                                container="dialog"
                                disableYearSelection={false}
                                disabled={false}
                                firstDayOfWeek={1}
                                hideCalendarDate={false}
                                hintText="Start Date"
                                onChange={[Function]}
                                openToYearSelection={false}
                                style={Object {}}
                                value=""
                        />
                </div>
                <div
                        className={undefined}
                >
                        <h3>
                                End date
                        </h3>
                        <DatePicker
                                autoOk={false}
                                container="dialog"
                                disableYearSelection={false}
                                disabled={false}
                                firstDayOfWeek={1}
                                hideCalendarDate={false}
                                hintText="End Date"
                                onChange={[Function]}
                                openToYearSelection={false}
                                style={Object {}}
                                value=""
                        />
                        <br />
                </div>
                <Divider
                        className={undefined}
                        inset={false}
                />
                <div>
                        <h3>
                                Service Specification
                        </h3>
                        <ObjectInput
                                mapValues={[Function]}
                                onChange={[Function]}
                                value={
                                        Object {
                                                "href": "",
                                                "name": "",
                                                "version": "",
                                              }
                                }
                        >
                                <TextField
                                        className={undefined}
                                        disabled={false}
                                        floatingLabelFixed={false}
                                        floatingLabelText="Name"
                                        fullWidth={false}
                                        hintText="Name of the service specification..."
                                        multiLine={false}
                                        name="name"
                                        rows={1}
                                        type="name"
                                        underlineShow={true}
                                />
                                <TextField
                                        className={undefined}
                                        disabled={false}
                                        floatingLabelFixed={false}
                                        floatingLabelText="HREF"
                                        fullWidth={false}
                                        hintText="Href of the service specification..."
                                        multiLine={false}
                                        name="href"
                                        rows={1}
                                        type="text"
                                        underlineShow={true}
                                />
                                <TextField
                                        className={undefined}
                                        disabled={false}
                                        floatingLabelFixed={false}
                                        floatingLabelText="Version"
                                        fullWidth={false}
                                        hintText="Version of service specification..."
                                        multiLine={false}
                                        name="version"
                                        rows={1}
                                        type="text"
                                        underlineShow={true}
                                />
                        </ObjectInput>
                </div>
                <Divider
                        className={undefined}
                        inset={false}
                />
                <div>
                        <h3>
                                Related Parties
                        </h3>
                        <ListInput
                                component={[Function]}
                                count={0}
                                max={Infinity}
                                min={1}
                                onChange={[Function]}
                                values={Array []}
                        />
                </div>
                <Divider
                        className={undefined}
                        inset={false}
                />
                <div>
                        <h3>
                                Service Characteristic
                        </h3>
                        <ListInput
                                component={[Function]}
                                count={0}
                                max={Infinity}
                                min={0}
                                onChange={[Function]}
                                values={Array []}
                        />
                </div>
                <Divider
                        className={undefined}
                        inset={false}
                />
                <div>
                        <h3>
                                Service Relationship
                        </h3>
                        <ListInput
                                component={[Function]}
                                count={0}
                                max={Infinity}
                                min={0}
                                onChange={[Function]}
                                values={Array []}
                        />
                </div>
                <Divider
                        className={undefined}
                        inset={false}
                />
                <div>
                        <h3>
                                Supporting Service
                        </h3>
                        <ListInput
                                component={[Function]}
                                count={0}
                                max={Infinity}
                                min={0}
                                onChange={[Function]}
                                values={Array []}
                        />
                </div>
                <Divider
                        className={undefined}
                        inset={false}
                />
                <div>
                        <h3>
                                Supporting Resource
                        </h3>
                        <ListInput
                                component={[Function]}
                                count={0}
                                max={Infinity}
                                min={0}
                                onChange={[Function]}
                                values={Array []}
                        />
                </div>
                <Divider
                        className={undefined}
                        inset={false}
                />
                <div
                        className={undefined}
                >
                        <RaisedButton
                                disabled={true}
                                fullWidth={false}
                                label="Submit"
                                labelPosition="after"
                                onClick={[Function]}
                                primary={true}
                                secondary={false}
                        />
                </div>
        </MuiThemeProvider>
</div>,
      "circle": false,
      "className": undefined,
      "rounded": true,
      "transitionEnabled": true,
      "zDepth": 1,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <MuiThemeProvider
          muiTheme={
                    Object {
                              "appBar": Object {
                                "color": "#00bcd4",
                                "height": 64,
                                "padding": 24,
                                "textColor": "#ffffff",
                                "titleFontWeight": 400,
                              },
                              "avatar": Object {
                                "backgroundColor": "rgb(188, 188, 188)",
                                "color": "#ffffff",
                              },
                              "badge": Object {
                                "color": "#ffffff",
                                "fontWeight": 500,
                                "primaryColor": "#00bcd4",
                                "primaryTextColor": "#ffffff",
                                "secondaryColor": "#ff4081",
                                "secondaryTextColor": "#ffffff",
                                "textColor": "rgba(0, 0, 0, 0.87)",
                              },
                              "baseTheme": Object {
                                "fontFamily": "Roboto, sans-serif",
                                "palette": Object {
                                  "accent1Color": "#ff4081",
                                  "accent2Color": "#f5f5f5",
                                  "accent3Color": "#9e9e9e",
                                  "alternateTextColor": "#ffffff",
                                  "borderColor": "#e0e0e0",
                                  "canvasColor": "#ffffff",
                                  "clockCircleColor": "rgba(0, 0, 0, 0.07)",
                                  "disabledColor": "rgba(0, 0, 0, 0.3)",
                                  "pickerHeaderColor": "#00bcd4",
                                  "primary1Color": "#00bcd4",
                                  "primary2Color": "#0097a7",
                                  "primary3Color": "#bdbdbd",
                                  "secondaryTextColor": "rgba(0, 0, 0, 0.54)",
                                  "shadowColor": "rgba(0, 0, 0, 1)",
                                  "textColor": "rgba(0, 0, 0, 0.87)",
                                },
                                "spacing": Object {
                                  "desktopDrawerMenuItemHeight": 48,
                                  "desktopDropDownMenuFontSize": 15,
                                  "desktopDropDownMenuItemHeight": 32,
                                  "desktopGutter": 24,
                                  "desktopGutterLess": 16,
                                  "desktopGutterMini": 8,
                                  "desktopGutterMore": 32,
                                  "desktopKeylineIncrement": 64,
                                  "desktopSubheaderHeight": 48,
                                  "desktopToolbarHeight": 56,
                                  "iconSize": 24,
                                },
                              },
                              "borderRadius": 2,
                              "bottomNavigation": Object {
                                "backgroundColor": "#ffffff",
                                "height": 56,
                                "selectedColor": "#00bcd4",
                                "selectedFontSize": 14,
                                "unselectedColor": "rgba(0, 0, 0, 0.54)",
                                "unselectedFontSize": 12,
                              },
                              "button": Object {
                                "height": 36,
                                "iconButtonSize": 48,
                                "minWidth": 88,
                              },
                              "card": Object {
                                "fontWeight": 500,
                                "subtitleColor": "rgba(0, 0, 0, 0.54)",
                                "titleColor": "rgba(0, 0, 0, 0.87)",
                              },
                              "cardMedia": Object {
                                "color": "rgba(255, 255, 255, 0.87)",
                                "overlayContentBackground": "rgba(0, 0, 0, 0.54)",
                                "subtitleColor": "rgba(255, 255, 255, 0.54)",
                                "titleColor": "rgba(255, 255, 255, 0.87)",
                              },
                              "cardText": Object {
                                "textColor": "rgba(0, 0, 0, 0.87)",
                              },
                              "checkbox": Object {
                                "boxColor": "rgba(0, 0, 0, 0.87)",
                                "checkedColor": "#00bcd4",
                                "disabledColor": "rgba(0, 0, 0, 0.3)",
                                "labelColor": "rgba(0, 0, 0, 0.87)",
                                "labelDisabledColor": "rgba(0, 0, 0, 0.3)",
                                "requiredColor": "#00bcd4",
                              },
                              "chip": Object {
                                "backgroundColor": "rgb(224, 224, 224)",
                                "deleteIconColor": "rgba(0, 0, 0, 0.26)",
                                "fontSize": 14,
                                "fontWeight": 400,
                                "shadow": "0 1px 6px rgba(0, 0, 0, 0.12),
                            0 1px 4px rgba(0, 0, 0, 0.12)",
                                "textColor": "rgba(0, 0, 0, 0.87)",
                              },
                              "datePicker": Object {
                                "calendarTextColor": "rgba(0, 0, 0, 0.87)",
                                "calendarYearBackgroundColor": "#ffffff",
                                "color": "#7cb342",
                                "headerColor": "#aed581",
                                "selectColor": "#7cb342",
                                "selectTextColor": "#ffffff",
                                "textColor": "#ffffff",
                              },
                              "dialog": Object {
                                "bodyColor": "rgba(0, 0, 0, 0.6)",
                                "bodyFontSize": 16,
                                "titleFontSize": 22,
                              },
                              "drawer": Object {
                                "color": "#ffffff",
                                "width": 256,
                              },
                              "dropDownMenu": Object {
                                "accentColor": "#e0e0e0",
                              },
                              "enhancedButton": Object {
                                "tapHighlightColor": "rgba(0, 0, 0, 0)",
                              },
                              "flatButton": Object {
                                "buttonFilterColor": "#999999",
                                "color": "rgba(0, 0, 0, 0)",
                                "disabledTextColor": "rgba(0, 0, 0, 0.3)",
                                "fontSize": 14,
                                "fontWeight": 500,
                                "primaryTextColor": "#689f38",
                                "secondaryTextColor": "#ff4081",
                                "textColor": "rgba(0, 0, 0, 0.87)",
                              },
                              "floatingActionButton": Object {
                                "buttonSize": 56,
                                "color": "#00bcd4",
                                "disabledColor": "rgb(224, 224, 224)",
                                "disabledTextColor": "rgba(0, 0, 0, 0.3)",
                                "iconColor": "#ffffff",
                                "miniSize": 40,
                                "secondaryColor": "#ff4081",
                                "secondaryIconColor": "#ffffff",
                              },
                              "fontFamily": "Roboto, sans-serif",
                              "gridTile": Object {
                                "textColor": "#ffffff",
                              },
                              "icon": Object {
                                "backgroundColor": "#00bcd4",
                                "color": "#ffffff",
                              },
                              "inkBar": Object {
                                "backgroundColor": "#ff4081",
                              },
                              "isRtl": false,
                              "listItem": Object {
                                "leftIconColor": "#757575",
                                "nestedLevelDepth": 18,
                                "rightIconColor": "#757575",
                                "secondaryTextColor": "rgba(0, 0, 0, 0.54)",
                              },
                              "menu": Object {
                                "backgroundColor": "#ffffff",
                                "containerBackgroundColor": "#ffffff",
                              },
                              "menuItem": Object {
                                "dataHeight": 32,
                                "height": 48,
                                "hoverColor": "rgba(0, 0, 0, 0.1)",
                                "padding": 24,
                                "rightIconDesktopFill": "#757575",
                                "selectedTextColor": "#ff4081",
                              },
                              "menuSubheader": Object {
                                "borderColor": "#e0e0e0",
                                "padding": 24,
                                "textColor": "#00bcd4",
                              },
                              "overlay": Object {
                                "backgroundColor": "rgba(0, 0, 0, 0.54)",
                              },
                              "palette": Object {
                                "accent1Color": "#ff4081",
                                "accent2Color": "#f5f5f5",
                                "accent3Color": "#9e9e9e",
                                "alternateTextColor": "#ffffff",
                                "borderColor": "#e0e0e0",
                                "canvasColor": "#ffffff",
                                "clockCircleColor": "rgba(0, 0, 0, 0.07)",
                                "disabledColor": "rgba(0, 0, 0, 0.3)",
                                "pickerHeaderColor": "#00bcd4",
                                "primary1Color": "#00bcd4",
                                "primary2Color": "#0097a7",
                                "primary3Color": "#bdbdbd",
                                "secondaryTextColor": "rgba(0, 0, 0, 0.54)",
                                "shadowColor": "rgba(0, 0, 0, 1)",
                                "textColor": "rgba(0, 0, 0, 0.87)",
                              },
                              "paper": Object {
                                "backgroundColor": "#ffffff",
                                "color": "rgba(0, 0, 0, 0.87)",
                                "zDepthShadows": Array [
                                  "0 1px 6px rgba(0, 0, 0, 0.12),
                             0 1px 4px rgba(0, 0, 0, 0.12)",
                                  "0 3px 10px rgba(0, 0, 0, 0.16),
                             0 3px 10px rgba(0, 0, 0, 0.23)",
                                  "0 10px 30px rgba(0, 0, 0, 0.19),
                             0 6px 10px rgba(0, 0, 0, 0.23)",
                                  "0 14px 45px rgba(0, 0, 0, 0.25),
                             0 10px 18px rgba(0, 0, 0, 0.22)",
                                  "0 19px 60px rgba(0, 0, 0, 0.3),
                             0 15px 20px rgba(0, 0, 0, 0.22)",
                                ],
                              },
                              "prepareStyles": [Function],
                              "radioButton": Object {
                                "backgroundColor": "#ffffff",
                                "borderColor": "rgba(0, 0, 0, 0.87)",
                                "checkedColor": "#00bcd4",
                                "disabledColor": "rgba(0, 0, 0, 0.3)",
                                "labelColor": "rgba(0, 0, 0, 0.87)",
                                "labelDisabledColor": "rgba(0, 0, 0, 0.3)",
                                "requiredColor": "#00bcd4",
                                "size": 24,
                              },
                              "raisedButton": Object {
                                "color": "#ffffff",
                                "disabledColor": "rgb(229, 229, 229)",
                                "disabledTextColor": "rgba(0, 0, 0, 0.3)",
                                "fontSize": 14,
                                "fontWeight": 500,
                                "primaryColor": "#9ccc65",
                                "primaryTextColor": "#ffffff",
                                "secondaryColor": "#ff4081",
                                "secondaryTextColor": "#ffffff",
                                "textColor": "rgba(0, 0, 0, 0.87)",
                              },
                              "rawTheme": Object {
                                "fontFamily": "Roboto, sans-serif",
                                "palette": Object {
                                  "accent1Color": "#ff4081",
                                  "accent2Color": "#f5f5f5",
                                  "accent3Color": "#9e9e9e",
                                  "alternateTextColor": "#ffffff",
                                  "borderColor": "#e0e0e0",
                                  "canvasColor": "#ffffff",
                                  "clockCircleColor": "rgba(0, 0, 0, 0.07)",
                                  "disabledColor": "rgba(0, 0, 0, 0.3)",
                                  "pickerHeaderColor": "#00bcd4",
                                  "primary1Color": "#00bcd4",
                                  "primary2Color": "#0097a7",
                                  "primary3Color": "#bdbdbd",
                                  "secondaryTextColor": "rgba(0, 0, 0, 0.54)",
                                  "shadowColor": "rgba(0, 0, 0, 1)",
                                  "textColor": "rgba(0, 0, 0, 0.87)",
                                },
                                "spacing": Object {
                                  "desktopDrawerMenuItemHeight": 48,
                                  "desktopDropDownMenuFontSize": 15,
                                  "desktopDropDownMenuItemHeight": 32,
                                  "desktopGutter": 24,
                                  "desktopGutterLess": 16,
                                  "desktopGutterMini": 8,
                                  "desktopGutterMore": 32,
                                  "desktopKeylineIncrement": 64,
                                  "desktopSubheaderHeight": 48,
                                  "desktopToolbarHeight": 56,
                                  "iconSize": 24,
                                },
                              },
                              "refreshIndicator": Object {
                                "loadingStrokeColor": "#00bcd4",
                                "strokeColor": "#e0e0e0",
                              },
                              "ripple": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                              },
                              "slider": Object {
                                "handleColorZero": "#bdbdbd",
                                "handleFillColor": "#ffffff",
                                "handleSize": 12,
                                "handleSizeActive": 18,
                                "handleSizeDisabled": 8,
                                "rippleColor": "#00bcd4",
                                "selectionColor": "#00bcd4",
                                "trackColor": "#bdbdbd",
                                "trackColorSelected": "#9e9e9e",
                                "trackSize": 2,
                              },
                              "snackbar": Object {
                                "actionColor": "#ff4081",
                                "backgroundColor": "rgba(0, 0, 0, 0.87)",
                                "textColor": "#ffffff",
                              },
                              "spacing": Object {
                                "desktopDrawerMenuItemHeight": 48,
                                "desktopDropDownMenuFontSize": 15,
                                "desktopDropDownMenuItemHeight": 32,
                                "desktopGutter": 24,
                                "desktopGutterLess": 16,
                                "desktopGutterMini": 8,
                                "desktopGutterMore": 32,
                                "desktopKeylineIncrement": 64,
                                "desktopSubheaderHeight": 48,
                                "desktopToolbarHeight": 56,
                                "iconSize": 24,
                              },
                              "stepper": Object {
                                "backgroundColor": "transparent",
                                "connectorLineColor": "#bdbdbd",
                                "disabledTextColor": "rgba(0, 0, 0, 0.26)",
                                "hoverBackgroundColor": "rgba(0, 0, 0, 0.06)",
                                "hoveredIconColor": "#616161",
                                "iconColor": "#00bcd4",
                                "inactiveIconColor": "#9e9e9e",
                                "textColor": "rgba(0, 0, 0, 0.87)",
                              },
                              "subheader": Object {
                                "color": "rgba(0, 0, 0, 0.54)",
                                "fontWeight": 500,
                              },
                              "svgIcon": Object {
                                "color": "rgba(0, 0, 0, 0.87)",
                              },
                              "table": Object {
                                "backgroundColor": "#ffffff",
                              },
                              "tableFooter": Object {
                                "borderColor": "#e0e0e0",
                                "textColor": "#9e9e9e",
                              },
                              "tableHeader": Object {
                                "borderColor": "#e0e0e0",
                              },
                              "tableHeaderColumn": Object {
                                "height": 56,
                                "spacing": 24,
                                "textColor": "#9e9e9e",
                              },
                              "tableRow": Object {
                                "borderColor": "#e0e0e0",
                                "height": 48,
                                "hoverColor": "#f5f5f5",
                                "selectedColor": "#e0e0e0",
                                "stripeColor": "rgba(127, 221, 233, 0.4)",
                                "textColor": "rgba(0, 0, 0, 0.87)",
                              },
                              "tableRowColumn": Object {
                                "height": 48,
                                "spacing": 24,
                              },
                              "tabs": Object {
                                "backgroundColor": "#00bcd4",
                                "selectedTextColor": "#ffffff",
                                "textColor": "rgba(255, 255, 255, 0.7)",
                              },
                              "textField": Object {
                                "backgroundColor": "transparent",
                                "borderColor": "#e0e0e0",
                                "disabledTextColor": "rgba(0, 0, 0, 0.3)",
                                "errorColor": "#f44336",
                                "floatingLabelColor": "rgba(0, 0, 0, 0.3)",
                                "focusColor": "#aed581",
                                "hintColor": "rgba(0, 0, 0, 0.3)",
                                "textColor": "rgba(0, 0, 0, 0.87)",
                              },
                              "timePicker": Object {
                                "accentColor": "#00bcd4",
                                "clockCircleColor": "rgba(0, 0, 0, 0.07)",
                                "clockColor": "rgba(0, 0, 0, 0.87)",
                                "color": "#ffffff",
                                "headerColor": "#00bcd4",
                                "selectColor": "#0097a7",
                                "selectTextColor": "#ffffff",
                                "textColor": "#ffffff",
                              },
                              "toggle": Object {
                                "labelColor": "rgba(0, 0, 0, 0.87)",
                                "labelDisabledColor": "rgba(0, 0, 0, 0.3)",
                                "thumbDisabledColor": "#e0e0e0",
                                "thumbOffColor": "#f5f5f5",
                                "thumbOnColor": "#7cb342",
                                "thumbRequiredColor": "#00bcd4",
                                "trackDisabledColor": "#bdbdbd",
                                "trackOffColor": "#bdbdbd",
                                "trackOnColor": "#aed581",
                                "trackRequiredColor": "rgba(0, 188, 212, 0.5)",
                              },
                              "toolbar": Object {
                                "backgroundColor": "rgb(232, 232, 232)",
                                "color": "rgba(0, 0, 0, 0.54)",
                                "height": 56,
                                "hoverColor": "rgba(0, 0, 0, 0.87)",
                                "iconColor": "rgba(0, 0, 0, 0.4)",
                                "menuHoverColor": "rgba(0, 0, 0, 0.1)",
                                "separatorColor": "rgba(0, 0, 0, 0.175)",
                                "titleFontSize": 20,
                              },
                              "tooltip": Object {
                                "color": "#ffffff",
                                "opacity": 0.9,
                                "rippleBackgroundColor": "#616161",
                              },
                              "userAgent": undefined,
                              "zIndex": Object {
                                "appBar": 1100,
                                "dialog": 1500,
                                "dialogOverlay": 1400,
                                "drawer": 1300,
                                "drawerOverlay": 1200,
                                "layer": 2000,
                                "menu": 1000,
                                "popover": 2100,
                                "snackbar": 2900,
                                "tooltip": 3000,
                              },
                            }
          }
>
          <h1
                    className={undefined}
          >
                     Add New Service
          </h1>
          <div
                    className={undefined}
          >
                    <TextField
                              disabled={false}
                              floatingLabelFixed={false}
                              floatingLabelText="HREF"
                              fullWidth={false}
                              hintText="Reference of the service..."
                              multiLine={false}
                              onChange={[Function]}
                              rows={1}
                              type="text"
                              underlineShow={true}
                              value=""
                    />
          </div>
          <div
                    className={undefined}
          >
                    <TextField
                              disabled={false}
                              floatingLabelFixed={false}
                              floatingLabelText="Category"
                              fullWidth={false}
                              hintText="Enter category..."
                              multiLine={false}
                              onChange={[Function]}
                              rows={1}
                              type="text"
                              underlineShow={true}
                              value=""
                    />
          </div>
          <div
                    className={undefined}
          >
                    <TextField
                              disabled={false}
                              errorText="Name is a required field"
                              floatingLabelFixed={false}
                              floatingLabelText="Name"
                              fullWidth={false}
                              hintText="Enter name..."
                              multiLine={false}
                              onChange={[Function]}
                              rows={1}
                              type="text"
                              underlineShow={true}
                              value=""
                    />
          </div>
          <div
                    className={undefined}
          >
                    <TextField
                              disabled={false}
                              floatingLabelFixed={false}
                              floatingLabelText="Description"
                              fullWidth={false}
                              hintText="Description of the service..."
                              multiLine={true}
                              onChange={[Function]}
                              rows={1}
                              type="text"
                              underlineShow={true}
                              value=""
                    />
          </div>
          <Divider
                    className={undefined}
                    inset={false}
          />
          <div
                    className={undefined}
          >
                    <Toggle
                              defaultToggled={false}
                              disabled={false}
                              iconStyle={
                                        Object {
                                                  "marginLeft": "0px",
                                                }
                              }
                              label="Is the service enabled?"
                              labelPosition="left"
                              labelStyle={
                                        Object {
                                                  "width": "50%",
                                                }
                              }
                              onToggle={[Function]}
                              toggled={false}
                    />
          </div>
          <div
                    className={undefined}
          >
                    <Toggle
                              defaultToggled={false}
                              disabled={false}
                              iconStyle={
                                        Object {
                                                  "marginLeft": "0px",
                                                }
                              }
                              label="Has the service started?"
                              labelPosition="left"
                              labelStyle={
                                        Object {
                                                  "width": "50%",
                                                }
                              }
                              onToggle={[Function]}
                              toggled={false}
                    />
          </div>
          <div
                    className={undefined}
          >
                    <Toggle
                              defaultToggled={false}
                              disabled={false}
                              iconStyle={
                                        Object {
                                                  "marginLeft": "0px",
                                                }
                              }
                              label="Can this service be changed without affecting any other service?"
                              labelPosition="left"
                              labelStyle={
                                        Object {
                                                  "width": "50%",
                                                }
                              }
                              onToggle={[Function]}
                              toggled={false}
                    />
          </div>
          <Divider
                    className={undefined}
                    inset={false}
          />
          <div
                    className={undefined}
          >
                    <h3>
                              Start Mode
                    </h3>
                    <SelectField
                              autoWidth={false}
                              disabled={false}
                              fullWidth={false}
                              hintText="Start mode..."
                              multiple={false}
                              onChange={[Function]}
                              value=""
                    >
                              <MenuItem
                                        anchorOrigin={
                                                  Object {
                                                            "horizontal": "right",
                                                            "vertical": "top",
                                                          }
                                        }
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="Unknown"
                                        targetOrigin={
                                                  Object {
                                                            "horizontal": "left",
                                                            "vertical": "top",
                                                          }
                                        }
                                        value={0}
                              />
                              <MenuItem
                                        anchorOrigin={
                                                  Object {
                                                            "horizontal": "right",
                                                            "vertical": "top",
                                                          }
                                        }
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="Automatically by the managed environment"
                                        targetOrigin={
                                                  Object {
                                                            "horizontal": "left",
                                                            "vertical": "top",
                                                          }
                                        }
                                        value={1}
                              />
                              <MenuItem
                                        anchorOrigin={
                                                  Object {
                                                            "horizontal": "right",
                                                            "vertical": "top",
                                                          }
                                        }
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="Automatically by the owning device"
                                        targetOrigin={
                                                  Object {
                                                            "horizontal": "left",
                                                            "vertical": "top",
                                                          }
                                        }
                                        value={2}
                              />
                              <MenuItem
                                        anchorOrigin={
                                                  Object {
                                                            "horizontal": "right",
                                                            "vertical": "top",
                                                          }
                                        }
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="Manually by the Provider of the Service"
                                        targetOrigin={
                                                  Object {
                                                            "horizontal": "left",
                                                            "vertical": "top",
                                                          }
                                        }
                                        value={3}
                              />
                              <MenuItem
                                        anchorOrigin={
                                                  Object {
                                                            "horizontal": "right",
                                                            "vertical": "top",
                                                          }
                                        }
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="Manually by a Customer of the Provider"
                                        targetOrigin={
                                                  Object {
                                                            "horizontal": "left",
                                                            "vertical": "top",
                                                          }
                                        }
                                        value={4}
                              />
                              <MenuItem
                                        anchorOrigin={
                                                  Object {
                                                            "horizontal": "right",
                                                            "vertical": "top",
                                                          }
                                        }
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="Any of the above"
                                        targetOrigin={
                                                  Object {
                                                            "horizontal": "left",
                                                            "vertical": "top",
                                                          }
                                        }
                                        value={5}
                              />
                    </SelectField>
          </div>
          <div
                    className={undefined}
          >
                    <h3>
                              State
                    </h3>
                    <SelectField
                              autoWidth={false}
                              disabled={false}
                              fullWidth={false}
                              hintText="State of the service..."
                              multiple={false}
                              onChange={[Function]}
                              value=""
                    >
                              <MenuItem
                                        anchorOrigin={
                                                  Object {
                                                            "horizontal": "right",
                                                            "vertical": "top",
                                                          }
                                        }
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="feasibilityChecked"
                                        targetOrigin={
                                                  Object {
                                                            "horizontal": "left",
                                                            "vertical": "top",
                                                          }
                                        }
                                        value={0}
                              />
                              <MenuItem
                                        anchorOrigin={
                                                  Object {
                                                            "horizontal": "right",
                                                            "vertical": "top",
                                                          }
                                        }
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="designed"
                                        targetOrigin={
                                                  Object {
                                                            "horizontal": "left",
                                                            "vertical": "top",
                                                          }
                                        }
                                        value={1}
                              />
                              <MenuItem
                                        anchorOrigin={
                                                  Object {
                                                            "horizontal": "right",
                                                            "vertical": "top",
                                                          }
                                        }
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="reserved"
                                        targetOrigin={
                                                  Object {
                                                            "horizontal": "left",
                                                            "vertical": "top",
                                                          }
                                        }
                                        value={2}
                              />
                              <MenuItem
                                        anchorOrigin={
                                                  Object {
                                                            "horizontal": "right",
                                                            "vertical": "top",
                                                          }
                                        }
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="active"
                                        targetOrigin={
                                                  Object {
                                                            "horizontal": "left",
                                                            "vertical": "top",
                                                          }
                                        }
                                        value={3}
                              />
                              <MenuItem
                                        anchorOrigin={
                                                  Object {
                                                            "horizontal": "right",
                                                            "vertical": "top",
                                                          }
                                        }
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="inactive"
                                        targetOrigin={
                                                  Object {
                                                            "horizontal": "left",
                                                            "vertical": "top",
                                                          }
                                        }
                                        value={4}
                              />
                              <MenuItem
                                        anchorOrigin={
                                                  Object {
                                                            "horizontal": "right",
                                                            "vertical": "top",
                                                          }
                                        }
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="terminated"
                                        targetOrigin={
                                                  Object {
                                                            "horizontal": "left",
                                                            "vertical": "top",
                                                          }
                                        }
                                        value={5}
                              />
                    </SelectField>
          </div>
          <Divider
                    className={undefined}
                    inset={false}
          />
          <div
                    className={undefined}
          >
                    <h3>
                              Order date
                    </h3>
                    <DatePicker
                              autoOk={false}
                              container="dialog"
                              disableYearSelection={false}
                              disabled={false}
                              firstDayOfWeek={1}
                              hideCalendarDate={false}
                              hintText="Order Date"
                              onChange={[Function]}
                              openToYearSelection={false}
                              style={Object {}}
                              value=""
                    />
          </div>
          <div
                    className={undefined}
          >
                    <h3>
                              Start date
                    </h3>
                    <DatePicker
                              autoOk={false}
                              container="dialog"
                              disableYearSelection={false}
                              disabled={false}
                              firstDayOfWeek={1}
                              hideCalendarDate={false}
                              hintText="Start Date"
                              onChange={[Function]}
                              openToYearSelection={false}
                              style={Object {}}
                              value=""
                    />
          </div>
          <div
                    className={undefined}
          >
                    <h3>
                              End date
                    </h3>
                    <DatePicker
                              autoOk={false}
                              container="dialog"
                              disableYearSelection={false}
                              disabled={false}
                              firstDayOfWeek={1}
                              hideCalendarDate={false}
                              hintText="End Date"
                              onChange={[Function]}
                              openToYearSelection={false}
                              style={Object {}}
                              value=""
                    />
                    <br />
          </div>
          <Divider
                    className={undefined}
                    inset={false}
          />
          <div>
                    <h3>
                              Service Specification
                    </h3>
                    <ObjectInput
                              mapValues={[Function]}
                              onChange={[Function]}
                              value={
                                        Object {
                                                  "href": "",
                                                  "name": "",
                                                  "version": "",
                                                }
                              }
                    >
                              <TextField
                                        className={undefined}
                                        disabled={false}
                                        floatingLabelFixed={false}
                                        floatingLabelText="Name"
                                        fullWidth={false}
                                        hintText="Name of the service specification..."
                                        multiLine={false}
                                        name="name"
                                        rows={1}
                                        type="name"
                                        underlineShow={true}
                              />
                              <TextField
                                        className={undefined}
                                        disabled={false}
                                        floatingLabelFixed={false}
                                        floatingLabelText="HREF"
                                        fullWidth={false}
                                        hintText="Href of the service specification..."
                                        multiLine={false}
                                        name="href"
                                        rows={1}
                                        type="text"
                                        underlineShow={true}
                              />
                              <TextField
                                        className={undefined}
                                        disabled={false}
                                        floatingLabelFixed={false}
                                        floatingLabelText="Version"
                                        fullWidth={false}
                                        hintText="Version of service specification..."
                                        multiLine={false}
                                        name="version"
                                        rows={1}
                                        type="text"
                                        underlineShow={true}
                              />
                    </ObjectInput>
          </div>
          <Divider
                    className={undefined}
                    inset={false}
          />
          <div>
                    <h3>
                              Related Parties
                    </h3>
                    <ListInput
                              component={[Function]}
                              count={0}
                              max={Infinity}
                              min={1}
                              onChange={[Function]}
                              values={Array []}
                    />
          </div>
          <Divider
                    className={undefined}
                    inset={false}
          />
          <div>
                    <h3>
                              Service Characteristic
                    </h3>
                    <ListInput
                              component={[Function]}
                              count={0}
                              max={Infinity}
                              min={0}
                              onChange={[Function]}
                              values={Array []}
                    />
          </div>
          <Divider
                    className={undefined}
                    inset={false}
          />
          <div>
                    <h3>
                              Service Relationship
                    </h3>
                    <ListInput
                              component={[Function]}
                              count={0}
                              max={Infinity}
                              min={0}
                              onChange={[Function]}
                              values={Array []}
                    />
          </div>
          <Divider
                    className={undefined}
                    inset={false}
          />
          <div>
                    <h3>
                              Supporting Service
                    </h3>
                    <ListInput
                              component={[Function]}
                              count={0}
                              max={Infinity}
                              min={0}
                              onChange={[Function]}
                              values={Array []}
                    />
          </div>
          <Divider
                    className={undefined}
                    inset={false}
          />
          <div>
                    <h3>
                              Supporting Resource
                    </h3>
                    <ListInput
                              component={[Function]}
                              count={0}
                              max={Infinity}
                              min={0}
                              onChange={[Function]}
                              values={Array []}
                    />
          </div>
          <Divider
                    className={undefined}
                    inset={false}
          />
          <div
                    className={undefined}
          >
                    <RaisedButton
                              disabled={true}
                              fullWidth={false}
                              label="Submit"
                              labelPosition="after"
                              onClick={[Function]}
                              primary={true}
                              secondary={false}
                    />
          </div>
</MuiThemeProvider>,
        "className": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <h1
              className={undefined}
>
               Add New Service
</h1>,
            <div
              className={undefined}
>
              <TextField
                            disabled={false}
                            floatingLabelFixed={false}
                            floatingLabelText="HREF"
                            fullWidth={false}
                            hintText="Reference of the service..."
                            multiLine={false}
                            onChange={[Function]}
                            rows={1}
                            type="text"
                            underlineShow={true}
                            value=""
              />
</div>,
            <div
              className={undefined}
>
              <TextField
                            disabled={false}
                            floatingLabelFixed={false}
                            floatingLabelText="Category"
                            fullWidth={false}
                            hintText="Enter category..."
                            multiLine={false}
                            onChange={[Function]}
                            rows={1}
                            type="text"
                            underlineShow={true}
                            value=""
              />
</div>,
            <div
              className={undefined}
>
              <TextField
                            disabled={false}
                            errorText="Name is a required field"
                            floatingLabelFixed={false}
                            floatingLabelText="Name"
                            fullWidth={false}
                            hintText="Enter name..."
                            multiLine={false}
                            onChange={[Function]}
                            rows={1}
                            type="text"
                            underlineShow={true}
                            value=""
              />
</div>,
            <div
              className={undefined}
>
              <TextField
                            disabled={false}
                            floatingLabelFixed={false}
                            floatingLabelText="Description"
                            fullWidth={false}
                            hintText="Description of the service..."
                            multiLine={true}
                            onChange={[Function]}
                            rows={1}
                            type="text"
                            underlineShow={true}
                            value=""
              />
</div>,
            <Divider
              className={undefined}
              inset={false}
/>,
            <div
              className={undefined}
>
              <Toggle
                            defaultToggled={false}
                            disabled={false}
                            iconStyle={
                                          Object {
                                                        "marginLeft": "0px",
                                                      }
                            }
                            label="Is the service enabled?"
                            labelPosition="left"
                            labelStyle={
                                          Object {
                                                        "width": "50%",
                                                      }
                            }
                            onToggle={[Function]}
                            toggled={false}
              />
</div>,
            <div
              className={undefined}
>
              <Toggle
                            defaultToggled={false}
                            disabled={false}
                            iconStyle={
                                          Object {
                                                        "marginLeft": "0px",
                                                      }
                            }
                            label="Has the service started?"
                            labelPosition="left"
                            labelStyle={
                                          Object {
                                                        "width": "50%",
                                                      }
                            }
                            onToggle={[Function]}
                            toggled={false}
              />
</div>,
            <div
              className={undefined}
>
              <Toggle
                            defaultToggled={false}
                            disabled={false}
                            iconStyle={
                                          Object {
                                                        "marginLeft": "0px",
                                                      }
                            }
                            label="Can this service be changed without affecting any other service?"
                            labelPosition="left"
                            labelStyle={
                                          Object {
                                                        "width": "50%",
                                                      }
                            }
                            onToggle={[Function]}
                            toggled={false}
              />
</div>,
            <Divider
              className={undefined}
              inset={false}
/>,
            <div
              className={undefined}
>
              <h3>
                            Start Mode
              </h3>
              <SelectField
                            autoWidth={false}
                            disabled={false}
                            fullWidth={false}
                            hintText="Start mode..."
                            multiple={false}
                            onChange={[Function]}
                            value=""
              >
                            <MenuItem
                                          anchorOrigin={
                                                        Object {
                                                                      "horizontal": "right",
                                                                      "vertical": "top",
                                                                    }
                                          }
                                          checked={false}
                                          desktop={false}
                                          disabled={false}
                                          focusState="none"
                                          insetChildren={false}
                                          primaryText="Unknown"
                                          targetOrigin={
                                                        Object {
                                                                      "horizontal": "left",
                                                                      "vertical": "top",
                                                                    }
                                          }
                                          value={0}
                            />
                            <MenuItem
                                          anchorOrigin={
                                                        Object {
                                                                      "horizontal": "right",
                                                                      "vertical": "top",
                                                                    }
                                          }
                                          checked={false}
                                          desktop={false}
                                          disabled={false}
                                          focusState="none"
                                          insetChildren={false}
                                          primaryText="Automatically by the managed environment"
                                          targetOrigin={
                                                        Object {
                                                                      "horizontal": "left",
                                                                      "vertical": "top",
                                                                    }
                                          }
                                          value={1}
                            />
                            <MenuItem
                                          anchorOrigin={
                                                        Object {
                                                                      "horizontal": "right",
                                                                      "vertical": "top",
                                                                    }
                                          }
                                          checked={false}
                                          desktop={false}
                                          disabled={false}
                                          focusState="none"
                                          insetChildren={false}
                                          primaryText="Automatically by the owning device"
                                          targetOrigin={
                                                        Object {
                                                                      "horizontal": "left",
                                                                      "vertical": "top",
                                                                    }
                                          }
                                          value={2}
                            />
                            <MenuItem
                                          anchorOrigin={
                                                        Object {
                                                                      "horizontal": "right",
                                                                      "vertical": "top",
                                                                    }
                                          }
                                          checked={false}
                                          desktop={false}
                                          disabled={false}
                                          focusState="none"
                                          insetChildren={false}
                                          primaryText="Manually by the Provider of the Service"
                                          targetOrigin={
                                                        Object {
                                                                      "horizontal": "left",
                                                                      "vertical": "top",
                                                                    }
                                          }
                                          value={3}
                            />
                            <MenuItem
                                          anchorOrigin={
                                                        Object {
                                                                      "horizontal": "right",
                                                                      "vertical": "top",
                                                                    }
                                          }
                                          checked={false}
                                          desktop={false}
                                          disabled={false}
                                          focusState="none"
                                          insetChildren={false}
                                          primaryText="Manually by a Customer of the Provider"
                                          targetOrigin={
                                                        Object {
                                                                      "horizontal": "left",
                                                                      "vertical": "top",
                                                                    }
                                          }
                                          value={4}
                            />
                            <MenuItem
                                          anchorOrigin={
                                                        Object {
                                                                      "horizontal": "right",
                                                                      "vertical": "top",
                                                                    }
                                          }
                                          checked={false}
                                          desktop={false}
                                          disabled={false}
                                          focusState="none"
                                          insetChildren={false}
                                          primaryText="Any of the above"
                                          targetOrigin={
                                                        Object {
                                                                      "horizontal": "left",
                                                                      "vertical": "top",
                                                                    }
                                          }
                                          value={5}
                            />
              </SelectField>
</div>,
            <div
              className={undefined}
>
              <h3>
                            State
              </h3>
              <SelectField
                            autoWidth={false}
                            disabled={false}
                            fullWidth={false}
                            hintText="State of the service..."
                            multiple={false}
                            onChange={[Function]}
                            value=""
              >
                            <MenuItem
                                          anchorOrigin={
                                                        Object {
                                                                      "horizontal": "right",
                                                                      "vertical": "top",
                                                                    }
                                          }
                                          checked={false}
                                          desktop={false}
                                          disabled={false}
                                          focusState="none"
                                          insetChildren={false}
                                          primaryText="feasibilityChecked"
                                          targetOrigin={
                                                        Object {
                                                                      "horizontal": "left",
                                                                      "vertical": "top",
                                                                    }
                                          }
                                          value={0}
                            />
                            <MenuItem
                                          anchorOrigin={
                                                        Object {
                                                                      "horizontal": "right",
                                                                      "vertical": "top",
                                                                    }
                                          }
                                          checked={false}
                                          desktop={false}
                                          disabled={false}
                                          focusState="none"
                                          insetChildren={false}
                                          primaryText="designed"
                                          targetOrigin={
                                                        Object {
                                                                      "horizontal": "left",
                                                                      "vertical": "top",
                                                                    }
                                          }
                                          value={1}
                            />
                            <MenuItem
                                          anchorOrigin={
                                                        Object {
                                                                      "horizontal": "right",
                                                                      "vertical": "top",
                                                                    }
                                          }
                                          checked={false}
                                          desktop={false}
                                          disabled={false}
                                          focusState="none"
                                          insetChildren={false}
                                          primaryText="reserved"
                                          targetOrigin={
                                                        Object {
                                                                      "horizontal": "left",
                                                                      "vertical": "top",
                                                                    }
                                          }
                                          value={2}
                            />
                            <MenuItem
                                          anchorOrigin={
                                                        Object {
                                                                      "horizontal": "right",
                                                                      "vertical": "top",
                                                                    }
                                          }
                                          checked={false}
                                          desktop={false}
                                          disabled={false}
                                          focusState="none"
                                          insetChildren={false}
                                          primaryText="active"
                                          targetOrigin={
                                                        Object {
                                                                      "horizontal": "left",
                                                                      "vertical": "top",
                                                                    }
                                          }
                                          value={3}
                            />
                            <MenuItem
                                          anchorOrigin={
                                                        Object {
                                                                      "horizontal": "right",
                                                                      "vertical": "top",
                                                                    }
                                          }
                                          checked={false}
                                          desktop={false}
                                          disabled={false}
                                          focusState="none"
                                          insetChildren={false}
                                          primaryText="inactive"
                                          targetOrigin={
                                                        Object {
                                                                      "horizontal": "left",
                                                                      "vertical": "top",
                                                                    }
                                          }
                                          value={4}
                            />
                            <MenuItem
                                          anchorOrigin={
                                                        Object {
                                                                      "horizontal": "right",
                                                                      "vertical": "top",
                                                                    }
                                          }
                                          checked={false}
                                          desktop={false}
                                          disabled={false}
                                          focusState="none"
                                          insetChildren={false}
                                          primaryText="terminated"
                                          targetOrigin={
                                                        Object {
                                                                      "horizontal": "left",
                                                                      "vertical": "top",
                                                                    }
                                          }
                                          value={5}
                            />
              </SelectField>
</div>,
            <Divider
              className={undefined}
              inset={false}
/>,
            <div
              className={undefined}
>
              <h3>
                            Order date
              </h3>
              <DatePicker
                            autoOk={false}
                            container="dialog"
                            disableYearSelection={false}
                            disabled={false}
                            firstDayOfWeek={1}
                            hideCalendarDate={false}
                            hintText="Order Date"
                            onChange={[Function]}
                            openToYearSelection={false}
                            style={Object {}}
                            value=""
              />
</div>,
            <div
              className={undefined}
>
              <h3>
                            Start date
              </h3>
              <DatePicker
                            autoOk={false}
                            container="dialog"
                            disableYearSelection={false}
                            disabled={false}
                            firstDayOfWeek={1}
                            hideCalendarDate={false}
                            hintText="Start Date"
                            onChange={[Function]}
                            openToYearSelection={false}
                            style={Object {}}
                            value=""
              />
</div>,
            <div
              className={undefined}
>
              <h3>
                            End date
              </h3>
              <DatePicker
                            autoOk={false}
                            container="dialog"
                            disableYearSelection={false}
                            disabled={false}
                            firstDayOfWeek={1}
                            hideCalendarDate={false}
                            hintText="End Date"
                            onChange={[Function]}
                            openToYearSelection={false}
                            style={Object {}}
                            value=""
              />
              <br />
</div>,
            <Divider
              className={undefined}
              inset={false}
/>,
            <div>
              <h3>
                            Service Specification
              </h3>
              <ObjectInput
                            mapValues={[Function]}
                            onChange={[Function]}
                            value={
                                          Object {
                                                        "href": "",
                                                        "name": "",
                                                        "version": "",
                                                      }
                            }
              >
                            <TextField
                                          className={undefined}
                                          disabled={false}
                                          floatingLabelFixed={false}
                                          floatingLabelText="Name"
                                          fullWidth={false}
                                          hintText="Name of the service specification..."
                                          multiLine={false}
                                          name="name"
                                          rows={1}
                                          type="name"
                                          underlineShow={true}
                            />
                            <TextField
                                          className={undefined}
                                          disabled={false}
                                          floatingLabelFixed={false}
                                          floatingLabelText="HREF"
                                          fullWidth={false}
                                          hintText="Href of the service specification..."
                                          multiLine={false}
                                          name="href"
                                          rows={1}
                                          type="text"
                                          underlineShow={true}
                            />
                            <TextField
                                          className={undefined}
                                          disabled={false}
                                          floatingLabelFixed={false}
                                          floatingLabelText="Version"
                                          fullWidth={false}
                                          hintText="Version of service specification..."
                                          multiLine={false}
                                          name="version"
                                          rows={1}
                                          type="text"
                                          underlineShow={true}
                            />
              </ObjectInput>
</div>,
            <Divider
              className={undefined}
              inset={false}
/>,
            <div>
              <h3>
                            Related Parties
              </h3>
              <ListInput
                            component={[Function]}
                            count={0}
                            max={Infinity}
                            min={1}
                            onChange={[Function]}
                            values={Array []}
              />
</div>,
            <Divider
              className={undefined}
              inset={false}
/>,
            <div>
              <h3>
                            Service Characteristic
              </h3>
              <ListInput
                            component={[Function]}
                            count={0}
                            max={Infinity}
                            min={0}
                            onChange={[Function]}
                            values={Array []}
              />
</div>,
            <Divider
              className={undefined}
              inset={false}
/>,
            <div>
              <h3>
                            Service Relationship
              </h3>
              <ListInput
                            component={[Function]}
                            count={0}
                            max={Infinity}
                            min={0}
                            onChange={[Function]}
                            values={Array []}
              />
</div>,
            <Divider
              className={undefined}
              inset={false}
/>,
            <div>
              <h3>
                            Supporting Service
              </h3>
              <ListInput
                            component={[Function]}
                            count={0}
                            max={Infinity}
                            min={0}
                            onChange={[Function]}
                            values={Array []}
              />
</div>,
            <Divider
              className={undefined}
              inset={false}
/>,
            <div>
              <h3>
                            Supporting Resource
              </h3>
              <ListInput
                            component={[Function]}
                            count={0}
                            max={Infinity}
                            min={0}
                            onChange={[Function]}
                            values={Array []}
              />
</div>,
            <Divider
              className={undefined}
              inset={false}
/>,
            <div
              className={undefined}
>
              <RaisedButton
                            disabled={true}
                            fullWidth={false}
                            label="Submit"
                            labelPosition="after"
                            onClick={[Function]}
                            primary={true}
                            secondary={false}
              />
</div>,
          ],
          "muiTheme": Object {
            "appBar": Object {
              "color": "#00bcd4",
              "height": 64,
              "padding": 24,
              "textColor": "#ffffff",
              "titleFontWeight": 400,
            },
            "avatar": Object {
              "backgroundColor": "rgb(188, 188, 188)",
              "color": "#ffffff",
            },
            "badge": Object {
              "color": "#ffffff",
              "fontWeight": 500,
              "primaryColor": "#00bcd4",
              "primaryTextColor": "#ffffff",
              "secondaryColor": "#ff4081",
              "secondaryTextColor": "#ffffff",
              "textColor": "rgba(0, 0, 0, 0.87)",
            },
            "baseTheme": Object {
              "fontFamily": "Roboto, sans-serif",
              "palette": Object {
                "accent1Color": "#ff4081",
                "accent2Color": "#f5f5f5",
                "accent3Color": "#9e9e9e",
                "alternateTextColor": "#ffffff",
                "borderColor": "#e0e0e0",
                "canvasColor": "#ffffff",
                "clockCircleColor": "rgba(0, 0, 0, 0.07)",
                "disabledColor": "rgba(0, 0, 0, 0.3)",
                "pickerHeaderColor": "#00bcd4",
                "primary1Color": "#00bcd4",
                "primary2Color": "#0097a7",
                "primary3Color": "#bdbdbd",
                "secondaryTextColor": "rgba(0, 0, 0, 0.54)",
                "shadowColor": "rgba(0, 0, 0, 1)",
                "textColor": "rgba(0, 0, 0, 0.87)",
              },
              "spacing": Object {
                "desktopDrawerMenuItemHeight": 48,
                "desktopDropDownMenuFontSize": 15,
                "desktopDropDownMenuItemHeight": 32,
                "desktopGutter": 24,
                "desktopGutterLess": 16,
                "desktopGutterMini": 8,
                "desktopGutterMore": 32,
                "desktopKeylineIncrement": 64,
                "desktopSubheaderHeight": 48,
                "desktopToolbarHeight": 56,
                "iconSize": 24,
              },
            },
            "borderRadius": 2,
            "bottomNavigation": Object {
              "backgroundColor": "#ffffff",
              "height": 56,
              "selectedColor": "#00bcd4",
              "selectedFontSize": 14,
              "unselectedColor": "rgba(0, 0, 0, 0.54)",
              "unselectedFontSize": 12,
            },
            "button": Object {
              "height": 36,
              "iconButtonSize": 48,
              "minWidth": 88,
            },
            "card": Object {
              "fontWeight": 500,
              "subtitleColor": "rgba(0, 0, 0, 0.54)",
              "titleColor": "rgba(0, 0, 0, 0.87)",
            },
            "cardMedia": Object {
              "color": "rgba(255, 255, 255, 0.87)",
              "overlayContentBackground": "rgba(0, 0, 0, 0.54)",
              "subtitleColor": "rgba(255, 255, 255, 0.54)",
              "titleColor": "rgba(255, 255, 255, 0.87)",
            },
            "cardText": Object {
              "textColor": "rgba(0, 0, 0, 0.87)",
            },
            "checkbox": Object {
              "boxColor": "rgba(0, 0, 0, 0.87)",
              "checkedColor": "#00bcd4",
              "disabledColor": "rgba(0, 0, 0, 0.3)",
              "labelColor": "rgba(0, 0, 0, 0.87)",
              "labelDisabledColor": "rgba(0, 0, 0, 0.3)",
              "requiredColor": "#00bcd4",
            },
            "chip": Object {
              "backgroundColor": "rgb(224, 224, 224)",
              "deleteIconColor": "rgba(0, 0, 0, 0.26)",
              "fontSize": 14,
              "fontWeight": 400,
              "shadow": "0 1px 6px rgba(0, 0, 0, 0.12),
        0 1px 4px rgba(0, 0, 0, 0.12)",
              "textColor": "rgba(0, 0, 0, 0.87)",
            },
            "datePicker": Object {
              "calendarTextColor": "rgba(0, 0, 0, 0.87)",
              "calendarYearBackgroundColor": "#ffffff",
              "color": "#7cb342",
              "headerColor": "#aed581",
              "selectColor": "#7cb342",
              "selectTextColor": "#ffffff",
              "textColor": "#ffffff",
            },
            "dialog": Object {
              "bodyColor": "rgba(0, 0, 0, 0.6)",
              "bodyFontSize": 16,
              "titleFontSize": 22,
            },
            "drawer": Object {
              "color": "#ffffff",
              "width": 256,
            },
            "dropDownMenu": Object {
              "accentColor": "#e0e0e0",
            },
            "enhancedButton": Object {
              "tapHighlightColor": "rgba(0, 0, 0, 0)",
            },
            "flatButton": Object {
              "buttonFilterColor": "#999999",
              "color": "rgba(0, 0, 0, 0)",
              "disabledTextColor": "rgba(0, 0, 0, 0.3)",
              "fontSize": 14,
              "fontWeight": 500,
              "primaryTextColor": "#689f38",
              "secondaryTextColor": "#ff4081",
              "textColor": "rgba(0, 0, 0, 0.87)",
            },
            "floatingActionButton": Object {
              "buttonSize": 56,
              "color": "#00bcd4",
              "disabledColor": "rgb(224, 224, 224)",
              "disabledTextColor": "rgba(0, 0, 0, 0.3)",
              "iconColor": "#ffffff",
              "miniSize": 40,
              "secondaryColor": "#ff4081",
              "secondaryIconColor": "#ffffff",
            },
            "fontFamily": "Roboto, sans-serif",
            "gridTile": Object {
              "textColor": "#ffffff",
            },
            "icon": Object {
              "backgroundColor": "#00bcd4",
              "color": "#ffffff",
            },
            "inkBar": Object {
              "backgroundColor": "#ff4081",
            },
            "isRtl": false,
            "listItem": Object {
              "leftIconColor": "#757575",
              "nestedLevelDepth": 18,
              "rightIconColor": "#757575",
              "secondaryTextColor": "rgba(0, 0, 0, 0.54)",
            },
            "menu": Object {
              "backgroundColor": "#ffffff",
              "containerBackgroundColor": "#ffffff",
            },
            "menuItem": Object {
              "dataHeight": 32,
              "height": 48,
              "hoverColor": "rgba(0, 0, 0, 0.1)",
              "padding": 24,
              "rightIconDesktopFill": "#757575",
              "selectedTextColor": "#ff4081",
            },
            "menuSubheader": Object {
              "borderColor": "#e0e0e0",
              "padding": 24,
              "textColor": "#00bcd4",
            },
            "overlay": Object {
              "backgroundColor": "rgba(0, 0, 0, 0.54)",
            },
            "palette": Object {
              "accent1Color": "#ff4081",
              "accent2Color": "#f5f5f5",
              "accent3Color": "#9e9e9e",
              "alternateTextColor": "#ffffff",
              "borderColor": "#e0e0e0",
              "canvasColor": "#ffffff",
              "clockCircleColor": "rgba(0, 0, 0, 0.07)",
              "disabledColor": "rgba(0, 0, 0, 0.3)",
              "pickerHeaderColor": "#00bcd4",
              "primary1Color": "#00bcd4",
              "primary2Color": "#0097a7",
              "primary3Color": "#bdbdbd",
              "secondaryTextColor": "rgba(0, 0, 0, 0.54)",
              "shadowColor": "rgba(0, 0, 0, 1)",
              "textColor": "rgba(0, 0, 0, 0.87)",
            },
            "paper": Object {
              "backgroundColor": "#ffffff",
              "color": "rgba(0, 0, 0, 0.87)",
              "zDepthShadows": Array [
                "0 1px 6px rgba(0, 0, 0, 0.12),
         0 1px 4px rgba(0, 0, 0, 0.12)",
                "0 3px 10px rgba(0, 0, 0, 0.16),
         0 3px 10px rgba(0, 0, 0, 0.23)",
                "0 10px 30px rgba(0, 0, 0, 0.19),
         0 6px 10px rgba(0, 0, 0, 0.23)",
                "0 14px 45px rgba(0, 0, 0, 0.25),
         0 10px 18px rgba(0, 0, 0, 0.22)",
                "0 19px 60px rgba(0, 0, 0, 0.3),
         0 15px 20px rgba(0, 0, 0, 0.22)",
              ],
            },
            "prepareStyles": [Function],
            "radioButton": Object {
              "backgroundColor": "#ffffff",
              "borderColor": "rgba(0, 0, 0, 0.87)",
              "checkedColor": "#00bcd4",
              "disabledColor": "rgba(0, 0, 0, 0.3)",
              "labelColor": "rgba(0, 0, 0, 0.87)",
              "labelDisabledColor": "rgba(0, 0, 0, 0.3)",
              "requiredColor": "#00bcd4",
              "size": 24,
            },
            "raisedButton": Object {
              "color": "#ffffff",
              "disabledColor": "rgb(229, 229, 229)",
              "disabledTextColor": "rgba(0, 0, 0, 0.3)",
              "fontSize": 14,
              "fontWeight": 500,
              "primaryColor": "#9ccc65",
              "primaryTextColor": "#ffffff",
              "secondaryColor": "#ff4081",
              "secondaryTextColor": "#ffffff",
              "textColor": "rgba(0, 0, 0, 0.87)",
            },
            "rawTheme": Object {
              "fontFamily": "Roboto, sans-serif",
              "palette": Object {
                "accent1Color": "#ff4081",
                "accent2Color": "#f5f5f5",
                "accent3Color": "#9e9e9e",
                "alternateTextColor": "#ffffff",
                "borderColor": "#e0e0e0",
                "canvasColor": "#ffffff",
                "clockCircleColor": "rgba(0, 0, 0, 0.07)",
                "disabledColor": "rgba(0, 0, 0, 0.3)",
                "pickerHeaderColor": "#00bcd4",
                "primary1Color": "#00bcd4",
                "primary2Color": "#0097a7",
                "primary3Color": "#bdbdbd",
                "secondaryTextColor": "rgba(0, 0, 0, 0.54)",
                "shadowColor": "rgba(0, 0, 0, 1)",
                "textColor": "rgba(0, 0, 0, 0.87)",
              },
              "spacing": Object {
                "desktopDrawerMenuItemHeight": 48,
                "desktopDropDownMenuFontSize": 15,
                "desktopDropDownMenuItemHeight": 32,
                "desktopGutter": 24,
                "desktopGutterLess": 16,
                "desktopGutterMini": 8,
                "desktopGutterMore": 32,
                "desktopKeylineIncrement": 64,
                "desktopSubheaderHeight": 48,
                "desktopToolbarHeight": 56,
                "iconSize": 24,
              },
            },
            "refreshIndicator": Object {
              "loadingStrokeColor": "#00bcd4",
              "strokeColor": "#e0e0e0",
            },
            "ripple": Object {
              "color": "rgba(0, 0, 0, 0.87)",
            },
            "slider": Object {
              "handleColorZero": "#bdbdbd",
              "handleFillColor": "#ffffff",
              "handleSize": 12,
              "handleSizeActive": 18,
              "handleSizeDisabled": 8,
              "rippleColor": "#00bcd4",
              "selectionColor": "#00bcd4",
              "trackColor": "#bdbdbd",
              "trackColorSelected": "#9e9e9e",
              "trackSize": 2,
            },
            "snackbar": Object {
              "actionColor": "#ff4081",
              "backgroundColor": "rgba(0, 0, 0, 0.87)",
              "textColor": "#ffffff",
            },
            "spacing": Object {
              "desktopDrawerMenuItemHeight": 48,
              "desktopDropDownMenuFontSize": 15,
              "desktopDropDownMenuItemHeight": 32,
              "desktopGutter": 24,
              "desktopGutterLess": 16,
              "desktopGutterMini": 8,
              "desktopGutterMore": 32,
              "desktopKeylineIncrement": 64,
              "desktopSubheaderHeight": 48,
              "desktopToolbarHeight": 56,
              "iconSize": 24,
            },
            "stepper": Object {
              "backgroundColor": "transparent",
              "connectorLineColor": "#bdbdbd",
              "disabledTextColor": "rgba(0, 0, 0, 0.26)",
              "hoverBackgroundColor": "rgba(0, 0, 0, 0.06)",
              "hoveredIconColor": "#616161",
              "iconColor": "#00bcd4",
              "inactiveIconColor": "#9e9e9e",
              "textColor": "rgba(0, 0, 0, 0.87)",
            },
            "subheader": Object {
              "color": "rgba(0, 0, 0, 0.54)",
              "fontWeight": 500,
            },
            "svgIcon": Object {
              "color": "rgba(0, 0, 0, 0.87)",
            },
            "table": Object {
              "backgroundColor": "#ffffff",
            },
            "tableFooter": Object {
              "borderColor": "#e0e0e0",
              "textColor": "#9e9e9e",
            },
            "tableHeader": Object {
              "borderColor": "#e0e0e0",
            },
            "tableHeaderColumn": Object {
              "height": 56,
              "spacing": 24,
              "textColor": "#9e9e9e",
            },
            "tableRow": Object {
              "borderColor": "#e0e0e0",
              "height": 48,
              "hoverColor": "#f5f5f5",
              "selectedColor": "#e0e0e0",
              "stripeColor": "rgba(127, 221, 233, 0.4)",
              "textColor": "rgba(0, 0, 0, 0.87)",
            },
            "tableRowColumn": Object {
              "height": 48,
              "spacing": 24,
            },
            "tabs": Object {
              "backgroundColor": "#00bcd4",
              "selectedTextColor": "#ffffff",
              "textColor": "rgba(255, 255, 255, 0.7)",
            },
            "textField": Object {
              "backgroundColor": "transparent",
              "borderColor": "#e0e0e0",
              "disabledTextColor": "rgba(0, 0, 0, 0.3)",
              "errorColor": "#f44336",
              "floatingLabelColor": "rgba(0, 0, 0, 0.3)",
              "focusColor": "#aed581",
              "hintColor": "rgba(0, 0, 0, 0.3)",
              "textColor": "rgba(0, 0, 0, 0.87)",
            },
            "timePicker": Object {
              "accentColor": "#00bcd4",
              "clockCircleColor": "rgba(0, 0, 0, 0.07)",
              "clockColor": "rgba(0, 0, 0, 0.87)",
              "color": "#ffffff",
              "headerColor": "#00bcd4",
              "selectColor": "#0097a7",
              "selectTextColor": "#ffffff",
              "textColor": "#ffffff",
            },
            "toggle": Object {
              "labelColor": "rgba(0, 0, 0, 0.87)",
              "labelDisabledColor": "rgba(0, 0, 0, 0.3)",
              "thumbDisabledColor": "#e0e0e0",
              "thumbOffColor": "#f5f5f5",
              "thumbOnColor": "#7cb342",
              "thumbRequiredColor": "#00bcd4",
              "trackDisabledColor": "#bdbdbd",
              "trackOffColor": "#bdbdbd",
              "trackOnColor": "#aed581",
              "trackRequiredColor": "rgba(0, 188, 212, 0.5)",
            },
            "toolbar": Object {
              "backgroundColor": "rgb(232, 232, 232)",
              "color": "rgba(0, 0, 0, 0.54)",
              "height": 56,
              "hoverColor": "rgba(0, 0, 0, 0.87)",
              "iconColor": "rgba(0, 0, 0, 0.4)",
              "menuHoverColor": "rgba(0, 0, 0, 0.1)",
              "separatorColor": "rgba(0, 0, 0, 0.175)",
              "titleFontSize": 20,
            },
            "tooltip": Object {
              "color": "#ffffff",
              "opacity": 0.9,
              "rippleBackgroundColor": "#616161",
            },
            "userAgent": undefined,
            "zIndex": Object {
              "appBar": 1100,
              "dialog": 1500,
              "dialogOverlay": 1400,
              "drawer": 1300,
              "drawerOverlay": 1200,
              "layer": 2000,
              "menu": 1000,
              "popover": 2100,
              "snackbar": 2900,
              "tooltip": 3000,
            },
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": " Add New Service",
              "className": undefined,
            },
            "ref": null,
            "rendered": " Add New Service",
            "type": "h1",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <TextField
                disabled={false}
                floatingLabelFixed={false}
                floatingLabelText="HREF"
                fullWidth={false}
                hintText="Reference of the service..."
                multiLine={false}
                onChange={[Function]}
                rows={1}
                type="text"
                underlineShow={true}
                value=""
/>,
              "className": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "disabled": false,
                "floatingLabelFixed": false,
                "floatingLabelText": "HREF",
                "fullWidth": false,
                "hintText": "Reference of the service...",
                "multiLine": false,
                "onChange": [Function],
                "rows": 1,
                "type": "text",
                "underlineShow": true,
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <TextField
                disabled={false}
                floatingLabelFixed={false}
                floatingLabelText="Category"
                fullWidth={false}
                hintText="Enter category..."
                multiLine={false}
                onChange={[Function]}
                rows={1}
                type="text"
                underlineShow={true}
                value=""
/>,
              "className": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "disabled": false,
                "floatingLabelFixed": false,
                "floatingLabelText": "Category",
                "fullWidth": false,
                "hintText": "Enter category...",
                "multiLine": false,
                "onChange": [Function],
                "rows": 1,
                "type": "text",
                "underlineShow": true,
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <TextField
                disabled={false}
                errorText="Name is a required field"
                floatingLabelFixed={false}
                floatingLabelText="Name"
                fullWidth={false}
                hintText="Enter name..."
                multiLine={false}
                onChange={[Function]}
                rows={1}
                type="text"
                underlineShow={true}
                value=""
/>,
              "className": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "disabled": false,
                "errorText": "Name is a required field",
                "floatingLabelFixed": false,
                "floatingLabelText": "Name",
                "fullWidth": false,
                "hintText": "Enter name...",
                "multiLine": false,
                "onChange": [Function],
                "rows": 1,
                "type": "text",
                "underlineShow": true,
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <TextField
                disabled={false}
                floatingLabelFixed={false}
                floatingLabelText="Description"
                fullWidth={false}
                hintText="Description of the service..."
                multiLine={true}
                onChange={[Function]}
                rows={1}
                type="text"
                underlineShow={true}
                value=""
/>,
              "className": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "disabled": false,
                "floatingLabelFixed": false,
                "floatingLabelText": "Description",
                "fullWidth": false,
                "hintText": "Description of the service...",
                "multiLine": true,
                "onChange": [Function],
                "rows": 1,
                "type": "text",
                "underlineShow": true,
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": undefined,
              "inset": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Toggle
                defaultToggled={false}
                disabled={false}
                iconStyle={
                                Object {
                                                "marginLeft": "0px",
                                              }
                }
                label="Is the service enabled?"
                labelPosition="left"
                labelStyle={
                                Object {
                                                "width": "50%",
                                              }
                }
                onToggle={[Function]}
                toggled={false}
/>,
              "className": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "defaultToggled": false,
                "disabled": false,
                "iconStyle": Object {
                  "marginLeft": "0px",
                },
                "label": "Is the service enabled?",
                "labelPosition": "left",
                "labelStyle": Object {
                  "width": "50%",
                },
                "onToggle": [Function],
                "toggled": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Toggle
                defaultToggled={false}
                disabled={false}
                iconStyle={
                                Object {
                                                "marginLeft": "0px",
                                              }
                }
                label="Has the service started?"
                labelPosition="left"
                labelStyle={
                                Object {
                                                "width": "50%",
                                              }
                }
                onToggle={[Function]}
                toggled={false}
/>,
              "className": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "defaultToggled": false,
                "disabled": false,
                "iconStyle": Object {
                  "marginLeft": "0px",
                },
                "label": "Has the service started?",
                "labelPosition": "left",
                "labelStyle": Object {
                  "width": "50%",
                },
                "onToggle": [Function],
                "toggled": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <Toggle
                defaultToggled={false}
                disabled={false}
                iconStyle={
                                Object {
                                                "marginLeft": "0px",
                                              }
                }
                label="Can this service be changed without affecting any other service?"
                labelPosition="left"
                labelStyle={
                                Object {
                                                "width": "50%",
                                              }
                }
                onToggle={[Function]}
                toggled={false}
/>,
              "className": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "defaultToggled": false,
                "disabled": false,
                "iconStyle": Object {
                  "marginLeft": "0px",
                },
                "label": "Can this service be changed without affecting any other service?",
                "labelPosition": "left",
                "labelStyle": Object {
                  "width": "50%",
                },
                "onToggle": [Function],
                "toggled": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": undefined,
              "inset": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h3>
                  Start Mode
</h3>,
                <SelectField
                  autoWidth={false}
                  disabled={false}
                  fullWidth={false}
                  hintText="Start mode..."
                  multiple={false}
                  onChange={[Function]}
                  value=""
>
                  <MenuItem
                                    anchorOrigin={
                                                      Object {
                                                                        "horizontal": "right",
                                                                        "vertical": "top",
                                                                      }
                                    }
                                    checked={false}
                                    desktop={false}
                                    disabled={false}
                                    focusState="none"
                                    insetChildren={false}
                                    primaryText="Unknown"
                                    targetOrigin={
                                                      Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                                    }
                                    value={0}
                  />
                  <MenuItem
                                    anchorOrigin={
                                                      Object {
                                                                        "horizontal": "right",
                                                                        "vertical": "top",
                                                                      }
                                    }
                                    checked={false}
                                    desktop={false}
                                    disabled={false}
                                    focusState="none"
                                    insetChildren={false}
                                    primaryText="Automatically by the managed environment"
                                    targetOrigin={
                                                      Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                                    }
                                    value={1}
                  />
                  <MenuItem
                                    anchorOrigin={
                                                      Object {
                                                                        "horizontal": "right",
                                                                        "vertical": "top",
                                                                      }
                                    }
                                    checked={false}
                                    desktop={false}
                                    disabled={false}
                                    focusState="none"
                                    insetChildren={false}
                                    primaryText="Automatically by the owning device"
                                    targetOrigin={
                                                      Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                                    }
                                    value={2}
                  />
                  <MenuItem
                                    anchorOrigin={
                                                      Object {
                                                                        "horizontal": "right",
                                                                        "vertical": "top",
                                                                      }
                                    }
                                    checked={false}
                                    desktop={false}
                                    disabled={false}
                                    focusState="none"
                                    insetChildren={false}
                                    primaryText="Manually by the Provider of the Service"
                                    targetOrigin={
                                                      Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                                    }
                                    value={3}
                  />
                  <MenuItem
                                    anchorOrigin={
                                                      Object {
                                                                        "horizontal": "right",
                                                                        "vertical": "top",
                                                                      }
                                    }
                                    checked={false}
                                    desktop={false}
                                    disabled={false}
                                    focusState="none"
                                    insetChildren={false}
                                    primaryText="Manually by a Customer of the Provider"
                                    targetOrigin={
                                                      Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                                    }
                                    value={4}
                  />
                  <MenuItem
                                    anchorOrigin={
                                                      Object {
                                                                        "horizontal": "right",
                                                                        "vertical": "top",
                                                                      }
                                    }
                                    checked={false}
                                    desktop={false}
                                    disabled={false}
                                    focusState="none"
                                    insetChildren={false}
                                    primaryText="Any of the above"
                                    targetOrigin={
                                                      Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                                    }
                                    value={5}
                  />
</SelectField>,
              ],
              "className": undefined,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Start Mode",
                },
                "ref": null,
                "rendered": "Start Mode",
                "type": "h3",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "autoWidth": false,
                  "children": Array [
                    <MenuItem
                      anchorOrigin={
                                            Object {
                                                                  "horizontal": "right",
                                                                  "vertical": "top",
                                                                }
                      }
                      checked={false}
                      desktop={false}
                      disabled={false}
                      focusState="none"
                      insetChildren={false}
                      primaryText="Unknown"
                      targetOrigin={
                                            Object {
                                                                  "horizontal": "left",
                                                                  "vertical": "top",
                                                                }
                      }
                      value={0}
/>,
                    <MenuItem
                      anchorOrigin={
                                            Object {
                                                                  "horizontal": "right",
                                                                  "vertical": "top",
                                                                }
                      }
                      checked={false}
                      desktop={false}
                      disabled={false}
                      focusState="none"
                      insetChildren={false}
                      primaryText="Automatically by the managed environment"
                      targetOrigin={
                                            Object {
                                                                  "horizontal": "left",
                                                                  "vertical": "top",
                                                                }
                      }
                      value={1}
/>,
                    <MenuItem
                      anchorOrigin={
                                            Object {
                                                                  "horizontal": "right",
                                                                  "vertical": "top",
                                                                }
                      }
                      checked={false}
                      desktop={false}
                      disabled={false}
                      focusState="none"
                      insetChildren={false}
                      primaryText="Automatically by the owning device"
                      targetOrigin={
                                            Object {
                                                                  "horizontal": "left",
                                                                  "vertical": "top",
                                                                }
                      }
                      value={2}
/>,
                    <MenuItem
                      anchorOrigin={
                                            Object {
                                                                  "horizontal": "right",
                                                                  "vertical": "top",
                                                                }
                      }
                      checked={false}
                      desktop={false}
                      disabled={false}
                      focusState="none"
                      insetChildren={false}
                      primaryText="Manually by the Provider of the Service"
                      targetOrigin={
                                            Object {
                                                                  "horizontal": "left",
                                                                  "vertical": "top",
                                                                }
                      }
                      value={3}
/>,
                    <MenuItem
                      anchorOrigin={
                                            Object {
                                                                  "horizontal": "right",
                                                                  "vertical": "top",
                                                                }
                      }
                      checked={false}
                      desktop={false}
                      disabled={false}
                      focusState="none"
                      insetChildren={false}
                      primaryText="Manually by a Customer of the Provider"
                      targetOrigin={
                                            Object {
                                                                  "horizontal": "left",
                                                                  "vertical": "top",
                                                                }
                      }
                      value={4}
/>,
                    <MenuItem
                      anchorOrigin={
                                            Object {
                                                                  "horizontal": "right",
                                                                  "vertical": "top",
                                                                }
                      }
                      checked={false}
                      desktop={false}
                      disabled={false}
                      focusState="none"
                      insetChildren={false}
                      primaryText="Any of the above"
                      targetOrigin={
                                            Object {
                                                                  "horizontal": "left",
                                                                  "vertical": "top",
                                                                }
                      }
                      value={5}
/>,
                  ],
                  "disabled": false,
                  "fullWidth": false,
                  "hintText": "Start mode...",
                  "multiple": false,
                  "onChange": [Function],
                  "value": "",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "0",
                    "nodeType": "class",
                    "props": Object {
                      "anchorOrigin": Object {
                        "horizontal": "right",
                        "vertical": "top",
                      },
                      "checked": false,
                      "desktop": false,
                      "disabled": false,
                      "focusState": "none",
                      "insetChildren": false,
                      "primaryText": "Unknown",
                      "targetOrigin": Object {
                        "horizontal": "left",
                        "vertical": "top",
                      },
                      "value": 0,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "1",
                    "nodeType": "class",
                    "props": Object {
                      "anchorOrigin": Object {
                        "horizontal": "right",
                        "vertical": "top",
                      },
                      "checked": false,
                      "desktop": false,
                      "disabled": false,
                      "focusState": "none",
                      "insetChildren": false,
                      "primaryText": "Automatically by the managed environment",
                      "targetOrigin": Object {
                        "horizontal": "left",
                        "vertical": "top",
                      },
                      "value": 1,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "2",
                    "nodeType": "class",
                    "props": Object {
                      "anchorOrigin": Object {
                        "horizontal": "right",
                        "vertical": "top",
                      },
                      "checked": false,
                      "desktop": false,
                      "disabled": false,
                      "focusState": "none",
                      "insetChildren": false,
                      "primaryText": "Automatically by the owning device",
                      "targetOrigin": Object {
                        "horizontal": "left",
                        "vertical": "top",
                      },
                      "value": 2,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "3",
                    "nodeType": "class",
                    "props": Object {
                      "anchorOrigin": Object {
                        "horizontal": "right",
                        "vertical": "top",
                      },
                      "checked": false,
                      "desktop": false,
                      "disabled": false,
                      "focusState": "none",
                      "insetChildren": false,
                      "primaryText": "Manually by the Provider of the Service",
                      "targetOrigin": Object {
                        "horizontal": "left",
                        "vertical": "top",
                      },
                      "value": 3,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "4",
                    "nodeType": "class",
                    "props": Object {
                      "anchorOrigin": Object {
                        "horizontal": "right",
                        "vertical": "top",
                      },
                      "checked": false,
                      "desktop": false,
                      "disabled": false,
                      "focusState": "none",
                      "insetChildren": false,
                      "primaryText": "Manually by a Customer of the Provider",
                      "targetOrigin": Object {
                        "horizontal": "left",
                        "vertical": "top",
                      },
                      "value": 4,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "5",
                    "nodeType": "class",
                    "props": Object {
                      "anchorOrigin": Object {
                        "horizontal": "right",
                        "vertical": "top",
                      },
                      "checked": false,
                      "desktop": false,
                      "disabled": false,
                      "focusState": "none",
                      "insetChildren": false,
                      "primaryText": "Any of the above",
                      "targetOrigin": Object {
                        "horizontal": "left",
                        "vertical": "top",
                      },
                      "value": 5,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h3>
                  State
</h3>,
                <SelectField
                  autoWidth={false}
                  disabled={false}
                  fullWidth={false}
                  hintText="State of the service..."
                  multiple={false}
                  onChange={[Function]}
                  value=""
>
                  <MenuItem
                                    anchorOrigin={
                                                      Object {
                                                                        "horizontal": "right",
                                                                        "vertical": "top",
                                                                      }
                                    }
                                    checked={false}
                                    desktop={false}
                                    disabled={false}
                                    focusState="none"
                                    insetChildren={false}
                                    primaryText="feasibilityChecked"
                                    targetOrigin={
                                                      Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                                    }
                                    value={0}
                  />
                  <MenuItem
                                    anchorOrigin={
                                                      Object {
                                                                        "horizontal": "right",
                                                                        "vertical": "top",
                                                                      }
                                    }
                                    checked={false}
                                    desktop={false}
                                    disabled={false}
                                    focusState="none"
                                    insetChildren={false}
                                    primaryText="designed"
                                    targetOrigin={
                                                      Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                                    }
                                    value={1}
                  />
                  <MenuItem
                                    anchorOrigin={
                                                      Object {
                                                                        "horizontal": "right",
                                                                        "vertical": "top",
                                                                      }
                                    }
                                    checked={false}
                                    desktop={false}
                                    disabled={false}
                                    focusState="none"
                                    insetChildren={false}
                                    primaryText="reserved"
                                    targetOrigin={
                                                      Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                                    }
                                    value={2}
                  />
                  <MenuItem
                                    anchorOrigin={
                                                      Object {
                                                                        "horizontal": "right",
                                                                        "vertical": "top",
                                                                      }
                                    }
                                    checked={false}
                                    desktop={false}
                                    disabled={false}
                                    focusState="none"
                                    insetChildren={false}
                                    primaryText="active"
                                    targetOrigin={
                                                      Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                                    }
                                    value={3}
                  />
                  <MenuItem
                                    anchorOrigin={
                                                      Object {
                                                                        "horizontal": "right",
                                                                        "vertical": "top",
                                                                      }
                                    }
                                    checked={false}
                                    desktop={false}
                                    disabled={false}
                                    focusState="none"
                                    insetChildren={false}
                                    primaryText="inactive"
                                    targetOrigin={
                                                      Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                                    }
                                    value={4}
                  />
                  <MenuItem
                                    anchorOrigin={
                                                      Object {
                                                                        "horizontal": "right",
                                                                        "vertical": "top",
                                                                      }
                                    }
                                    checked={false}
                                    desktop={false}
                                    disabled={false}
                                    focusState="none"
                                    insetChildren={false}
                                    primaryText="terminated"
                                    targetOrigin={
                                                      Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                                    }
                                    value={5}
                  />
</SelectField>,
              ],
              "className": undefined,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "State",
                },
                "ref": null,
                "rendered": "State",
                "type": "h3",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "autoWidth": false,
                  "children": Array [
                    <MenuItem
                      anchorOrigin={
                                            Object {
                                                                  "horizontal": "right",
                                                                  "vertical": "top",
                                                                }
                      }
                      checked={false}
                      desktop={false}
                      disabled={false}
                      focusState="none"
                      insetChildren={false}
                      primaryText="feasibilityChecked"
                      targetOrigin={
                                            Object {
                                                                  "horizontal": "left",
                                                                  "vertical": "top",
                                                                }
                      }
                      value={0}
/>,
                    <MenuItem
                      anchorOrigin={
                                            Object {
                                                                  "horizontal": "right",
                                                                  "vertical": "top",
                                                                }
                      }
                      checked={false}
                      desktop={false}
                      disabled={false}
                      focusState="none"
                      insetChildren={false}
                      primaryText="designed"
                      targetOrigin={
                                            Object {
                                                                  "horizontal": "left",
                                                                  "vertical": "top",
                                                                }
                      }
                      value={1}
/>,
                    <MenuItem
                      anchorOrigin={
                                            Object {
                                                                  "horizontal": "right",
                                                                  "vertical": "top",
                                                                }
                      }
                      checked={false}
                      desktop={false}
                      disabled={false}
                      focusState="none"
                      insetChildren={false}
                      primaryText="reserved"
                      targetOrigin={
                                            Object {
                                                                  "horizontal": "left",
                                                                  "vertical": "top",
                                                                }
                      }
                      value={2}
/>,
                    <MenuItem
                      anchorOrigin={
                                            Object {
                                                                  "horizontal": "right",
                                                                  "vertical": "top",
                                                                }
                      }
                      checked={false}
                      desktop={false}
                      disabled={false}
                      focusState="none"
                      insetChildren={false}
                      primaryText="active"
                      targetOrigin={
                                            Object {
                                                                  "horizontal": "left",
                                                                  "vertical": "top",
                                                                }
                      }
                      value={3}
/>,
                    <MenuItem
                      anchorOrigin={
                                            Object {
                                                                  "horizontal": "right",
                                                                  "vertical": "top",
                                                                }
                      }
                      checked={false}
                      desktop={false}
                      disabled={false}
                      focusState="none"
                      insetChildren={false}
                      primaryText="inactive"
                      targetOrigin={
                                            Object {
                                                                  "horizontal": "left",
                                                                  "vertical": "top",
                                                                }
                      }
                      value={4}
/>,
                    <MenuItem
                      anchorOrigin={
                                            Object {
                                                                  "horizontal": "right",
                                                                  "vertical": "top",
                                                                }
                      }
                      checked={false}
                      desktop={false}
                      disabled={false}
                      focusState="none"
                      insetChildren={false}
                      primaryText="terminated"
                      targetOrigin={
                                            Object {
                                                                  "horizontal": "left",
                                                                  "vertical": "top",
                                                                }
                      }
                      value={5}
/>,
                  ],
                  "disabled": false,
                  "fullWidth": false,
                  "hintText": "State of the service...",
                  "multiple": false,
                  "onChange": [Function],
                  "value": "",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": "0",
                    "nodeType": "class",
                    "props": Object {
                      "anchorOrigin": Object {
                        "horizontal": "right",
                        "vertical": "top",
                      },
                      "checked": false,
                      "desktop": false,
                      "disabled": false,
                      "focusState": "none",
                      "insetChildren": false,
                      "primaryText": "feasibilityChecked",
                      "targetOrigin": Object {
                        "horizontal": "left",
                        "vertical": "top",
                      },
                      "value": 0,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "1",
                    "nodeType": "class",
                    "props": Object {
                      "anchorOrigin": Object {
                        "horizontal": "right",
                        "vertical": "top",
                      },
                      "checked": false,
                      "desktop": false,
                      "disabled": false,
                      "focusState": "none",
                      "insetChildren": false,
                      "primaryText": "designed",
                      "targetOrigin": Object {
                        "horizontal": "left",
                        "vertical": "top",
                      },
                      "value": 1,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "2",
                    "nodeType": "class",
                    "props": Object {
                      "anchorOrigin": Object {
                        "horizontal": "right",
                        "vertical": "top",
                      },
                      "checked": false,
                      "desktop": false,
                      "disabled": false,
                      "focusState": "none",
                      "insetChildren": false,
                      "primaryText": "reserved",
                      "targetOrigin": Object {
                        "horizontal": "left",
                        "vertical": "top",
                      },
                      "value": 2,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "3",
                    "nodeType": "class",
                    "props": Object {
                      "anchorOrigin": Object {
                        "horizontal": "right",
                        "vertical": "top",
                      },
                      "checked": false,
                      "desktop": false,
                      "disabled": false,
                      "focusState": "none",
                      "insetChildren": false,
                      "primaryText": "active",
                      "targetOrigin": Object {
                        "horizontal": "left",
                        "vertical": "top",
                      },
                      "value": 3,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "4",
                    "nodeType": "class",
                    "props": Object {
                      "anchorOrigin": Object {
                        "horizontal": "right",
                        "vertical": "top",
                      },
                      "checked": false,
                      "desktop": false,
                      "disabled": false,
                      "focusState": "none",
                      "insetChildren": false,
                      "primaryText": "inactive",
                      "targetOrigin": Object {
                        "horizontal": "left",
                        "vertical": "top",
                      },
                      "value": 4,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": "5",
                    "nodeType": "class",
                    "props": Object {
                      "anchorOrigin": Object {
                        "horizontal": "right",
                        "vertical": "top",
                      },
                      "checked": false,
                      "desktop": false,
                      "disabled": false,
                      "focusState": "none",
                      "insetChildren": false,
                      "primaryText": "terminated",
                      "targetOrigin": Object {
                        "horizontal": "left",
                        "vertical": "top",
                      },
                      "value": 5,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": undefined,
              "inset": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h3>
                  Order date
</h3>,
                <DatePicker
                  autoOk={false}
                  container="dialog"
                  disableYearSelection={false}
                  disabled={false}
                  firstDayOfWeek={1}
                  hideCalendarDate={false}
                  hintText="Order Date"
                  onChange={[Function]}
                  openToYearSelection={false}
                  style={Object {}}
                  value=""
/>,
              ],
              "className": undefined,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Order date",
                },
                "ref": null,
                "rendered": "Order date",
                "type": "h3",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "autoOk": false,
                  "container": "dialog",
                  "disableYearSelection": false,
                  "disabled": false,
                  "firstDayOfWeek": 1,
                  "hideCalendarDate": false,
                  "hintText": "Order Date",
                  "onChange": [Function],
                  "openToYearSelection": false,
                  "style": Object {},
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h3>
                  Start date
</h3>,
                <DatePicker
                  autoOk={false}
                  container="dialog"
                  disableYearSelection={false}
                  disabled={false}
                  firstDayOfWeek={1}
                  hideCalendarDate={false}
                  hintText="Start Date"
                  onChange={[Function]}
                  openToYearSelection={false}
                  style={Object {}}
                  value=""
/>,
              ],
              "className": undefined,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Start date",
                },
                "ref": null,
                "rendered": "Start date",
                "type": "h3",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "autoOk": false,
                  "container": "dialog",
                  "disableYearSelection": false,
                  "disabled": false,
                  "firstDayOfWeek": 1,
                  "hideCalendarDate": false,
                  "hintText": "Start Date",
                  "onChange": [Function],
                  "openToYearSelection": false,
                  "style": Object {},
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h3>
                  End date
</h3>,
                <DatePicker
                  autoOk={false}
                  container="dialog"
                  disableYearSelection={false}
                  disabled={false}
                  firstDayOfWeek={1}
                  hideCalendarDate={false}
                  hintText="End Date"
                  onChange={[Function]}
                  openToYearSelection={false}
                  style={Object {}}
                  value=""
/>,
                <br />,
              ],
              "className": undefined,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "End date",
                },
                "ref": null,
                "rendered": "End date",
                "type": "h3",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "autoOk": false,
                  "container": "dialog",
                  "disableYearSelection": false,
                  "disabled": false,
                  "firstDayOfWeek": 1,
                  "hideCalendarDate": false,
                  "hintText": "End Date",
                  "onChange": [Function],
                  "openToYearSelection": false,
                  "style": Object {},
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": undefined,
              "inset": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h3>
                  Service Specification
</h3>,
                <ObjectInput
                  mapValues={[Function]}
                  onChange={[Function]}
                  value={
                                    Object {
                                                      "href": "",
                                                      "name": "",
                                                      "version": "",
                                                    }
                  }
>
                  <TextField
                                    className={undefined}
                                    disabled={false}
                                    floatingLabelFixed={false}
                                    floatingLabelText="Name"
                                    fullWidth={false}
                                    hintText="Name of the service specification..."
                                    multiLine={false}
                                    name="name"
                                    rows={1}
                                    type="name"
                                    underlineShow={true}
                  />
                  <TextField
                                    className={undefined}
                                    disabled={false}
                                    floatingLabelFixed={false}
                                    floatingLabelText="HREF"
                                    fullWidth={false}
                                    hintText="Href of the service specification..."
                                    multiLine={false}
                                    name="href"
                                    rows={1}
                                    type="text"
                                    underlineShow={true}
                  />
                  <TextField
                                    className={undefined}
                                    disabled={false}
                                    floatingLabelFixed={false}
                                    floatingLabelText="Version"
                                    fullWidth={false}
                                    hintText="Version of service specification..."
                                    multiLine={false}
                                    name="version"
                                    rows={1}
                                    type="text"
                                    underlineShow={true}
                  />
</ObjectInput>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Service Specification",
                },
                "ref": null,
                "rendered": "Service Specification",
                "type": "h3",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    <TextField
                      className={undefined}
                      disabled={false}
                      floatingLabelFixed={false}
                      floatingLabelText="Name"
                      fullWidth={false}
                      hintText="Name of the service specification..."
                      multiLine={false}
                      name="name"
                      rows={1}
                      type="name"
                      underlineShow={true}
/>,
                    <TextField
                      className={undefined}
                      disabled={false}
                      floatingLabelFixed={false}
                      floatingLabelText="HREF"
                      fullWidth={false}
                      hintText="Href of the service specification..."
                      multiLine={false}
                      name="href"
                      rows={1}
                      type="text"
                      underlineShow={true}
/>,
                    <TextField
                      className={undefined}
                      disabled={false}
                      floatingLabelFixed={false}
                      floatingLabelText="Version"
                      fullWidth={false}
                      hintText="Version of service specification..."
                      multiLine={false}
                      name="version"
                      rows={1}
                      type="text"
                      underlineShow={true}
/>,
                  ],
                  "mapValues": [Function],
                  "onChange": [Function],
                  "value": Object {
                    "href": "",
                    "name": "",
                    "version": "",
                  },
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": undefined,
                      "disabled": false,
                      "floatingLabelFixed": false,
                      "floatingLabelText": "Name",
                      "fullWidth": false,
                      "hintText": "Name of the service specification...",
                      "multiLine": false,
                      "name": "name",
                      "rows": 1,
                      "type": "name",
                      "underlineShow": true,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": undefined,
                      "disabled": false,
                      "floatingLabelFixed": false,
                      "floatingLabelText": "HREF",
                      "fullWidth": false,
                      "hintText": "Href of the service specification...",
                      "multiLine": false,
                      "name": "href",
                      "rows": 1,
                      "type": "text",
                      "underlineShow": true,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "className": undefined,
                      "disabled": false,
                      "floatingLabelFixed": false,
                      "floatingLabelText": "Version",
                      "fullWidth": false,
                      "hintText": "Version of service specification...",
                      "multiLine": false,
                      "name": "version",
                      "rows": 1,
                      "type": "text",
                      "underlineShow": true,
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": undefined,
              "inset": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h3>
                  Related Parties
</h3>,
                <ListInput
                  component={[Function]}
                  count={0}
                  max={Infinity}
                  min={1}
                  onChange={[Function]}
                  values={Array []}
/>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Related Parties",
                },
                "ref": null,
                "rendered": "Related Parties",
                "type": "h3",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "count": 0,
                  "max": Infinity,
                  "min": 1,
                  "onChange": [Function],
                  "values": Array [],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": undefined,
              "inset": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h3>
                  Service Characteristic
</h3>,
                <ListInput
                  component={[Function]}
                  count={0}
                  max={Infinity}
                  min={0}
                  onChange={[Function]}
                  values={Array []}
/>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Service Characteristic",
                },
                "ref": null,
                "rendered": "Service Characteristic",
                "type": "h3",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "count": 0,
                  "max": Infinity,
                  "min": 0,
                  "onChange": [Function],
                  "values": Array [],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": undefined,
              "inset": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h3>
                  Service Relationship
</h3>,
                <ListInput
                  component={[Function]}
                  count={0}
                  max={Infinity}
                  min={0}
                  onChange={[Function]}
                  values={Array []}
/>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Service Relationship",
                },
                "ref": null,
                "rendered": "Service Relationship",
                "type": "h3",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "count": 0,
                  "max": Infinity,
                  "min": 0,
                  "onChange": [Function],
                  "values": Array [],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": undefined,
              "inset": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h3>
                  Supporting Service
</h3>,
                <ListInput
                  component={[Function]}
                  count={0}
                  max={Infinity}
                  min={0}
                  onChange={[Function]}
                  values={Array []}
/>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Supporting Service",
                },
                "ref": null,
                "rendered": "Supporting Service",
                "type": "h3",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "count": 0,
                  "max": Infinity,
                  "min": 0,
                  "onChange": [Function],
                  "values": Array [],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": undefined,
              "inset": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h3>
                  Supporting Resource
</h3>,
                <ListInput
                  component={[Function]}
                  count={0}
                  max={Infinity}
                  min={0}
                  onChange={[Function]}
                  values={Array []}
/>,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Supporting Resource",
                },
                "ref": null,
                "rendered": "Supporting Resource",
                "type": "h3",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "count": 0,
                  "max": Infinity,
                  "min": 0,
                  "onChange": [Function],
                  "values": Array [],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "className": undefined,
              "inset": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <RaisedButton
                  disabled={true}
                  fullWidth={false}
                  label="Submit"
                  labelPosition="after"
                  onClick={[Function]}
                  primary={true}
                  secondary={false}
/>,
                null,
              ],
              "className": undefined,
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "disabled": true,
                  "fullWidth": false,
                  "label": "Submit",
                  "labelPosition": "after",
                  "onClick": [Function],
                  "primary": true,
                  "secondary": false,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              null,
            ],
            "type": "div",
          },
        ],
        "type": [Function],
      },
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <div
          className={undefined}
>
          <MuiThemeProvider
                    muiTheme={
                              Object {
                                        "appBar": Object {
                                          "color": "#00bcd4",
                                          "height": 64,
                                          "padding": 24,
                                          "textColor": "#ffffff",
                                          "titleFontWeight": 400,
                                        },
                                        "avatar": Object {
                                          "backgroundColor": "rgb(188, 188, 188)",
                                          "color": "#ffffff",
                                        },
                                        "badge": Object {
                                          "color": "#ffffff",
                                          "fontWeight": 500,
                                          "primaryColor": "#00bcd4",
                                          "primaryTextColor": "#ffffff",
                                          "secondaryColor": "#ff4081",
                                          "secondaryTextColor": "#ffffff",
                                          "textColor": "rgba(0, 0, 0, 0.87)",
                                        },
                                        "baseTheme": Object {
                                          "fontFamily": "Roboto, sans-serif",
                                          "palette": Object {
                                            "accent1Color": "#ff4081",
                                            "accent2Color": "#f5f5f5",
                                            "accent3Color": "#9e9e9e",
                                            "alternateTextColor": "#ffffff",
                                            "borderColor": "#e0e0e0",
                                            "canvasColor": "#ffffff",
                                            "clockCircleColor": "rgba(0, 0, 0, 0.07)",
                                            "disabledColor": "rgba(0, 0, 0, 0.3)",
                                            "pickerHeaderColor": "#00bcd4",
                                            "primary1Color": "#00bcd4",
                                            "primary2Color": "#0097a7",
                                            "primary3Color": "#bdbdbd",
                                            "secondaryTextColor": "rgba(0, 0, 0, 0.54)",
                                            "shadowColor": "rgba(0, 0, 0, 1)",
                                            "textColor": "rgba(0, 0, 0, 0.87)",
                                          },
                                          "spacing": Object {
                                            "desktopDrawerMenuItemHeight": 48,
                                            "desktopDropDownMenuFontSize": 15,
                                            "desktopDropDownMenuItemHeight": 32,
                                            "desktopGutter": 24,
                                            "desktopGutterLess": 16,
                                            "desktopGutterMini": 8,
                                            "desktopGutterMore": 32,
                                            "desktopKeylineIncrement": 64,
                                            "desktopSubheaderHeight": 48,
                                            "desktopToolbarHeight": 56,
                                            "iconSize": 24,
                                          },
                                        },
                                        "borderRadius": 2,
                                        "bottomNavigation": Object {
                                          "backgroundColor": "#ffffff",
                                          "height": 56,
                                          "selectedColor": "#00bcd4",
                                          "selectedFontSize": 14,
                                          "unselectedColor": "rgba(0, 0, 0, 0.54)",
                                          "unselectedFontSize": 12,
                                        },
                                        "button": Object {
                                          "height": 36,
                                          "iconButtonSize": 48,
                                          "minWidth": 88,
                                        },
                                        "card": Object {
                                          "fontWeight": 500,
                                          "subtitleColor": "rgba(0, 0, 0, 0.54)",
                                          "titleColor": "rgba(0, 0, 0, 0.87)",
                                        },
                                        "cardMedia": Object {
                                          "color": "rgba(255, 255, 255, 0.87)",
                                          "overlayContentBackground": "rgba(0, 0, 0, 0.54)",
                                          "subtitleColor": "rgba(255, 255, 255, 0.54)",
                                          "titleColor": "rgba(255, 255, 255, 0.87)",
                                        },
                                        "cardText": Object {
                                          "textColor": "rgba(0, 0, 0, 0.87)",
                                        },
                                        "checkbox": Object {
                                          "boxColor": "rgba(0, 0, 0, 0.87)",
                                          "checkedColor": "#00bcd4",
                                          "disabledColor": "rgba(0, 0, 0, 0.3)",
                                          "labelColor": "rgba(0, 0, 0, 0.87)",
                                          "labelDisabledColor": "rgba(0, 0, 0, 0.3)",
                                          "requiredColor": "#00bcd4",
                                        },
                                        "chip": Object {
                                          "backgroundColor": "rgb(224, 224, 224)",
                                          "deleteIconColor": "rgba(0, 0, 0, 0.26)",
                                          "fontSize": 14,
                                          "fontWeight": 400,
                                          "shadow": "0 1px 6px rgba(0, 0, 0, 0.12),
                                      0 1px 4px rgba(0, 0, 0, 0.12)",
                                          "textColor": "rgba(0, 0, 0, 0.87)",
                                        },
                                        "datePicker": Object {
                                          "calendarTextColor": "rgba(0, 0, 0, 0.87)",
                                          "calendarYearBackgroundColor": "#ffffff",
                                          "color": "#7cb342",
                                          "headerColor": "#aed581",
                                          "selectColor": "#7cb342",
                                          "selectTextColor": "#ffffff",
                                          "textColor": "#ffffff",
                                        },
                                        "dialog": Object {
                                          "bodyColor": "rgba(0, 0, 0, 0.6)",
                                          "bodyFontSize": 16,
                                          "titleFontSize": 22,
                                        },
                                        "drawer": Object {
                                          "color": "#ffffff",
                                          "width": 256,
                                        },
                                        "dropDownMenu": Object {
                                          "accentColor": "#e0e0e0",
                                        },
                                        "enhancedButton": Object {
                                          "tapHighlightColor": "rgba(0, 0, 0, 0)",
                                        },
                                        "flatButton": Object {
                                          "buttonFilterColor": "#999999",
                                          "color": "rgba(0, 0, 0, 0)",
                                          "disabledTextColor": "rgba(0, 0, 0, 0.3)",
                                          "fontSize": 14,
                                          "fontWeight": 500,
                                          "primaryTextColor": "#689f38",
                                          "secondaryTextColor": "#ff4081",
                                          "textColor": "rgba(0, 0, 0, 0.87)",
                                        },
                                        "floatingActionButton": Object {
                                          "buttonSize": 56,
                                          "color": "#00bcd4",
                                          "disabledColor": "rgb(224, 224, 224)",
                                          "disabledTextColor": "rgba(0, 0, 0, 0.3)",
                                          "iconColor": "#ffffff",
                                          "miniSize": 40,
                                          "secondaryColor": "#ff4081",
                                          "secondaryIconColor": "#ffffff",
                                        },
                                        "fontFamily": "Roboto, sans-serif",
                                        "gridTile": Object {
                                          "textColor": "#ffffff",
                                        },
                                        "icon": Object {
                                          "backgroundColor": "#00bcd4",
                                          "color": "#ffffff",
                                        },
                                        "inkBar": Object {
                                          "backgroundColor": "#ff4081",
                                        },
                                        "isRtl": false,
                                        "listItem": Object {
                                          "leftIconColor": "#757575",
                                          "nestedLevelDepth": 18,
                                          "rightIconColor": "#757575",
                                          "secondaryTextColor": "rgba(0, 0, 0, 0.54)",
                                        },
                                        "menu": Object {
                                          "backgroundColor": "#ffffff",
                                          "containerBackgroundColor": "#ffffff",
                                        },
                                        "menuItem": Object {
                                          "dataHeight": 32,
                                          "height": 48,
                                          "hoverColor": "rgba(0, 0, 0, 0.1)",
                                          "padding": 24,
                                          "rightIconDesktopFill": "#757575",
                                          "selectedTextColor": "#ff4081",
                                        },
                                        "menuSubheader": Object {
                                          "borderColor": "#e0e0e0",
                                          "padding": 24,
                                          "textColor": "#00bcd4",
                                        },
                                        "overlay": Object {
                                          "backgroundColor": "rgba(0, 0, 0, 0.54)",
                                        },
                                        "palette": Object {
                                          "accent1Color": "#ff4081",
                                          "accent2Color": "#f5f5f5",
                                          "accent3Color": "#9e9e9e",
                                          "alternateTextColor": "#ffffff",
                                          "borderColor": "#e0e0e0",
                                          "canvasColor": "#ffffff",
                                          "clockCircleColor": "rgba(0, 0, 0, 0.07)",
                                          "disabledColor": "rgba(0, 0, 0, 0.3)",
                                          "pickerHeaderColor": "#00bcd4",
                                          "primary1Color": "#00bcd4",
                                          "primary2Color": "#0097a7",
                                          "primary3Color": "#bdbdbd",
                                          "secondaryTextColor": "rgba(0, 0, 0, 0.54)",
                                          "shadowColor": "rgba(0, 0, 0, 1)",
                                          "textColor": "rgba(0, 0, 0, 0.87)",
                                        },
                                        "paper": Object {
                                          "backgroundColor": "#ffffff",
                                          "color": "rgba(0, 0, 0, 0.87)",
                                          "zDepthShadows": Array [
                                            "0 1px 6px rgba(0, 0, 0, 0.12),
                                       0 1px 4px rgba(0, 0, 0, 0.12)",
                                            "0 3px 10px rgba(0, 0, 0, 0.16),
                                       0 3px 10px rgba(0, 0, 0, 0.23)",
                                            "0 10px 30px rgba(0, 0, 0, 0.19),
                                       0 6px 10px rgba(0, 0, 0, 0.23)",
                                            "0 14px 45px rgba(0, 0, 0, 0.25),
                                       0 10px 18px rgba(0, 0, 0, 0.22)",
                                            "0 19px 60px rgba(0, 0, 0, 0.3),
                                       0 15px 20px rgba(0, 0, 0, 0.22)",
                                          ],
                                        },
                                        "prepareStyles": [Function],
                                        "radioButton": Object {
                                          "backgroundColor": "#ffffff",
                                          "borderColor": "rgba(0, 0, 0, 0.87)",
                                          "checkedColor": "#00bcd4",
                                          "disabledColor": "rgba(0, 0, 0, 0.3)",
                                          "labelColor": "rgba(0, 0, 0, 0.87)",
                                          "labelDisabledColor": "rgba(0, 0, 0, 0.3)",
                                          "requiredColor": "#00bcd4",
                                          "size": 24,
                                        },
                                        "raisedButton": Object {
                                          "color": "#ffffff",
                                          "disabledColor": "rgb(229, 229, 229)",
                                          "disabledTextColor": "rgba(0, 0, 0, 0.3)",
                                          "fontSize": 14,
                                          "fontWeight": 500,
                                          "primaryColor": "#9ccc65",
                                          "primaryTextColor": "#ffffff",
                                          "secondaryColor": "#ff4081",
                                          "secondaryTextColor": "#ffffff",
                                          "textColor": "rgba(0, 0, 0, 0.87)",
                                        },
                                        "rawTheme": Object {
                                          "fontFamily": "Roboto, sans-serif",
                                          "palette": Object {
                                            "accent1Color": "#ff4081",
                                            "accent2Color": "#f5f5f5",
                                            "accent3Color": "#9e9e9e",
                                            "alternateTextColor": "#ffffff",
                                            "borderColor": "#e0e0e0",
                                            "canvasColor": "#ffffff",
                                            "clockCircleColor": "rgba(0, 0, 0, 0.07)",
                                            "disabledColor": "rgba(0, 0, 0, 0.3)",
                                            "pickerHeaderColor": "#00bcd4",
                                            "primary1Color": "#00bcd4",
                                            "primary2Color": "#0097a7",
                                            "primary3Color": "#bdbdbd",
                                            "secondaryTextColor": "rgba(0, 0, 0, 0.54)",
                                            "shadowColor": "rgba(0, 0, 0, 1)",
                                            "textColor": "rgba(0, 0, 0, 0.87)",
                                          },
                                          "spacing": Object {
                                            "desktopDrawerMenuItemHeight": 48,
                                            "desktopDropDownMenuFontSize": 15,
                                            "desktopDropDownMenuItemHeight": 32,
                                            "desktopGutter": 24,
                                            "desktopGutterLess": 16,
                                            "desktopGutterMini": 8,
                                            "desktopGutterMore": 32,
                                            "desktopKeylineIncrement": 64,
                                            "desktopSubheaderHeight": 48,
                                            "desktopToolbarHeight": 56,
                                            "iconSize": 24,
                                          },
                                        },
                                        "refreshIndicator": Object {
                                          "loadingStrokeColor": "#00bcd4",
                                          "strokeColor": "#e0e0e0",
                                        },
                                        "ripple": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                        },
                                        "slider": Object {
                                          "handleColorZero": "#bdbdbd",
                                          "handleFillColor": "#ffffff",
                                          "handleSize": 12,
                                          "handleSizeActive": 18,
                                          "handleSizeDisabled": 8,
                                          "rippleColor": "#00bcd4",
                                          "selectionColor": "#00bcd4",
                                          "trackColor": "#bdbdbd",
                                          "trackColorSelected": "#9e9e9e",
                                          "trackSize": 2,
                                        },
                                        "snackbar": Object {
                                          "actionColor": "#ff4081",
                                          "backgroundColor": "rgba(0, 0, 0, 0.87)",
                                          "textColor": "#ffffff",
                                        },
                                        "spacing": Object {
                                          "desktopDrawerMenuItemHeight": 48,
                                          "desktopDropDownMenuFontSize": 15,
                                          "desktopDropDownMenuItemHeight": 32,
                                          "desktopGutter": 24,
                                          "desktopGutterLess": 16,
                                          "desktopGutterMini": 8,
                                          "desktopGutterMore": 32,
                                          "desktopKeylineIncrement": 64,
                                          "desktopSubheaderHeight": 48,
                                          "desktopToolbarHeight": 56,
                                          "iconSize": 24,
                                        },
                                        "stepper": Object {
                                          "backgroundColor": "transparent",
                                          "connectorLineColor": "#bdbdbd",
                                          "disabledTextColor": "rgba(0, 0, 0, 0.26)",
                                          "hoverBackgroundColor": "rgba(0, 0, 0, 0.06)",
                                          "hoveredIconColor": "#616161",
                                          "iconColor": "#00bcd4",
                                          "inactiveIconColor": "#9e9e9e",
                                          "textColor": "rgba(0, 0, 0, 0.87)",
                                        },
                                        "subheader": Object {
                                          "color": "rgba(0, 0, 0, 0.54)",
                                          "fontWeight": 500,
                                        },
                                        "svgIcon": Object {
                                          "color": "rgba(0, 0, 0, 0.87)",
                                        },
                                        "table": Object {
                                          "backgroundColor": "#ffffff",
                                        },
                                        "tableFooter": Object {
                                          "borderColor": "#e0e0e0",
                                          "textColor": "#9e9e9e",
                                        },
                                        "tableHeader": Object {
                                          "borderColor": "#e0e0e0",
                                        },
                                        "tableHeaderColumn": Object {
                                          "height": 56,
                                          "spacing": 24,
                                          "textColor": "#9e9e9e",
                                        },
                                        "tableRow": Object {
                                          "borderColor": "#e0e0e0",
                                          "height": 48,
                                          "hoverColor": "#f5f5f5",
                                          "selectedColor": "#e0e0e0",
                                          "stripeColor": "rgba(127, 221, 233, 0.4)",
                                          "textColor": "rgba(0, 0, 0, 0.87)",
                                        },
                                        "tableRowColumn": Object {
                                          "height": 48,
                                          "spacing": 24,
                                        },
                                        "tabs": Object {
                                          "backgroundColor": "#00bcd4",
                                          "selectedTextColor": "#ffffff",
                                          "textColor": "rgba(255, 255, 255, 0.7)",
                                        },
                                        "textField": Object {
                                          "backgroundColor": "transparent",
                                          "borderColor": "#e0e0e0",
                                          "disabledTextColor": "rgba(0, 0, 0, 0.3)",
                                          "errorColor": "#f44336",
                                          "floatingLabelColor": "rgba(0, 0, 0, 0.3)",
                                          "focusColor": "#aed581",
                                          "hintColor": "rgba(0, 0, 0, 0.3)",
                                          "textColor": "rgba(0, 0, 0, 0.87)",
                                        },
                                        "timePicker": Object {
                                          "accentColor": "#00bcd4",
                                          "clockCircleColor": "rgba(0, 0, 0, 0.07)",
                                          "clockColor": "rgba(0, 0, 0, 0.87)",
                                          "color": "#ffffff",
                                          "headerColor": "#00bcd4",
                                          "selectColor": "#0097a7",
                                          "selectTextColor": "#ffffff",
                                          "textColor": "#ffffff",
                                        },
                                        "toggle": Object {
                                          "labelColor": "rgba(0, 0, 0, 0.87)",
                                          "labelDisabledColor": "rgba(0, 0, 0, 0.3)",
                                          "thumbDisabledColor": "#e0e0e0",
                                          "thumbOffColor": "#f5f5f5",
                                          "thumbOnColor": "#7cb342",
                                          "thumbRequiredColor": "#00bcd4",
                                          "trackDisabledColor": "#bdbdbd",
                                          "trackOffColor": "#bdbdbd",
                                          "trackOnColor": "#aed581",
                                          "trackRequiredColor": "rgba(0, 188, 212, 0.5)",
                                        },
                                        "toolbar": Object {
                                          "backgroundColor": "rgb(232, 232, 232)",
                                          "color": "rgba(0, 0, 0, 0.54)",
                                          "height": 56,
                                          "hoverColor": "rgba(0, 0, 0, 0.87)",
                                          "iconColor": "rgba(0, 0, 0, 0.4)",
                                          "menuHoverColor": "rgba(0, 0, 0, 0.1)",
                                          "separatorColor": "rgba(0, 0, 0, 0.175)",
                                          "titleFontSize": 20,
                                        },
                                        "tooltip": Object {
                                          "color": "#ffffff",
                                          "opacity": 0.9,
                                          "rippleBackgroundColor": "#616161",
                                        },
                                        "userAgent": undefined,
                                        "zIndex": Object {
                                          "appBar": 1100,
                                          "dialog": 1500,
                                          "dialogOverlay": 1400,
                                          "drawer": 1300,
                                          "drawerOverlay": 1200,
                                          "layer": 2000,
                                          "menu": 1000,
                                          "popover": 2100,
                                          "snackbar": 2900,
                                          "tooltip": 3000,
                                        },
                                      }
                    }
          >
                    <h1
                              className={undefined}
                    >
                               Add New Service
                    </h1>
                    <div
                              className={undefined}
                    >
                              <TextField
                                        disabled={false}
                                        floatingLabelFixed={false}
                                        floatingLabelText="HREF"
                                        fullWidth={false}
                                        hintText="Reference of the service..."
                                        multiLine={false}
                                        onChange={[Function]}
                                        rows={1}
                                        type="text"
                                        underlineShow={true}
                                        value=""
                              />
                    </div>
                    <div
                              className={undefined}
                    >
                              <TextField
                                        disabled={false}
                                        floatingLabelFixed={false}
                                        floatingLabelText="Category"
                                        fullWidth={false}
                                        hintText="Enter category..."
                                        multiLine={false}
                                        onChange={[Function]}
                                        rows={1}
                                        type="text"
                                        underlineShow={true}
                                        value=""
                              />
                    </div>
                    <div
                              className={undefined}
                    >
                              <TextField
                                        disabled={false}
                                        errorText="Name is a required field"
                                        floatingLabelFixed={false}
                                        floatingLabelText="Name"
                                        fullWidth={false}
                                        hintText="Enter name..."
                                        multiLine={false}
                                        onChange={[Function]}
                                        rows={1}
                                        type="text"
                                        underlineShow={true}
                                        value=""
                              />
                    </div>
                    <div
                              className={undefined}
                    >
                              <TextField
                                        disabled={false}
                                        floatingLabelFixed={false}
                                        floatingLabelText="Description"
                                        fullWidth={false}
                                        hintText="Description of the service..."
                                        multiLine={true}
                                        onChange={[Function]}
                                        rows={1}
                                        type="text"
                                        underlineShow={true}
                                        value=""
                              />
                    </div>
                    <Divider
                              className={undefined}
                              inset={false}
                    />
                    <div
                              className={undefined}
                    >
                              <Toggle
                                        defaultToggled={false}
                                        disabled={false}
                                        iconStyle={
                                                  Object {
                                                            "marginLeft": "0px",
                                                          }
                                        }
                                        label="Is the service enabled?"
                                        labelPosition="left"
                                        labelStyle={
                                                  Object {
                                                            "width": "50%",
                                                          }
                                        }
                                        onToggle={[Function]}
                                        toggled={false}
                              />
                    </div>
                    <div
                              className={undefined}
                    >
                              <Toggle
                                        defaultToggled={false}
                                        disabled={false}
                                        iconStyle={
                                                  Object {
                                                            "marginLeft": "0px",
                                                          }
                                        }
                                        label="Has the service started?"
                                        labelPosition="left"
                                        labelStyle={
                                                  Object {
                                                            "width": "50%",
                                                          }
                                        }
                                        onToggle={[Function]}
                                        toggled={false}
                              />
                    </div>
                    <div
                              className={undefined}
                    >
                              <Toggle
                                        defaultToggled={false}
                                        disabled={false}
                                        iconStyle={
                                                  Object {
                                                            "marginLeft": "0px",
                                                          }
                                        }
                                        label="Can this service be changed without affecting any other service?"
                                        labelPosition="left"
                                        labelStyle={
                                                  Object {
                                                            "width": "50%",
                                                          }
                                        }
                                        onToggle={[Function]}
                                        toggled={false}
                              />
                    </div>
                    <Divider
                              className={undefined}
                              inset={false}
                    />
                    <div
                              className={undefined}
                    >
                              <h3>
                                        Start Mode
                              </h3>
                              <SelectField
                                        autoWidth={false}
                                        disabled={false}
                                        fullWidth={false}
                                        hintText="Start mode..."
                                        multiple={false}
                                        onChange={[Function]}
                                        value=""
                              >
                                        <MenuItem
                                                  anchorOrigin={
                                                            Object {
                                                                      "horizontal": "right",
                                                                      "vertical": "top",
                                                                    }
                                                  }
                                                  checked={false}
                                                  desktop={false}
                                                  disabled={false}
                                                  focusState="none"
                                                  insetChildren={false}
                                                  primaryText="Unknown"
                                                  targetOrigin={
                                                            Object {
                                                                      "horizontal": "left",
                                                                      "vertical": "top",
                                                                    }
                                                  }
                                                  value={0}
                                        />
                                        <MenuItem
                                                  anchorOrigin={
                                                            Object {
                                                                      "horizontal": "right",
                                                                      "vertical": "top",
                                                                    }
                                                  }
                                                  checked={false}
                                                  desktop={false}
                                                  disabled={false}
                                                  focusState="none"
                                                  insetChildren={false}
                                                  primaryText="Automatically by the managed environment"
                                                  targetOrigin={
                                                            Object {
                                                                      "horizontal": "left",
                                                                      "vertical": "top",
                                                                    }
                                                  }
                                                  value={1}
                                        />
                                        <MenuItem
                                                  anchorOrigin={
                                                            Object {
                                                                      "horizontal": "right",
                                                                      "vertical": "top",
                                                                    }
                                                  }
                                                  checked={false}
                                                  desktop={false}
                                                  disabled={false}
                                                  focusState="none"
                                                  insetChildren={false}
                                                  primaryText="Automatically by the owning device"
                                                  targetOrigin={
                                                            Object {
                                                                      "horizontal": "left",
                                                                      "vertical": "top",
                                                                    }
                                                  }
                                                  value={2}
                                        />
                                        <MenuItem
                                                  anchorOrigin={
                                                            Object {
                                                                      "horizontal": "right",
                                                                      "vertical": "top",
                                                                    }
                                                  }
                                                  checked={false}
                                                  desktop={false}
                                                  disabled={false}
                                                  focusState="none"
                                                  insetChildren={false}
                                                  primaryText="Manually by the Provider of the Service"
                                                  targetOrigin={
                                                            Object {
                                                                      "horizontal": "left",
                                                                      "vertical": "top",
                                                                    }
                                                  }
                                                  value={3}
                                        />
                                        <MenuItem
                                                  anchorOrigin={
                                                            Object {
                                                                      "horizontal": "right",
                                                                      "vertical": "top",
                                                                    }
                                                  }
                                                  checked={false}
                                                  desktop={false}
                                                  disabled={false}
                                                  focusState="none"
                                                  insetChildren={false}
                                                  primaryText="Manually by a Customer of the Provider"
                                                  targetOrigin={
                                                            Object {
                                                                      "horizontal": "left",
                                                                      "vertical": "top",
                                                                    }
                                                  }
                                                  value={4}
                                        />
                                        <MenuItem
                                                  anchorOrigin={
                                                            Object {
                                                                      "horizontal": "right",
                                                                      "vertical": "top",
                                                                    }
                                                  }
                                                  checked={false}
                                                  desktop={false}
                                                  disabled={false}
                                                  focusState="none"
                                                  insetChildren={false}
                                                  primaryText="Any of the above"
                                                  targetOrigin={
                                                            Object {
                                                                      "horizontal": "left",
                                                                      "vertical": "top",
                                                                    }
                                                  }
                                                  value={5}
                                        />
                              </SelectField>
                    </div>
                    <div
                              className={undefined}
                    >
                              <h3>
                                        State
                              </h3>
                              <SelectField
                                        autoWidth={false}
                                        disabled={false}
                                        fullWidth={false}
                                        hintText="State of the service..."
                                        multiple={false}
                                        onChange={[Function]}
                                        value=""
                              >
                                        <MenuItem
                                                  anchorOrigin={
                                                            Object {
                                                                      "horizontal": "right",
                                                                      "vertical": "top",
                                                                    }
                                                  }
                                                  checked={false}
                                                  desktop={false}
                                                  disabled={false}
                                                  focusState="none"
                                                  insetChildren={false}
                                                  primaryText="feasibilityChecked"
                                                  targetOrigin={
                                                            Object {
                                                                      "horizontal": "left",
                                                                      "vertical": "top",
                                                                    }
                                                  }
                                                  value={0}
                                        />
                                        <MenuItem
                                                  anchorOrigin={
                                                            Object {
                                                                      "horizontal": "right",
                                                                      "vertical": "top",
                                                                    }
                                                  }
                                                  checked={false}
                                                  desktop={false}
                                                  disabled={false}
                                                  focusState="none"
                                                  insetChildren={false}
                                                  primaryText="designed"
                                                  targetOrigin={
                                                            Object {
                                                                      "horizontal": "left",
                                                                      "vertical": "top",
                                                                    }
                                                  }
                                                  value={1}
                                        />
                                        <MenuItem
                                                  anchorOrigin={
                                                            Object {
                                                                      "horizontal": "right",
                                                                      "vertical": "top",
                                                                    }
                                                  }
                                                  checked={false}
                                                  desktop={false}
                                                  disabled={false}
                                                  focusState="none"
                                                  insetChildren={false}
                                                  primaryText="reserved"
                                                  targetOrigin={
                                                            Object {
                                                                      "horizontal": "left",
                                                                      "vertical": "top",
                                                                    }
                                                  }
                                                  value={2}
                                        />
                                        <MenuItem
                                                  anchorOrigin={
                                                            Object {
                                                                      "horizontal": "right",
                                                                      "vertical": "top",
                                                                    }
                                                  }
                                                  checked={false}
                                                  desktop={false}
                                                  disabled={false}
                                                  focusState="none"
                                                  insetChildren={false}
                                                  primaryText="active"
                                                  targetOrigin={
                                                            Object {
                                                                      "horizontal": "left",
                                                                      "vertical": "top",
                                                                    }
                                                  }
                                                  value={3}
                                        />
                                        <MenuItem
                                                  anchorOrigin={
                                                            Object {
                                                                      "horizontal": "right",
                                                                      "vertical": "top",
                                                                    }
                                                  }
                                                  checked={false}
                                                  desktop={false}
                                                  disabled={false}
                                                  focusState="none"
                                                  insetChildren={false}
                                                  primaryText="inactive"
                                                  targetOrigin={
                                                            Object {
                                                                      "horizontal": "left",
                                                                      "vertical": "top",
                                                                    }
                                                  }
                                                  value={4}
                                        />
                                        <MenuItem
                                                  anchorOrigin={
                                                            Object {
                                                                      "horizontal": "right",
                                                                      "vertical": "top",
                                                                    }
                                                  }
                                                  checked={false}
                                                  desktop={false}
                                                  disabled={false}
                                                  focusState="none"
                                                  insetChildren={false}
                                                  primaryText="terminated"
                                                  targetOrigin={
                                                            Object {
                                                                      "horizontal": "left",
                                                                      "vertical": "top",
                                                                    }
                                                  }
                                                  value={5}
                                        />
                              </SelectField>
                    </div>
                    <Divider
                              className={undefined}
                              inset={false}
                    />
                    <div
                              className={undefined}
                    >
                              <h3>
                                        Order date
                              </h3>
                              <DatePicker
                                        autoOk={false}
                                        container="dialog"
                                        disableYearSelection={false}
                                        disabled={false}
                                        firstDayOfWeek={1}
                                        hideCalendarDate={false}
                                        hintText="Order Date"
                                        onChange={[Function]}
                                        openToYearSelection={false}
                                        style={Object {}}
                                        value=""
                              />
                    </div>
                    <div
                              className={undefined}
                    >
                              <h3>
                                        Start date
                              </h3>
                              <DatePicker
                                        autoOk={false}
                                        container="dialog"
                                        disableYearSelection={false}
                                        disabled={false}
                                        firstDayOfWeek={1}
                                        hideCalendarDate={false}
                                        hintText="Start Date"
                                        onChange={[Function]}
                                        openToYearSelection={false}
                                        style={Object {}}
                                        value=""
                              />
                    </div>
                    <div
                              className={undefined}
                    >
                              <h3>
                                        End date
                              </h3>
                              <DatePicker
                                        autoOk={false}
                                        container="dialog"
                                        disableYearSelection={false}
                                        disabled={false}
                                        firstDayOfWeek={1}
                                        hideCalendarDate={false}
                                        hintText="End Date"
                                        onChange={[Function]}
                                        openToYearSelection={false}
                                        style={Object {}}
                                        value=""
                              />
                              <br />
                    </div>
                    <Divider
                              className={undefined}
                              inset={false}
                    />
                    <div>
                              <h3>
                                        Service Specification
                              </h3>
                              <ObjectInput
                                        mapValues={[Function]}
                                        onChange={[Function]}
                                        value={
                                                  Object {
                                                            "href": "",
                                                            "name": "",
                                                            "version": "",
                                                          }
                                        }
                              >
                                        <TextField
                                                  className={undefined}
                                                  disabled={false}
                                                  floatingLabelFixed={false}
                                                  floatingLabelText="Name"
                                                  fullWidth={false}
                                                  hintText="Name of the service specification..."
                                                  multiLine={false}
                                                  name="name"
                                                  rows={1}
                                                  type="name"
                                                  underlineShow={true}
                                        />
                                        <TextField
                                                  className={undefined}
                                                  disabled={false}
                                                  floatingLabelFixed={false}
                                                  floatingLabelText="HREF"
                                                  fullWidth={false}
                                                  hintText="Href of the service specification..."
                                                  multiLine={false}
                                                  name="href"
                                                  rows={1}
                                                  type="text"
                                                  underlineShow={true}
                                        />
                                        <TextField
                                                  className={undefined}
                                                  disabled={false}
                                                  floatingLabelFixed={false}
                                                  floatingLabelText="Version"
                                                  fullWidth={false}
                                                  hintText="Version of service specification..."
                                                  multiLine={false}
                                                  name="version"
                                                  rows={1}
                                                  type="text"
                                                  underlineShow={true}
                                        />
                              </ObjectInput>
                    </div>
                    <Divider
                              className={undefined}
                              inset={false}
                    />
                    <div>
                              <h3>
                                        Related Parties
                              </h3>
                              <ListInput
                                        component={[Function]}
                                        count={0}
                                        max={Infinity}
                                        min={1}
                                        onChange={[Function]}
                                        values={Array []}
                              />
                    </div>
                    <Divider
                              className={undefined}
                              inset={false}
                    />
                    <div>
                              <h3>
                                        Service Characteristic
                              </h3>
                              <ListInput
                                        component={[Function]}
                                        count={0}
                                        max={Infinity}
                                        min={0}
                                        onChange={[Function]}
                                        values={Array []}
                              />
                    </div>
                    <Divider
                              className={undefined}
                              inset={false}
                    />
                    <div>
                              <h3>
                                        Service Relationship
                              </h3>
                              <ListInput
                                        component={[Function]}
                                        count={0}
                                        max={Infinity}
                                        min={0}
                                        onChange={[Function]}
                                        values={Array []}
                              />
                    </div>
                    <Divider
                              className={undefined}
                              inset={false}
                    />
                    <div>
                              <h3>
                                        Supporting Service
                              </h3>
                              <ListInput
                                        component={[Function]}
                                        count={0}
                                        max={Infinity}
                                        min={0}
                                        onChange={[Function]}
                                        values={Array []}
                              />
                    </div>
                    <Divider
                              className={undefined}
                              inset={false}
                    />
                    <div>
                              <h3>
                                        Supporting Resource
                              </h3>
                              <ListInput
                                        component={[Function]}
                                        count={0}
                                        max={Infinity}
                                        min={0}
                                        onChange={[Function]}
                                        values={Array []}
                              />
                    </div>
                    <Divider
                              className={undefined}
                              inset={false}
                    />
                    <div
                              className={undefined}
                    >
                              <RaisedButton
                                        disabled={true}
                                        fullWidth={false}
                                        label="Submit"
                                        labelPosition="after"
                                        onClick={[Function]}
                                        primary={true}
                                        secondary={false}
                              />
                    </div>
          </MuiThemeProvider>
</div>,
        "circle": false,
        "className": undefined,
        "rounded": true,
        "transitionEnabled": true,
        "zDepth": 1,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <MuiThemeProvider
            muiTheme={
                        Object {
                                    "appBar": Object {
                                      "color": "#00bcd4",
                                      "height": 64,
                                      "padding": 24,
                                      "textColor": "#ffffff",
                                      "titleFontWeight": 400,
                                    },
                                    "avatar": Object {
                                      "backgroundColor": "rgb(188, 188, 188)",
                                      "color": "#ffffff",
                                    },
                                    "badge": Object {
                                      "color": "#ffffff",
                                      "fontWeight": 500,
                                      "primaryColor": "#00bcd4",
                                      "primaryTextColor": "#ffffff",
                                      "secondaryColor": "#ff4081",
                                      "secondaryTextColor": "#ffffff",
                                      "textColor": "rgba(0, 0, 0, 0.87)",
                                    },
                                    "baseTheme": Object {
                                      "fontFamily": "Roboto, sans-serif",
                                      "palette": Object {
                                        "accent1Color": "#ff4081",
                                        "accent2Color": "#f5f5f5",
                                        "accent3Color": "#9e9e9e",
                                        "alternateTextColor": "#ffffff",
                                        "borderColor": "#e0e0e0",
                                        "canvasColor": "#ffffff",
                                        "clockCircleColor": "rgba(0, 0, 0, 0.07)",
                                        "disabledColor": "rgba(0, 0, 0, 0.3)",
                                        "pickerHeaderColor": "#00bcd4",
                                        "primary1Color": "#00bcd4",
                                        "primary2Color": "#0097a7",
                                        "primary3Color": "#bdbdbd",
                                        "secondaryTextColor": "rgba(0, 0, 0, 0.54)",
                                        "shadowColor": "rgba(0, 0, 0, 1)",
                                        "textColor": "rgba(0, 0, 0, 0.87)",
                                      },
                                      "spacing": Object {
                                        "desktopDrawerMenuItemHeight": 48,
                                        "desktopDropDownMenuFontSize": 15,
                                        "desktopDropDownMenuItemHeight": 32,
                                        "desktopGutter": 24,
                                        "desktopGutterLess": 16,
                                        "desktopGutterMini": 8,
                                        "desktopGutterMore": 32,
                                        "desktopKeylineIncrement": 64,
                                        "desktopSubheaderHeight": 48,
                                        "desktopToolbarHeight": 56,
                                        "iconSize": 24,
                                      },
                                    },
                                    "borderRadius": 2,
                                    "bottomNavigation": Object {
                                      "backgroundColor": "#ffffff",
                                      "height": 56,
                                      "selectedColor": "#00bcd4",
                                      "selectedFontSize": 14,
                                      "unselectedColor": "rgba(0, 0, 0, 0.54)",
                                      "unselectedFontSize": 12,
                                    },
                                    "button": Object {
                                      "height": 36,
                                      "iconButtonSize": 48,
                                      "minWidth": 88,
                                    },
                                    "card": Object {
                                      "fontWeight": 500,
                                      "subtitleColor": "rgba(0, 0, 0, 0.54)",
                                      "titleColor": "rgba(0, 0, 0, 0.87)",
                                    },
                                    "cardMedia": Object {
                                      "color": "rgba(255, 255, 255, 0.87)",
                                      "overlayContentBackground": "rgba(0, 0, 0, 0.54)",
                                      "subtitleColor": "rgba(255, 255, 255, 0.54)",
                                      "titleColor": "rgba(255, 255, 255, 0.87)",
                                    },
                                    "cardText": Object {
                                      "textColor": "rgba(0, 0, 0, 0.87)",
                                    },
                                    "checkbox": Object {
                                      "boxColor": "rgba(0, 0, 0, 0.87)",
                                      "checkedColor": "#00bcd4",
                                      "disabledColor": "rgba(0, 0, 0, 0.3)",
                                      "labelColor": "rgba(0, 0, 0, 0.87)",
                                      "labelDisabledColor": "rgba(0, 0, 0, 0.3)",
                                      "requiredColor": "#00bcd4",
                                    },
                                    "chip": Object {
                                      "backgroundColor": "rgb(224, 224, 224)",
                                      "deleteIconColor": "rgba(0, 0, 0, 0.26)",
                                      "fontSize": 14,
                                      "fontWeight": 400,
                                      "shadow": "0 1px 6px rgba(0, 0, 0, 0.12),
                                0 1px 4px rgba(0, 0, 0, 0.12)",
                                      "textColor": "rgba(0, 0, 0, 0.87)",
                                    },
                                    "datePicker": Object {
                                      "calendarTextColor": "rgba(0, 0, 0, 0.87)",
                                      "calendarYearBackgroundColor": "#ffffff",
                                      "color": "#7cb342",
                                      "headerColor": "#aed581",
                                      "selectColor": "#7cb342",
                                      "selectTextColor": "#ffffff",
                                      "textColor": "#ffffff",
                                    },
                                    "dialog": Object {
                                      "bodyColor": "rgba(0, 0, 0, 0.6)",
                                      "bodyFontSize": 16,
                                      "titleFontSize": 22,
                                    },
                                    "drawer": Object {
                                      "color": "#ffffff",
                                      "width": 256,
                                    },
                                    "dropDownMenu": Object {
                                      "accentColor": "#e0e0e0",
                                    },
                                    "enhancedButton": Object {
                                      "tapHighlightColor": "rgba(0, 0, 0, 0)",
                                    },
                                    "flatButton": Object {
                                      "buttonFilterColor": "#999999",
                                      "color": "rgba(0, 0, 0, 0)",
                                      "disabledTextColor": "rgba(0, 0, 0, 0.3)",
                                      "fontSize": 14,
                                      "fontWeight": 500,
                                      "primaryTextColor": "#689f38",
                                      "secondaryTextColor": "#ff4081",
                                      "textColor": "rgba(0, 0, 0, 0.87)",
                                    },
                                    "floatingActionButton": Object {
                                      "buttonSize": 56,
                                      "color": "#00bcd4",
                                      "disabledColor": "rgb(224, 224, 224)",
                                      "disabledTextColor": "rgba(0, 0, 0, 0.3)",
                                      "iconColor": "#ffffff",
                                      "miniSize": 40,
                                      "secondaryColor": "#ff4081",
                                      "secondaryIconColor": "#ffffff",
                                    },
                                    "fontFamily": "Roboto, sans-serif",
                                    "gridTile": Object {
                                      "textColor": "#ffffff",
                                    },
                                    "icon": Object {
                                      "backgroundColor": "#00bcd4",
                                      "color": "#ffffff",
                                    },
                                    "inkBar": Object {
                                      "backgroundColor": "#ff4081",
                                    },
                                    "isRtl": false,
                                    "listItem": Object {
                                      "leftIconColor": "#757575",
                                      "nestedLevelDepth": 18,
                                      "rightIconColor": "#757575",
                                      "secondaryTextColor": "rgba(0, 0, 0, 0.54)",
                                    },
                                    "menu": Object {
                                      "backgroundColor": "#ffffff",
                                      "containerBackgroundColor": "#ffffff",
                                    },
                                    "menuItem": Object {
                                      "dataHeight": 32,
                                      "height": 48,
                                      "hoverColor": "rgba(0, 0, 0, 0.1)",
                                      "padding": 24,
                                      "rightIconDesktopFill": "#757575",
                                      "selectedTextColor": "#ff4081",
                                    },
                                    "menuSubheader": Object {
                                      "borderColor": "#e0e0e0",
                                      "padding": 24,
                                      "textColor": "#00bcd4",
                                    },
                                    "overlay": Object {
                                      "backgroundColor": "rgba(0, 0, 0, 0.54)",
                                    },
                                    "palette": Object {
                                      "accent1Color": "#ff4081",
                                      "accent2Color": "#f5f5f5",
                                      "accent3Color": "#9e9e9e",
                                      "alternateTextColor": "#ffffff",
                                      "borderColor": "#e0e0e0",
                                      "canvasColor": "#ffffff",
                                      "clockCircleColor": "rgba(0, 0, 0, 0.07)",
                                      "disabledColor": "rgba(0, 0, 0, 0.3)",
                                      "pickerHeaderColor": "#00bcd4",
                                      "primary1Color": "#00bcd4",
                                      "primary2Color": "#0097a7",
                                      "primary3Color": "#bdbdbd",
                                      "secondaryTextColor": "rgba(0, 0, 0, 0.54)",
                                      "shadowColor": "rgba(0, 0, 0, 1)",
                                      "textColor": "rgba(0, 0, 0, 0.87)",
                                    },
                                    "paper": Object {
                                      "backgroundColor": "#ffffff",
                                      "color": "rgba(0, 0, 0, 0.87)",
                                      "zDepthShadows": Array [
                                        "0 1px 6px rgba(0, 0, 0, 0.12),
                                 0 1px 4px rgba(0, 0, 0, 0.12)",
                                        "0 3px 10px rgba(0, 0, 0, 0.16),
                                 0 3px 10px rgba(0, 0, 0, 0.23)",
                                        "0 10px 30px rgba(0, 0, 0, 0.19),
                                 0 6px 10px rgba(0, 0, 0, 0.23)",
                                        "0 14px 45px rgba(0, 0, 0, 0.25),
                                 0 10px 18px rgba(0, 0, 0, 0.22)",
                                        "0 19px 60px rgba(0, 0, 0, 0.3),
                                 0 15px 20px rgba(0, 0, 0, 0.22)",
                                      ],
                                    },
                                    "prepareStyles": [Function],
                                    "radioButton": Object {
                                      "backgroundColor": "#ffffff",
                                      "borderColor": "rgba(0, 0, 0, 0.87)",
                                      "checkedColor": "#00bcd4",
                                      "disabledColor": "rgba(0, 0, 0, 0.3)",
                                      "labelColor": "rgba(0, 0, 0, 0.87)",
                                      "labelDisabledColor": "rgba(0, 0, 0, 0.3)",
                                      "requiredColor": "#00bcd4",
                                      "size": 24,
                                    },
                                    "raisedButton": Object {
                                      "color": "#ffffff",
                                      "disabledColor": "rgb(229, 229, 229)",
                                      "disabledTextColor": "rgba(0, 0, 0, 0.3)",
                                      "fontSize": 14,
                                      "fontWeight": 500,
                                      "primaryColor": "#9ccc65",
                                      "primaryTextColor": "#ffffff",
                                      "secondaryColor": "#ff4081",
                                      "secondaryTextColor": "#ffffff",
                                      "textColor": "rgba(0, 0, 0, 0.87)",
                                    },
                                    "rawTheme": Object {
                                      "fontFamily": "Roboto, sans-serif",
                                      "palette": Object {
                                        "accent1Color": "#ff4081",
                                        "accent2Color": "#f5f5f5",
                                        "accent3Color": "#9e9e9e",
                                        "alternateTextColor": "#ffffff",
                                        "borderColor": "#e0e0e0",
                                        "canvasColor": "#ffffff",
                                        "clockCircleColor": "rgba(0, 0, 0, 0.07)",
                                        "disabledColor": "rgba(0, 0, 0, 0.3)",
                                        "pickerHeaderColor": "#00bcd4",
                                        "primary1Color": "#00bcd4",
                                        "primary2Color": "#0097a7",
                                        "primary3Color": "#bdbdbd",
                                        "secondaryTextColor": "rgba(0, 0, 0, 0.54)",
                                        "shadowColor": "rgba(0, 0, 0, 1)",
                                        "textColor": "rgba(0, 0, 0, 0.87)",
                                      },
                                      "spacing": Object {
                                        "desktopDrawerMenuItemHeight": 48,
                                        "desktopDropDownMenuFontSize": 15,
                                        "desktopDropDownMenuItemHeight": 32,
                                        "desktopGutter": 24,
                                        "desktopGutterLess": 16,
                                        "desktopGutterMini": 8,
                                        "desktopGutterMore": 32,
                                        "desktopKeylineIncrement": 64,
                                        "desktopSubheaderHeight": 48,
                                        "desktopToolbarHeight": 56,
                                        "iconSize": 24,
                                      },
                                    },
                                    "refreshIndicator": Object {
                                      "loadingStrokeColor": "#00bcd4",
                                      "strokeColor": "#e0e0e0",
                                    },
                                    "ripple": Object {
                                      "color": "rgba(0, 0, 0, 0.87)",
                                    },
                                    "slider": Object {
                                      "handleColorZero": "#bdbdbd",
                                      "handleFillColor": "#ffffff",
                                      "handleSize": 12,
                                      "handleSizeActive": 18,
                                      "handleSizeDisabled": 8,
                                      "rippleColor": "#00bcd4",
                                      "selectionColor": "#00bcd4",
                                      "trackColor": "#bdbdbd",
                                      "trackColorSelected": "#9e9e9e",
                                      "trackSize": 2,
                                    },
                                    "snackbar": Object {
                                      "actionColor": "#ff4081",
                                      "backgroundColor": "rgba(0, 0, 0, 0.87)",
                                      "textColor": "#ffffff",
                                    },
                                    "spacing": Object {
                                      "desktopDrawerMenuItemHeight": 48,
                                      "desktopDropDownMenuFontSize": 15,
                                      "desktopDropDownMenuItemHeight": 32,
                                      "desktopGutter": 24,
                                      "desktopGutterLess": 16,
                                      "desktopGutterMini": 8,
                                      "desktopGutterMore": 32,
                                      "desktopKeylineIncrement": 64,
                                      "desktopSubheaderHeight": 48,
                                      "desktopToolbarHeight": 56,
                                      "iconSize": 24,
                                    },
                                    "stepper": Object {
                                      "backgroundColor": "transparent",
                                      "connectorLineColor": "#bdbdbd",
                                      "disabledTextColor": "rgba(0, 0, 0, 0.26)",
                                      "hoverBackgroundColor": "rgba(0, 0, 0, 0.06)",
                                      "hoveredIconColor": "#616161",
                                      "iconColor": "#00bcd4",
                                      "inactiveIconColor": "#9e9e9e",
                                      "textColor": "rgba(0, 0, 0, 0.87)",
                                    },
                                    "subheader": Object {
                                      "color": "rgba(0, 0, 0, 0.54)",
                                      "fontWeight": 500,
                                    },
                                    "svgIcon": Object {
                                      "color": "rgba(0, 0, 0, 0.87)",
                                    },
                                    "table": Object {
                                      "backgroundColor": "#ffffff",
                                    },
                                    "tableFooter": Object {
                                      "borderColor": "#e0e0e0",
                                      "textColor": "#9e9e9e",
                                    },
                                    "tableHeader": Object {
                                      "borderColor": "#e0e0e0",
                                    },
                                    "tableHeaderColumn": Object {
                                      "height": 56,
                                      "spacing": 24,
                                      "textColor": "#9e9e9e",
                                    },
                                    "tableRow": Object {
                                      "borderColor": "#e0e0e0",
                                      "height": 48,
                                      "hoverColor": "#f5f5f5",
                                      "selectedColor": "#e0e0e0",
                                      "stripeColor": "rgba(127, 221, 233, 0.4)",
                                      "textColor": "rgba(0, 0, 0, 0.87)",
                                    },
                                    "tableRowColumn": Object {
                                      "height": 48,
                                      "spacing": 24,
                                    },
                                    "tabs": Object {
                                      "backgroundColor": "#00bcd4",
                                      "selectedTextColor": "#ffffff",
                                      "textColor": "rgba(255, 255, 255, 0.7)",
                                    },
                                    "textField": Object {
                                      "backgroundColor": "transparent",
                                      "borderColor": "#e0e0e0",
                                      "disabledTextColor": "rgba(0, 0, 0, 0.3)",
                                      "errorColor": "#f44336",
                                      "floatingLabelColor": "rgba(0, 0, 0, 0.3)",
                                      "focusColor": "#aed581",
                                      "hintColor": "rgba(0, 0, 0, 0.3)",
                                      "textColor": "rgba(0, 0, 0, 0.87)",
                                    },
                                    "timePicker": Object {
                                      "accentColor": "#00bcd4",
                                      "clockCircleColor": "rgba(0, 0, 0, 0.07)",
                                      "clockColor": "rgba(0, 0, 0, 0.87)",
                                      "color": "#ffffff",
                                      "headerColor": "#00bcd4",
                                      "selectColor": "#0097a7",
                                      "selectTextColor": "#ffffff",
                                      "textColor": "#ffffff",
                                    },
                                    "toggle": Object {
                                      "labelColor": "rgba(0, 0, 0, 0.87)",
                                      "labelDisabledColor": "rgba(0, 0, 0, 0.3)",
                                      "thumbDisabledColor": "#e0e0e0",
                                      "thumbOffColor": "#f5f5f5",
                                      "thumbOnColor": "#7cb342",
                                      "thumbRequiredColor": "#00bcd4",
                                      "trackDisabledColor": "#bdbdbd",
                                      "trackOffColor": "#bdbdbd",
                                      "trackOnColor": "#aed581",
                                      "trackRequiredColor": "rgba(0, 188, 212, 0.5)",
                                    },
                                    "toolbar": Object {
                                      "backgroundColor": "rgb(232, 232, 232)",
                                      "color": "rgba(0, 0, 0, 0.54)",
                                      "height": 56,
                                      "hoverColor": "rgba(0, 0, 0, 0.87)",
                                      "iconColor": "rgba(0, 0, 0, 0.4)",
                                      "menuHoverColor": "rgba(0, 0, 0, 0.1)",
                                      "separatorColor": "rgba(0, 0, 0, 0.175)",
                                      "titleFontSize": 20,
                                    },
                                    "tooltip": Object {
                                      "color": "#ffffff",
                                      "opacity": 0.9,
                                      "rippleBackgroundColor": "#616161",
                                    },
                                    "userAgent": undefined,
                                    "zIndex": Object {
                                      "appBar": 1100,
                                      "dialog": 1500,
                                      "dialogOverlay": 1400,
                                      "drawer": 1300,
                                      "drawerOverlay": 1200,
                                      "layer": 2000,
                                      "menu": 1000,
                                      "popover": 2100,
                                      "snackbar": 2900,
                                      "tooltip": 3000,
                                    },
                                  }
            }
>
            <h1
                        className={undefined}
            >
                         Add New Service
            </h1>
            <div
                        className={undefined}
            >
                        <TextField
                                    disabled={false}
                                    floatingLabelFixed={false}
                                    floatingLabelText="HREF"
                                    fullWidth={false}
                                    hintText="Reference of the service..."
                                    multiLine={false}
                                    onChange={[Function]}
                                    rows={1}
                                    type="text"
                                    underlineShow={true}
                                    value=""
                        />
            </div>
            <div
                        className={undefined}
            >
                        <TextField
                                    disabled={false}
                                    floatingLabelFixed={false}
                                    floatingLabelText="Category"
                                    fullWidth={false}
                                    hintText="Enter category..."
                                    multiLine={false}
                                    onChange={[Function]}
                                    rows={1}
                                    type="text"
                                    underlineShow={true}
                                    value=""
                        />
            </div>
            <div
                        className={undefined}
            >
                        <TextField
                                    disabled={false}
                                    errorText="Name is a required field"
                                    floatingLabelFixed={false}
                                    floatingLabelText="Name"
                                    fullWidth={false}
                                    hintText="Enter name..."
                                    multiLine={false}
                                    onChange={[Function]}
                                    rows={1}
                                    type="text"
                                    underlineShow={true}
                                    value=""
                        />
            </div>
            <div
                        className={undefined}
            >
                        <TextField
                                    disabled={false}
                                    floatingLabelFixed={false}
                                    floatingLabelText="Description"
                                    fullWidth={false}
                                    hintText="Description of the service..."
                                    multiLine={true}
                                    onChange={[Function]}
                                    rows={1}
                                    type="text"
                                    underlineShow={true}
                                    value=""
                        />
            </div>
            <Divider
                        className={undefined}
                        inset={false}
            />
            <div
                        className={undefined}
            >
                        <Toggle
                                    defaultToggled={false}
                                    disabled={false}
                                    iconStyle={
                                                Object {
                                                            "marginLeft": "0px",
                                                          }
                                    }
                                    label="Is the service enabled?"
                                    labelPosition="left"
                                    labelStyle={
                                                Object {
                                                            "width": "50%",
                                                          }
                                    }
                                    onToggle={[Function]}
                                    toggled={false}
                        />
            </div>
            <div
                        className={undefined}
            >
                        <Toggle
                                    defaultToggled={false}
                                    disabled={false}
                                    iconStyle={
                                                Object {
                                                            "marginLeft": "0px",
                                                          }
                                    }
                                    label="Has the service started?"
                                    labelPosition="left"
                                    labelStyle={
                                                Object {
                                                            "width": "50%",
                                                          }
                                    }
                                    onToggle={[Function]}
                                    toggled={false}
                        />
            </div>
            <div
                        className={undefined}
            >
                        <Toggle
                                    defaultToggled={false}
                                    disabled={false}
                                    iconStyle={
                                                Object {
                                                            "marginLeft": "0px",
                                                          }
                                    }
                                    label="Can this service be changed without affecting any other service?"
                                    labelPosition="left"
                                    labelStyle={
                                                Object {
                                                            "width": "50%",
                                                          }
                                    }
                                    onToggle={[Function]}
                                    toggled={false}
                        />
            </div>
            <Divider
                        className={undefined}
                        inset={false}
            />
            <div
                        className={undefined}
            >
                        <h3>
                                    Start Mode
                        </h3>
                        <SelectField
                                    autoWidth={false}
                                    disabled={false}
                                    fullWidth={false}
                                    hintText="Start mode..."
                                    multiple={false}
                                    onChange={[Function]}
                                    value=""
                        >
                                    <MenuItem
                                                anchorOrigin={
                                                            Object {
                                                                        "horizontal": "right",
                                                                        "vertical": "top",
                                                                      }
                                                }
                                                checked={false}
                                                desktop={false}
                                                disabled={false}
                                                focusState="none"
                                                insetChildren={false}
                                                primaryText="Unknown"
                                                targetOrigin={
                                                            Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                                                }
                                                value={0}
                                    />
                                    <MenuItem
                                                anchorOrigin={
                                                            Object {
                                                                        "horizontal": "right",
                                                                        "vertical": "top",
                                                                      }
                                                }
                                                checked={false}
                                                desktop={false}
                                                disabled={false}
                                                focusState="none"
                                                insetChildren={false}
                                                primaryText="Automatically by the managed environment"
                                                targetOrigin={
                                                            Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                                                }
                                                value={1}
                                    />
                                    <MenuItem
                                                anchorOrigin={
                                                            Object {
                                                                        "horizontal": "right",
                                                                        "vertical": "top",
                                                                      }
                                                }
                                                checked={false}
                                                desktop={false}
                                                disabled={false}
                                                focusState="none"
                                                insetChildren={false}
                                                primaryText="Automatically by the owning device"
                                                targetOrigin={
                                                            Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                                                }
                                                value={2}
                                    />
                                    <MenuItem
                                                anchorOrigin={
                                                            Object {
                                                                        "horizontal": "right",
                                                                        "vertical": "top",
                                                                      }
                                                }
                                                checked={false}
                                                desktop={false}
                                                disabled={false}
                                                focusState="none"
                                                insetChildren={false}
                                                primaryText="Manually by the Provider of the Service"
                                                targetOrigin={
                                                            Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                                                }
                                                value={3}
                                    />
                                    <MenuItem
                                                anchorOrigin={
                                                            Object {
                                                                        "horizontal": "right",
                                                                        "vertical": "top",
                                                                      }
                                                }
                                                checked={false}
                                                desktop={false}
                                                disabled={false}
                                                focusState="none"
                                                insetChildren={false}
                                                primaryText="Manually by a Customer of the Provider"
                                                targetOrigin={
                                                            Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                                                }
                                                value={4}
                                    />
                                    <MenuItem
                                                anchorOrigin={
                                                            Object {
                                                                        "horizontal": "right",
                                                                        "vertical": "top",
                                                                      }
                                                }
                                                checked={false}
                                                desktop={false}
                                                disabled={false}
                                                focusState="none"
                                                insetChildren={false}
                                                primaryText="Any of the above"
                                                targetOrigin={
                                                            Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                                                }
                                                value={5}
                                    />
                        </SelectField>
            </div>
            <div
                        className={undefined}
            >
                        <h3>
                                    State
                        </h3>
                        <SelectField
                                    autoWidth={false}
                                    disabled={false}
                                    fullWidth={false}
                                    hintText="State of the service..."
                                    multiple={false}
                                    onChange={[Function]}
                                    value=""
                        >
                                    <MenuItem
                                                anchorOrigin={
                                                            Object {
                                                                        "horizontal": "right",
                                                                        "vertical": "top",
                                                                      }
                                                }
                                                checked={false}
                                                desktop={false}
                                                disabled={false}
                                                focusState="none"
                                                insetChildren={false}
                                                primaryText="feasibilityChecked"
                                                targetOrigin={
                                                            Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                                                }
                                                value={0}
                                    />
                                    <MenuItem
                                                anchorOrigin={
                                                            Object {
                                                                        "horizontal": "right",
                                                                        "vertical": "top",
                                                                      }
                                                }
                                                checked={false}
                                                desktop={false}
                                                disabled={false}
                                                focusState="none"
                                                insetChildren={false}
                                                primaryText="designed"
                                                targetOrigin={
                                                            Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                                                }
                                                value={1}
                                    />
                                    <MenuItem
                                                anchorOrigin={
                                                            Object {
                                                                        "horizontal": "right",
                                                                        "vertical": "top",
                                                                      }
                                                }
                                                checked={false}
                                                desktop={false}
                                                disabled={false}
                                                focusState="none"
                                                insetChildren={false}
                                                primaryText="reserved"
                                                targetOrigin={
                                                            Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                                                }
                                                value={2}
                                    />
                                    <MenuItem
                                                anchorOrigin={
                                                            Object {
                                                                        "horizontal": "right",
                                                                        "vertical": "top",
                                                                      }
                                                }
                                                checked={false}
                                                desktop={false}
                                                disabled={false}
                                                focusState="none"
                                                insetChildren={false}
                                                primaryText="active"
                                                targetOrigin={
                                                            Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                                                }
                                                value={3}
                                    />
                                    <MenuItem
                                                anchorOrigin={
                                                            Object {
                                                                        "horizontal": "right",
                                                                        "vertical": "top",
                                                                      }
                                                }
                                                checked={false}
                                                desktop={false}
                                                disabled={false}
                                                focusState="none"
                                                insetChildren={false}
                                                primaryText="inactive"
                                                targetOrigin={
                                                            Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                                                }
                                                value={4}
                                    />
                                    <MenuItem
                                                anchorOrigin={
                                                            Object {
                                                                        "horizontal": "right",
                                                                        "vertical": "top",
                                                                      }
                                                }
                                                checked={false}
                                                desktop={false}
                                                disabled={false}
                                                focusState="none"
                                                insetChildren={false}
                                                primaryText="terminated"
                                                targetOrigin={
                                                            Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                                                }
                                                value={5}
                                    />
                        </SelectField>
            </div>
            <Divider
                        className={undefined}
                        inset={false}
            />
            <div
                        className={undefined}
            >
                        <h3>
                                    Order date
                        </h3>
                        <DatePicker
                                    autoOk={false}
                                    container="dialog"
                                    disableYearSelection={false}
                                    disabled={false}
                                    firstDayOfWeek={1}
                                    hideCalendarDate={false}
                                    hintText="Order Date"
                                    onChange={[Function]}
                                    openToYearSelection={false}
                                    style={Object {}}
                                    value=""
                        />
            </div>
            <div
                        className={undefined}
            >
                        <h3>
                                    Start date
                        </h3>
                        <DatePicker
                                    autoOk={false}
                                    container="dialog"
                                    disableYearSelection={false}
                                    disabled={false}
                                    firstDayOfWeek={1}
                                    hideCalendarDate={false}
                                    hintText="Start Date"
                                    onChange={[Function]}
                                    openToYearSelection={false}
                                    style={Object {}}
                                    value=""
                        />
            </div>
            <div
                        className={undefined}
            >
                        <h3>
                                    End date
                        </h3>
                        <DatePicker
                                    autoOk={false}
                                    container="dialog"
                                    disableYearSelection={false}
                                    disabled={false}
                                    firstDayOfWeek={1}
                                    hideCalendarDate={false}
                                    hintText="End Date"
                                    onChange={[Function]}
                                    openToYearSelection={false}
                                    style={Object {}}
                                    value=""
                        />
                        <br />
            </div>
            <Divider
                        className={undefined}
                        inset={false}
            />
            <div>
                        <h3>
                                    Service Specification
                        </h3>
                        <ObjectInput
                                    mapValues={[Function]}
                                    onChange={[Function]}
                                    value={
                                                Object {
                                                            "href": "",
                                                            "name": "",
                                                            "version": "",
                                                          }
                                    }
                        >
                                    <TextField
                                                className={undefined}
                                                disabled={false}
                                                floatingLabelFixed={false}
                                                floatingLabelText="Name"
                                                fullWidth={false}
                                                hintText="Name of the service specification..."
                                                multiLine={false}
                                                name="name"
                                                rows={1}
                                                type="name"
                                                underlineShow={true}
                                    />
                                    <TextField
                                                className={undefined}
                                                disabled={false}
                                                floatingLabelFixed={false}
                                                floatingLabelText="HREF"
                                                fullWidth={false}
                                                hintText="Href of the service specification..."
                                                multiLine={false}
                                                name="href"
                                                rows={1}
                                                type="text"
                                                underlineShow={true}
                                    />
                                    <TextField
                                                className={undefined}
                                                disabled={false}
                                                floatingLabelFixed={false}
                                                floatingLabelText="Version"
                                                fullWidth={false}
                                                hintText="Version of service specification..."
                                                multiLine={false}
                                                name="version"
                                                rows={1}
                                                type="text"
                                                underlineShow={true}
                                    />
                        </ObjectInput>
            </div>
            <Divider
                        className={undefined}
                        inset={false}
            />
            <div>
                        <h3>
                                    Related Parties
                        </h3>
                        <ListInput
                                    component={[Function]}
                                    count={0}
                                    max={Infinity}
                                    min={1}
                                    onChange={[Function]}
                                    values={Array []}
                        />
            </div>
            <Divider
                        className={undefined}
                        inset={false}
            />
            <div>
                        <h3>
                                    Service Characteristic
                        </h3>
                        <ListInput
                                    component={[Function]}
                                    count={0}
                                    max={Infinity}
                                    min={0}
                                    onChange={[Function]}
                                    values={Array []}
                        />
            </div>
            <Divider
                        className={undefined}
                        inset={false}
            />
            <div>
                        <h3>
                                    Service Relationship
                        </h3>
                        <ListInput
                                    component={[Function]}
                                    count={0}
                                    max={Infinity}
                                    min={0}
                                    onChange={[Function]}
                                    values={Array []}
                        />
            </div>
            <Divider
                        className={undefined}
                        inset={false}
            />
            <div>
                        <h3>
                                    Supporting Service
                        </h3>
                        <ListInput
                                    component={[Function]}
                                    count={0}
                                    max={Infinity}
                                    min={0}
                                    onChange={[Function]}
                                    values={Array []}
                        />
            </div>
            <Divider
                        className={undefined}
                        inset={false}
            />
            <div>
                        <h3>
                                    Supporting Resource
                        </h3>
                        <ListInput
                                    component={[Function]}
                                    count={0}
                                    max={Infinity}
                                    min={0}
                                    onChange={[Function]}
                                    values={Array []}
                        />
            </div>
            <Divider
                        className={undefined}
                        inset={false}
            />
            <div
                        className={undefined}
            >
                        <RaisedButton
                                    disabled={true}
                                    fullWidth={false}
                                    label="Submit"
                                    labelPosition="after"
                                    onClick={[Function]}
                                    primary={true}
                                    secondary={false}
                        />
            </div>
</MuiThemeProvider>,
          "className": undefined,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <h1
                className={undefined}
>
                 Add New Service
</h1>,
              <div
                className={undefined}
>
                <TextField
                                disabled={false}
                                floatingLabelFixed={false}
                                floatingLabelText="HREF"
                                fullWidth={false}
                                hintText="Reference of the service..."
                                multiLine={false}
                                onChange={[Function]}
                                rows={1}
                                type="text"
                                underlineShow={true}
                                value=""
                />
</div>,
              <div
                className={undefined}
>
                <TextField
                                disabled={false}
                                floatingLabelFixed={false}
                                floatingLabelText="Category"
                                fullWidth={false}
                                hintText="Enter category..."
                                multiLine={false}
                                onChange={[Function]}
                                rows={1}
                                type="text"
                                underlineShow={true}
                                value=""
                />
</div>,
              <div
                className={undefined}
>
                <TextField
                                disabled={false}
                                errorText="Name is a required field"
                                floatingLabelFixed={false}
                                floatingLabelText="Name"
                                fullWidth={false}
                                hintText="Enter name..."
                                multiLine={false}
                                onChange={[Function]}
                                rows={1}
                                type="text"
                                underlineShow={true}
                                value=""
                />
</div>,
              <div
                className={undefined}
>
                <TextField
                                disabled={false}
                                floatingLabelFixed={false}
                                floatingLabelText="Description"
                                fullWidth={false}
                                hintText="Description of the service..."
                                multiLine={true}
                                onChange={[Function]}
                                rows={1}
                                type="text"
                                underlineShow={true}
                                value=""
                />
</div>,
              <Divider
                className={undefined}
                inset={false}
/>,
              <div
                className={undefined}
>
                <Toggle
                                defaultToggled={false}
                                disabled={false}
                                iconStyle={
                                                Object {
                                                                "marginLeft": "0px",
                                                              }
                                }
                                label="Is the service enabled?"
                                labelPosition="left"
                                labelStyle={
                                                Object {
                                                                "width": "50%",
                                                              }
                                }
                                onToggle={[Function]}
                                toggled={false}
                />
</div>,
              <div
                className={undefined}
>
                <Toggle
                                defaultToggled={false}
                                disabled={false}
                                iconStyle={
                                                Object {
                                                                "marginLeft": "0px",
                                                              }
                                }
                                label="Has the service started?"
                                labelPosition="left"
                                labelStyle={
                                                Object {
                                                                "width": "50%",
                                                              }
                                }
                                onToggle={[Function]}
                                toggled={false}
                />
</div>,
              <div
                className={undefined}
>
                <Toggle
                                defaultToggled={false}
                                disabled={false}
                                iconStyle={
                                                Object {
                                                                "marginLeft": "0px",
                                                              }
                                }
                                label="Can this service be changed without affecting any other service?"
                                labelPosition="left"
                                labelStyle={
                                                Object {
                                                                "width": "50%",
                                                              }
                                }
                                onToggle={[Function]}
                                toggled={false}
                />
</div>,
              <Divider
                className={undefined}
                inset={false}
/>,
              <div
                className={undefined}
>
                <h3>
                                Start Mode
                </h3>
                <SelectField
                                autoWidth={false}
                                disabled={false}
                                fullWidth={false}
                                hintText="Start mode..."
                                multiple={false}
                                onChange={[Function]}
                                value=""
                >
                                <MenuItem
                                                anchorOrigin={
                                                                Object {
                                                                                "horizontal": "right",
                                                                                "vertical": "top",
                                                                              }
                                                }
                                                checked={false}
                                                desktop={false}
                                                disabled={false}
                                                focusState="none"
                                                insetChildren={false}
                                                primaryText="Unknown"
                                                targetOrigin={
                                                                Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                                }
                                                value={0}
                                />
                                <MenuItem
                                                anchorOrigin={
                                                                Object {
                                                                                "horizontal": "right",
                                                                                "vertical": "top",
                                                                              }
                                                }
                                                checked={false}
                                                desktop={false}
                                                disabled={false}
                                                focusState="none"
                                                insetChildren={false}
                                                primaryText="Automatically by the managed environment"
                                                targetOrigin={
                                                                Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                                }
                                                value={1}
                                />
                                <MenuItem
                                                anchorOrigin={
                                                                Object {
                                                                                "horizontal": "right",
                                                                                "vertical": "top",
                                                                              }
                                                }
                                                checked={false}
                                                desktop={false}
                                                disabled={false}
                                                focusState="none"
                                                insetChildren={false}
                                                primaryText="Automatically by the owning device"
                                                targetOrigin={
                                                                Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                                }
                                                value={2}
                                />
                                <MenuItem
                                                anchorOrigin={
                                                                Object {
                                                                                "horizontal": "right",
                                                                                "vertical": "top",
                                                                              }
                                                }
                                                checked={false}
                                                desktop={false}
                                                disabled={false}
                                                focusState="none"
                                                insetChildren={false}
                                                primaryText="Manually by the Provider of the Service"
                                                targetOrigin={
                                                                Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                                }
                                                value={3}
                                />
                                <MenuItem
                                                anchorOrigin={
                                                                Object {
                                                                                "horizontal": "right",
                                                                                "vertical": "top",
                                                                              }
                                                }
                                                checked={false}
                                                desktop={false}
                                                disabled={false}
                                                focusState="none"
                                                insetChildren={false}
                                                primaryText="Manually by a Customer of the Provider"
                                                targetOrigin={
                                                                Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                                }
                                                value={4}
                                />
                                <MenuItem
                                                anchorOrigin={
                                                                Object {
                                                                                "horizontal": "right",
                                                                                "vertical": "top",
                                                                              }
                                                }
                                                checked={false}
                                                desktop={false}
                                                disabled={false}
                                                focusState="none"
                                                insetChildren={false}
                                                primaryText="Any of the above"
                                                targetOrigin={
                                                                Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                                }
                                                value={5}
                                />
                </SelectField>
</div>,
              <div
                className={undefined}
>
                <h3>
                                State
                </h3>
                <SelectField
                                autoWidth={false}
                                disabled={false}
                                fullWidth={false}
                                hintText="State of the service..."
                                multiple={false}
                                onChange={[Function]}
                                value=""
                >
                                <MenuItem
                                                anchorOrigin={
                                                                Object {
                                                                                "horizontal": "right",
                                                                                "vertical": "top",
                                                                              }
                                                }
                                                checked={false}
                                                desktop={false}
                                                disabled={false}
                                                focusState="none"
                                                insetChildren={false}
                                                primaryText="feasibilityChecked"
                                                targetOrigin={
                                                                Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                                }
                                                value={0}
                                />
                                <MenuItem
                                                anchorOrigin={
                                                                Object {
                                                                                "horizontal": "right",
                                                                                "vertical": "top",
                                                                              }
                                                }
                                                checked={false}
                                                desktop={false}
                                                disabled={false}
                                                focusState="none"
                                                insetChildren={false}
                                                primaryText="designed"
                                                targetOrigin={
                                                                Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                                }
                                                value={1}
                                />
                                <MenuItem
                                                anchorOrigin={
                                                                Object {
                                                                                "horizontal": "right",
                                                                                "vertical": "top",
                                                                              }
                                                }
                                                checked={false}
                                                desktop={false}
                                                disabled={false}
                                                focusState="none"
                                                insetChildren={false}
                                                primaryText="reserved"
                                                targetOrigin={
                                                                Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                                }
                                                value={2}
                                />
                                <MenuItem
                                                anchorOrigin={
                                                                Object {
                                                                                "horizontal": "right",
                                                                                "vertical": "top",
                                                                              }
                                                }
                                                checked={false}
                                                desktop={false}
                                                disabled={false}
                                                focusState="none"
                                                insetChildren={false}
                                                primaryText="active"
                                                targetOrigin={
                                                                Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                                }
                                                value={3}
                                />
                                <MenuItem
                                                anchorOrigin={
                                                                Object {
                                                                                "horizontal": "right",
                                                                                "vertical": "top",
                                                                              }
                                                }
                                                checked={false}
                                                desktop={false}
                                                disabled={false}
                                                focusState="none"
                                                insetChildren={false}
                                                primaryText="inactive"
                                                targetOrigin={
                                                                Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                                }
                                                value={4}
                                />
                                <MenuItem
                                                anchorOrigin={
                                                                Object {
                                                                                "horizontal": "right",
                                                                                "vertical": "top",
                                                                              }
                                                }
                                                checked={false}
                                                desktop={false}
                                                disabled={false}
                                                focusState="none"
                                                insetChildren={false}
                                                primaryText="terminated"
                                                targetOrigin={
                                                                Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                                }
                                                value={5}
                                />
                </SelectField>
</div>,
              <Divider
                className={undefined}
                inset={false}
/>,
              <div
                className={undefined}
>
                <h3>
                                Order date
                </h3>
                <DatePicker
                                autoOk={false}
                                container="dialog"
                                disableYearSelection={false}
                                disabled={false}
                                firstDayOfWeek={1}
                                hideCalendarDate={false}
                                hintText="Order Date"
                                onChange={[Function]}
                                openToYearSelection={false}
                                style={Object {}}
                                value=""
                />
</div>,
              <div
                className={undefined}
>
                <h3>
                                Start date
                </h3>
                <DatePicker
                                autoOk={false}
                                container="dialog"
                                disableYearSelection={false}
                                disabled={false}
                                firstDayOfWeek={1}
                                hideCalendarDate={false}
                                hintText="Start Date"
                                onChange={[Function]}
                                openToYearSelection={false}
                                style={Object {}}
                                value=""
                />
</div>,
              <div
                className={undefined}
>
                <h3>
                                End date
                </h3>
                <DatePicker
                                autoOk={false}
                                container="dialog"
                                disableYearSelection={false}
                                disabled={false}
                                firstDayOfWeek={1}
                                hideCalendarDate={false}
                                hintText="End Date"
                                onChange={[Function]}
                                openToYearSelection={false}
                                style={Object {}}
                                value=""
                />
                <br />
</div>,
              <Divider
                className={undefined}
                inset={false}
/>,
              <div>
                <h3>
                                Service Specification
                </h3>
                <ObjectInput
                                mapValues={[Function]}
                                onChange={[Function]}
                                value={
                                                Object {
                                                                "href": "",
                                                                "name": "",
                                                                "version": "",
                                                              }
                                }
                >
                                <TextField
                                                className={undefined}
                                                disabled={false}
                                                floatingLabelFixed={false}
                                                floatingLabelText="Name"
                                                fullWidth={false}
                                                hintText="Name of the service specification..."
                                                multiLine={false}
                                                name="name"
                                                rows={1}
                                                type="name"
                                                underlineShow={true}
                                />
                                <TextField
                                                className={undefined}
                                                disabled={false}
                                                floatingLabelFixed={false}
                                                floatingLabelText="HREF"
                                                fullWidth={false}
                                                hintText="Href of the service specification..."
                                                multiLine={false}
                                                name="href"
                                                rows={1}
                                                type="text"
                                                underlineShow={true}
                                />
                                <TextField
                                                className={undefined}
                                                disabled={false}
                                                floatingLabelFixed={false}
                                                floatingLabelText="Version"
                                                fullWidth={false}
                                                hintText="Version of service specification..."
                                                multiLine={false}
                                                name="version"
                                                rows={1}
                                                type="text"
                                                underlineShow={true}
                                />
                </ObjectInput>
</div>,
              <Divider
                className={undefined}
                inset={false}
/>,
              <div>
                <h3>
                                Related Parties
                </h3>
                <ListInput
                                component={[Function]}
                                count={0}
                                max={Infinity}
                                min={1}
                                onChange={[Function]}
                                values={Array []}
                />
</div>,
              <Divider
                className={undefined}
                inset={false}
/>,
              <div>
                <h3>
                                Service Characteristic
                </h3>
                <ListInput
                                component={[Function]}
                                count={0}
                                max={Infinity}
                                min={0}
                                onChange={[Function]}
                                values={Array []}
                />
</div>,
              <Divider
                className={undefined}
                inset={false}
/>,
              <div>
                <h3>
                                Service Relationship
                </h3>
                <ListInput
                                component={[Function]}
                                count={0}
                                max={Infinity}
                                min={0}
                                onChange={[Function]}
                                values={Array []}
                />
</div>,
              <Divider
                className={undefined}
                inset={false}
/>,
              <div>
                <h3>
                                Supporting Service
                </h3>
                <ListInput
                                component={[Function]}
                                count={0}
                                max={Infinity}
                                min={0}
                                onChange={[Function]}
                                values={Array []}
                />
</div>,
              <Divider
                className={undefined}
                inset={false}
/>,
              <div>
                <h3>
                                Supporting Resource
                </h3>
                <ListInput
                                component={[Function]}
                                count={0}
                                max={Infinity}
                                min={0}
                                onChange={[Function]}
                                values={Array []}
                />
</div>,
              <Divider
                className={undefined}
                inset={false}
/>,
              <div
                className={undefined}
>
                <RaisedButton
                                disabled={true}
                                fullWidth={false}
                                label="Submit"
                                labelPosition="after"
                                onClick={[Function]}
                                primary={true}
                                secondary={false}
                />
</div>,
            ],
            "muiTheme": Object {
              "appBar": Object {
                "color": "#00bcd4",
                "height": 64,
                "padding": 24,
                "textColor": "#ffffff",
                "titleFontWeight": 400,
              },
              "avatar": Object {
                "backgroundColor": "rgb(188, 188, 188)",
                "color": "#ffffff",
              },
              "badge": Object {
                "color": "#ffffff",
                "fontWeight": 500,
                "primaryColor": "#00bcd4",
                "primaryTextColor": "#ffffff",
                "secondaryColor": "#ff4081",
                "secondaryTextColor": "#ffffff",
                "textColor": "rgba(0, 0, 0, 0.87)",
              },
              "baseTheme": Object {
                "fontFamily": "Roboto, sans-serif",
                "palette": Object {
                  "accent1Color": "#ff4081",
                  "accent2Color": "#f5f5f5",
                  "accent3Color": "#9e9e9e",
                  "alternateTextColor": "#ffffff",
                  "borderColor": "#e0e0e0",
                  "canvasColor": "#ffffff",
                  "clockCircleColor": "rgba(0, 0, 0, 0.07)",
                  "disabledColor": "rgba(0, 0, 0, 0.3)",
                  "pickerHeaderColor": "#00bcd4",
                  "primary1Color": "#00bcd4",
                  "primary2Color": "#0097a7",
                  "primary3Color": "#bdbdbd",
                  "secondaryTextColor": "rgba(0, 0, 0, 0.54)",
                  "shadowColor": "rgba(0, 0, 0, 1)",
                  "textColor": "rgba(0, 0, 0, 0.87)",
                },
                "spacing": Object {
                  "desktopDrawerMenuItemHeight": 48,
                  "desktopDropDownMenuFontSize": 15,
                  "desktopDropDownMenuItemHeight": 32,
                  "desktopGutter": 24,
                  "desktopGutterLess": 16,
                  "desktopGutterMini": 8,
                  "desktopGutterMore": 32,
                  "desktopKeylineIncrement": 64,
                  "desktopSubheaderHeight": 48,
                  "desktopToolbarHeight": 56,
                  "iconSize": 24,
                },
              },
              "borderRadius": 2,
              "bottomNavigation": Object {
                "backgroundColor": "#ffffff",
                "height": 56,
                "selectedColor": "#00bcd4",
                "selectedFontSize": 14,
                "unselectedColor": "rgba(0, 0, 0, 0.54)",
                "unselectedFontSize": 12,
              },
              "button": Object {
                "height": 36,
                "iconButtonSize": 48,
                "minWidth": 88,
              },
              "card": Object {
                "fontWeight": 500,
                "subtitleColor": "rgba(0, 0, 0, 0.54)",
                "titleColor": "rgba(0, 0, 0, 0.87)",
              },
              "cardMedia": Object {
                "color": "rgba(255, 255, 255, 0.87)",
                "overlayContentBackground": "rgba(0, 0, 0, 0.54)",
                "subtitleColor": "rgba(255, 255, 255, 0.54)",
                "titleColor": "rgba(255, 255, 255, 0.87)",
              },
              "cardText": Object {
                "textColor": "rgba(0, 0, 0, 0.87)",
              },
              "checkbox": Object {
                "boxColor": "rgba(0, 0, 0, 0.87)",
                "checkedColor": "#00bcd4",
                "disabledColor": "rgba(0, 0, 0, 0.3)",
                "labelColor": "rgba(0, 0, 0, 0.87)",
                "labelDisabledColor": "rgba(0, 0, 0, 0.3)",
                "requiredColor": "#00bcd4",
              },
              "chip": Object {
                "backgroundColor": "rgb(224, 224, 224)",
                "deleteIconColor": "rgba(0, 0, 0, 0.26)",
                "fontSize": 14,
                "fontWeight": 400,
                "shadow": "0 1px 6px rgba(0, 0, 0, 0.12),
        0 1px 4px rgba(0, 0, 0, 0.12)",
                "textColor": "rgba(0, 0, 0, 0.87)",
              },
              "datePicker": Object {
                "calendarTextColor": "rgba(0, 0, 0, 0.87)",
                "calendarYearBackgroundColor": "#ffffff",
                "color": "#7cb342",
                "headerColor": "#aed581",
                "selectColor": "#7cb342",
                "selectTextColor": "#ffffff",
                "textColor": "#ffffff",
              },
              "dialog": Object {
                "bodyColor": "rgba(0, 0, 0, 0.6)",
                "bodyFontSize": 16,
                "titleFontSize": 22,
              },
              "drawer": Object {
                "color": "#ffffff",
                "width": 256,
              },
              "dropDownMenu": Object {
                "accentColor": "#e0e0e0",
              },
              "enhancedButton": Object {
                "tapHighlightColor": "rgba(0, 0, 0, 0)",
              },
              "flatButton": Object {
                "buttonFilterColor": "#999999",
                "color": "rgba(0, 0, 0, 0)",
                "disabledTextColor": "rgba(0, 0, 0, 0.3)",
                "fontSize": 14,
                "fontWeight": 500,
                "primaryTextColor": "#689f38",
                "secondaryTextColor": "#ff4081",
                "textColor": "rgba(0, 0, 0, 0.87)",
              },
              "floatingActionButton": Object {
                "buttonSize": 56,
                "color": "#00bcd4",
                "disabledColor": "rgb(224, 224, 224)",
                "disabledTextColor": "rgba(0, 0, 0, 0.3)",
                "iconColor": "#ffffff",
                "miniSize": 40,
                "secondaryColor": "#ff4081",
                "secondaryIconColor": "#ffffff",
              },
              "fontFamily": "Roboto, sans-serif",
              "gridTile": Object {
                "textColor": "#ffffff",
              },
              "icon": Object {
                "backgroundColor": "#00bcd4",
                "color": "#ffffff",
              },
              "inkBar": Object {
                "backgroundColor": "#ff4081",
              },
              "isRtl": false,
              "listItem": Object {
                "leftIconColor": "#757575",
                "nestedLevelDepth": 18,
                "rightIconColor": "#757575",
                "secondaryTextColor": "rgba(0, 0, 0, 0.54)",
              },
              "menu": Object {
                "backgroundColor": "#ffffff",
                "containerBackgroundColor": "#ffffff",
              },
              "menuItem": Object {
                "dataHeight": 32,
                "height": 48,
                "hoverColor": "rgba(0, 0, 0, 0.1)",
                "padding": 24,
                "rightIconDesktopFill": "#757575",
                "selectedTextColor": "#ff4081",
              },
              "menuSubheader": Object {
                "borderColor": "#e0e0e0",
                "padding": 24,
                "textColor": "#00bcd4",
              },
              "overlay": Object {
                "backgroundColor": "rgba(0, 0, 0, 0.54)",
              },
              "palette": Object {
                "accent1Color": "#ff4081",
                "accent2Color": "#f5f5f5",
                "accent3Color": "#9e9e9e",
                "alternateTextColor": "#ffffff",
                "borderColor": "#e0e0e0",
                "canvasColor": "#ffffff",
                "clockCircleColor": "rgba(0, 0, 0, 0.07)",
                "disabledColor": "rgba(0, 0, 0, 0.3)",
                "pickerHeaderColor": "#00bcd4",
                "primary1Color": "#00bcd4",
                "primary2Color": "#0097a7",
                "primary3Color": "#bdbdbd",
                "secondaryTextColor": "rgba(0, 0, 0, 0.54)",
                "shadowColor": "rgba(0, 0, 0, 1)",
                "textColor": "rgba(0, 0, 0, 0.87)",
              },
              "paper": Object {
                "backgroundColor": "#ffffff",
                "color": "rgba(0, 0, 0, 0.87)",
                "zDepthShadows": Array [
                  "0 1px 6px rgba(0, 0, 0, 0.12),
         0 1px 4px rgba(0, 0, 0, 0.12)",
                  "0 3px 10px rgba(0, 0, 0, 0.16),
         0 3px 10px rgba(0, 0, 0, 0.23)",
                  "0 10px 30px rgba(0, 0, 0, 0.19),
         0 6px 10px rgba(0, 0, 0, 0.23)",
                  "0 14px 45px rgba(0, 0, 0, 0.25),
         0 10px 18px rgba(0, 0, 0, 0.22)",
                  "0 19px 60px rgba(0, 0, 0, 0.3),
         0 15px 20px rgba(0, 0, 0, 0.22)",
                ],
              },
              "prepareStyles": [Function],
              "radioButton": Object {
                "backgroundColor": "#ffffff",
                "borderColor": "rgba(0, 0, 0, 0.87)",
                "checkedColor": "#00bcd4",
                "disabledColor": "rgba(0, 0, 0, 0.3)",
                "labelColor": "rgba(0, 0, 0, 0.87)",
                "labelDisabledColor": "rgba(0, 0, 0, 0.3)",
                "requiredColor": "#00bcd4",
                "size": 24,
              },
              "raisedButton": Object {
                "color": "#ffffff",
                "disabledColor": "rgb(229, 229, 229)",
                "disabledTextColor": "rgba(0, 0, 0, 0.3)",
                "fontSize": 14,
                "fontWeight": 500,
                "primaryColor": "#9ccc65",
                "primaryTextColor": "#ffffff",
                "secondaryColor": "#ff4081",
                "secondaryTextColor": "#ffffff",
                "textColor": "rgba(0, 0, 0, 0.87)",
              },
              "rawTheme": Object {
                "fontFamily": "Roboto, sans-serif",
                "palette": Object {
                  "accent1Color": "#ff4081",
                  "accent2Color": "#f5f5f5",
                  "accent3Color": "#9e9e9e",
                  "alternateTextColor": "#ffffff",
                  "borderColor": "#e0e0e0",
                  "canvasColor": "#ffffff",
                  "clockCircleColor": "rgba(0, 0, 0, 0.07)",
                  "disabledColor": "rgba(0, 0, 0, 0.3)",
                  "pickerHeaderColor": "#00bcd4",
                  "primary1Color": "#00bcd4",
                  "primary2Color": "#0097a7",
                  "primary3Color": "#bdbdbd",
                  "secondaryTextColor": "rgba(0, 0, 0, 0.54)",
                  "shadowColor": "rgba(0, 0, 0, 1)",
                  "textColor": "rgba(0, 0, 0, 0.87)",
                },
                "spacing": Object {
                  "desktopDrawerMenuItemHeight": 48,
                  "desktopDropDownMenuFontSize": 15,
                  "desktopDropDownMenuItemHeight": 32,
                  "desktopGutter": 24,
                  "desktopGutterLess": 16,
                  "desktopGutterMini": 8,
                  "desktopGutterMore": 32,
                  "desktopKeylineIncrement": 64,
                  "desktopSubheaderHeight": 48,
                  "desktopToolbarHeight": 56,
                  "iconSize": 24,
                },
              },
              "refreshIndicator": Object {
                "loadingStrokeColor": "#00bcd4",
                "strokeColor": "#e0e0e0",
              },
              "ripple": Object {
                "color": "rgba(0, 0, 0, 0.87)",
              },
              "slider": Object {
                "handleColorZero": "#bdbdbd",
                "handleFillColor": "#ffffff",
                "handleSize": 12,
                "handleSizeActive": 18,
                "handleSizeDisabled": 8,
                "rippleColor": "#00bcd4",
                "selectionColor": "#00bcd4",
                "trackColor": "#bdbdbd",
                "trackColorSelected": "#9e9e9e",
                "trackSize": 2,
              },
              "snackbar": Object {
                "actionColor": "#ff4081",
                "backgroundColor": "rgba(0, 0, 0, 0.87)",
                "textColor": "#ffffff",
              },
              "spacing": Object {
                "desktopDrawerMenuItemHeight": 48,
                "desktopDropDownMenuFontSize": 15,
                "desktopDropDownMenuItemHeight": 32,
                "desktopGutter": 24,
                "desktopGutterLess": 16,
                "desktopGutterMini": 8,
                "desktopGutterMore": 32,
                "desktopKeylineIncrement": 64,
                "desktopSubheaderHeight": 48,
                "desktopToolbarHeight": 56,
                "iconSize": 24,
              },
              "stepper": Object {
                "backgroundColor": "transparent",
                "connectorLineColor": "#bdbdbd",
                "disabledTextColor": "rgba(0, 0, 0, 0.26)",
                "hoverBackgroundColor": "rgba(0, 0, 0, 0.06)",
                "hoveredIconColor": "#616161",
                "iconColor": "#00bcd4",
                "inactiveIconColor": "#9e9e9e",
                "textColor": "rgba(0, 0, 0, 0.87)",
              },
              "subheader": Object {
                "color": "rgba(0, 0, 0, 0.54)",
                "fontWeight": 500,
              },
              "svgIcon": Object {
                "color": "rgba(0, 0, 0, 0.87)",
              },
              "table": Object {
                "backgroundColor": "#ffffff",
              },
              "tableFooter": Object {
                "borderColor": "#e0e0e0",
                "textColor": "#9e9e9e",
              },
              "tableHeader": Object {
                "borderColor": "#e0e0e0",
              },
              "tableHeaderColumn": Object {
                "height": 56,
                "spacing": 24,
                "textColor": "#9e9e9e",
              },
              "tableRow": Object {
                "borderColor": "#e0e0e0",
                "height": 48,
                "hoverColor": "#f5f5f5",
                "selectedColor": "#e0e0e0",
                "stripeColor": "rgba(127, 221, 233, 0.4)",
                "textColor": "rgba(0, 0, 0, 0.87)",
              },
              "tableRowColumn": Object {
                "height": 48,
                "spacing": 24,
              },
              "tabs": Object {
                "backgroundColor": "#00bcd4",
                "selectedTextColor": "#ffffff",
                "textColor": "rgba(255, 255, 255, 0.7)",
              },
              "textField": Object {
                "backgroundColor": "transparent",
                "borderColor": "#e0e0e0",
                "disabledTextColor": "rgba(0, 0, 0, 0.3)",
                "errorColor": "#f44336",
                "floatingLabelColor": "rgba(0, 0, 0, 0.3)",
                "focusColor": "#aed581",
                "hintColor": "rgba(0, 0, 0, 0.3)",
                "textColor": "rgba(0, 0, 0, 0.87)",
              },
              "timePicker": Object {
                "accentColor": "#00bcd4",
                "clockCircleColor": "rgba(0, 0, 0, 0.07)",
                "clockColor": "rgba(0, 0, 0, 0.87)",
                "color": "#ffffff",
                "headerColor": "#00bcd4",
                "selectColor": "#0097a7",
                "selectTextColor": "#ffffff",
                "textColor": "#ffffff",
              },
              "toggle": Object {
                "labelColor": "rgba(0, 0, 0, 0.87)",
                "labelDisabledColor": "rgba(0, 0, 0, 0.3)",
                "thumbDisabledColor": "#e0e0e0",
                "thumbOffColor": "#f5f5f5",
                "thumbOnColor": "#7cb342",
                "thumbRequiredColor": "#00bcd4",
                "trackDisabledColor": "#bdbdbd",
                "trackOffColor": "#bdbdbd",
                "trackOnColor": "#aed581",
                "trackRequiredColor": "rgba(0, 188, 212, 0.5)",
              },
              "toolbar": Object {
                "backgroundColor": "rgb(232, 232, 232)",
                "color": "rgba(0, 0, 0, 0.54)",
                "height": 56,
                "hoverColor": "rgba(0, 0, 0, 0.87)",
                "iconColor": "rgba(0, 0, 0, 0.4)",
                "menuHoverColor": "rgba(0, 0, 0, 0.1)",
                "separatorColor": "rgba(0, 0, 0, 0.175)",
                "titleFontSize": 20,
              },
              "tooltip": Object {
                "color": "#ffffff",
                "opacity": 0.9,
                "rippleBackgroundColor": "#616161",
              },
              "userAgent": undefined,
              "zIndex": Object {
                "appBar": 1100,
                "dialog": 1500,
                "dialogOverlay": 1400,
                "drawer": 1300,
                "drawerOverlay": 1200,
                "layer": 2000,
                "menu": 1000,
                "popover": 2100,
                "snackbar": 2900,
                "tooltip": 3000,
              },
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": " Add New Service",
                "className": undefined,
              },
              "ref": null,
              "rendered": " Add New Service",
              "type": "h1",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <TextField
                  disabled={false}
                  floatingLabelFixed={false}
                  floatingLabelText="HREF"
                  fullWidth={false}
                  hintText="Reference of the service..."
                  multiLine={false}
                  onChange={[Function]}
                  rows={1}
                  type="text"
                  underlineShow={true}
                  value=""
/>,
                "className": undefined,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "disabled": false,
                  "floatingLabelFixed": false,
                  "floatingLabelText": "HREF",
                  "fullWidth": false,
                  "hintText": "Reference of the service...",
                  "multiLine": false,
                  "onChange": [Function],
                  "rows": 1,
                  "type": "text",
                  "underlineShow": true,
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <TextField
                  disabled={false}
                  floatingLabelFixed={false}
                  floatingLabelText="Category"
                  fullWidth={false}
                  hintText="Enter category..."
                  multiLine={false}
                  onChange={[Function]}
                  rows={1}
                  type="text"
                  underlineShow={true}
                  value=""
/>,
                "className": undefined,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "disabled": false,
                  "floatingLabelFixed": false,
                  "floatingLabelText": "Category",
                  "fullWidth": false,
                  "hintText": "Enter category...",
                  "multiLine": false,
                  "onChange": [Function],
                  "rows": 1,
                  "type": "text",
                  "underlineShow": true,
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <TextField
                  disabled={false}
                  errorText="Name is a required field"
                  floatingLabelFixed={false}
                  floatingLabelText="Name"
                  fullWidth={false}
                  hintText="Enter name..."
                  multiLine={false}
                  onChange={[Function]}
                  rows={1}
                  type="text"
                  underlineShow={true}
                  value=""
/>,
                "className": undefined,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "disabled": false,
                  "errorText": "Name is a required field",
                  "floatingLabelFixed": false,
                  "floatingLabelText": "Name",
                  "fullWidth": false,
                  "hintText": "Enter name...",
                  "multiLine": false,
                  "onChange": [Function],
                  "rows": 1,
                  "type": "text",
                  "underlineShow": true,
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <TextField
                  disabled={false}
                  floatingLabelFixed={false}
                  floatingLabelText="Description"
                  fullWidth={false}
                  hintText="Description of the service..."
                  multiLine={true}
                  onChange={[Function]}
                  rows={1}
                  type="text"
                  underlineShow={true}
                  value=""
/>,
                "className": undefined,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "disabled": false,
                  "floatingLabelFixed": false,
                  "floatingLabelText": "Description",
                  "fullWidth": false,
                  "hintText": "Description of the service...",
                  "multiLine": true,
                  "onChange": [Function],
                  "rows": 1,
                  "type": "text",
                  "underlineShow": true,
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": undefined,
                "inset": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Toggle
                  defaultToggled={false}
                  disabled={false}
                  iconStyle={
                                    Object {
                                                      "marginLeft": "0px",
                                                    }
                  }
                  label="Is the service enabled?"
                  labelPosition="left"
                  labelStyle={
                                    Object {
                                                      "width": "50%",
                                                    }
                  }
                  onToggle={[Function]}
                  toggled={false}
/>,
                "className": undefined,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "defaultToggled": false,
                  "disabled": false,
                  "iconStyle": Object {
                    "marginLeft": "0px",
                  },
                  "label": "Is the service enabled?",
                  "labelPosition": "left",
                  "labelStyle": Object {
                    "width": "50%",
                  },
                  "onToggle": [Function],
                  "toggled": false,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Toggle
                  defaultToggled={false}
                  disabled={false}
                  iconStyle={
                                    Object {
                                                      "marginLeft": "0px",
                                                    }
                  }
                  label="Has the service started?"
                  labelPosition="left"
                  labelStyle={
                                    Object {
                                                      "width": "50%",
                                                    }
                  }
                  onToggle={[Function]}
                  toggled={false}
/>,
                "className": undefined,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "defaultToggled": false,
                  "disabled": false,
                  "iconStyle": Object {
                    "marginLeft": "0px",
                  },
                  "label": "Has the service started?",
                  "labelPosition": "left",
                  "labelStyle": Object {
                    "width": "50%",
                  },
                  "onToggle": [Function],
                  "toggled": false,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Toggle
                  defaultToggled={false}
                  disabled={false}
                  iconStyle={
                                    Object {
                                                      "marginLeft": "0px",
                                                    }
                  }
                  label="Can this service be changed without affecting any other service?"
                  labelPosition="left"
                  labelStyle={
                                    Object {
                                                      "width": "50%",
                                                    }
                  }
                  onToggle={[Function]}
                  toggled={false}
/>,
                "className": undefined,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "defaultToggled": false,
                  "disabled": false,
                  "iconStyle": Object {
                    "marginLeft": "0px",
                  },
                  "label": "Can this service be changed without affecting any other service?",
                  "labelPosition": "left",
                  "labelStyle": Object {
                    "width": "50%",
                  },
                  "onToggle": [Function],
                  "toggled": false,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": undefined,
                "inset": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h3>
                    Start Mode
</h3>,
                  <SelectField
                    autoWidth={false}
                    disabled={false}
                    fullWidth={false}
                    hintText="Start mode..."
                    multiple={false}
                    onChange={[Function]}
                    value=""
>
                    <MenuItem
                                        anchorOrigin={
                                                            Object {
                                                                                "horizontal": "right",
                                                                                "vertical": "top",
                                                                              }
                                        }
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="Unknown"
                                        targetOrigin={
                                                            Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                        }
                                        value={0}
                    />
                    <MenuItem
                                        anchorOrigin={
                                                            Object {
                                                                                "horizontal": "right",
                                                                                "vertical": "top",
                                                                              }
                                        }
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="Automatically by the managed environment"
                                        targetOrigin={
                                                            Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                        }
                                        value={1}
                    />
                    <MenuItem
                                        anchorOrigin={
                                                            Object {
                                                                                "horizontal": "right",
                                                                                "vertical": "top",
                                                                              }
                                        }
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="Automatically by the owning device"
                                        targetOrigin={
                                                            Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                        }
                                        value={2}
                    />
                    <MenuItem
                                        anchorOrigin={
                                                            Object {
                                                                                "horizontal": "right",
                                                                                "vertical": "top",
                                                                              }
                                        }
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="Manually by the Provider of the Service"
                                        targetOrigin={
                                                            Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                        }
                                        value={3}
                    />
                    <MenuItem
                                        anchorOrigin={
                                                            Object {
                                                                                "horizontal": "right",
                                                                                "vertical": "top",
                                                                              }
                                        }
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="Manually by a Customer of the Provider"
                                        targetOrigin={
                                                            Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                        }
                                        value={4}
                    />
                    <MenuItem
                                        anchorOrigin={
                                                            Object {
                                                                                "horizontal": "right",
                                                                                "vertical": "top",
                                                                              }
                                        }
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="Any of the above"
                                        targetOrigin={
                                                            Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                        }
                                        value={5}
                    />
</SelectField>,
                ],
                "className": undefined,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Start Mode",
                  },
                  "ref": null,
                  "rendered": "Start Mode",
                  "type": "h3",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "autoWidth": false,
                    "children": Array [
                      <MenuItem
                        anchorOrigin={
                                                Object {
                                                                        "horizontal": "right",
                                                                        "vertical": "top",
                                                                      }
                        }
                        checked={false}
                        desktop={false}
                        disabled={false}
                        focusState="none"
                        insetChildren={false}
                        primaryText="Unknown"
                        targetOrigin={
                                                Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                        }
                        value={0}
/>,
                      <MenuItem
                        anchorOrigin={
                                                Object {
                                                                        "horizontal": "right",
                                                                        "vertical": "top",
                                                                      }
                        }
                        checked={false}
                        desktop={false}
                        disabled={false}
                        focusState="none"
                        insetChildren={false}
                        primaryText="Automatically by the managed environment"
                        targetOrigin={
                                                Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                        }
                        value={1}
/>,
                      <MenuItem
                        anchorOrigin={
                                                Object {
                                                                        "horizontal": "right",
                                                                        "vertical": "top",
                                                                      }
                        }
                        checked={false}
                        desktop={false}
                        disabled={false}
                        focusState="none"
                        insetChildren={false}
                        primaryText="Automatically by the owning device"
                        targetOrigin={
                                                Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                        }
                        value={2}
/>,
                      <MenuItem
                        anchorOrigin={
                                                Object {
                                                                        "horizontal": "right",
                                                                        "vertical": "top",
                                                                      }
                        }
                        checked={false}
                        desktop={false}
                        disabled={false}
                        focusState="none"
                        insetChildren={false}
                        primaryText="Manually by the Provider of the Service"
                        targetOrigin={
                                                Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                        }
                        value={3}
/>,
                      <MenuItem
                        anchorOrigin={
                                                Object {
                                                                        "horizontal": "right",
                                                                        "vertical": "top",
                                                                      }
                        }
                        checked={false}
                        desktop={false}
                        disabled={false}
                        focusState="none"
                        insetChildren={false}
                        primaryText="Manually by a Customer of the Provider"
                        targetOrigin={
                                                Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                        }
                        value={4}
/>,
                      <MenuItem
                        anchorOrigin={
                                                Object {
                                                                        "horizontal": "right",
                                                                        "vertical": "top",
                                                                      }
                        }
                        checked={false}
                        desktop={false}
                        disabled={false}
                        focusState="none"
                        insetChildren={false}
                        primaryText="Any of the above"
                        targetOrigin={
                                                Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                        }
                        value={5}
/>,
                    ],
                    "disabled": false,
                    "fullWidth": false,
                    "hintText": "Start mode...",
                    "multiple": false,
                    "onChange": [Function],
                    "value": "",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "0",
                      "nodeType": "class",
                      "props": Object {
                        "anchorOrigin": Object {
                          "horizontal": "right",
                          "vertical": "top",
                        },
                        "checked": false,
                        "desktop": false,
                        "disabled": false,
                        "focusState": "none",
                        "insetChildren": false,
                        "primaryText": "Unknown",
                        "targetOrigin": Object {
                          "horizontal": "left",
                          "vertical": "top",
                        },
                        "value": 0,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "1",
                      "nodeType": "class",
                      "props": Object {
                        "anchorOrigin": Object {
                          "horizontal": "right",
                          "vertical": "top",
                        },
                        "checked": false,
                        "desktop": false,
                        "disabled": false,
                        "focusState": "none",
                        "insetChildren": false,
                        "primaryText": "Automatically by the managed environment",
                        "targetOrigin": Object {
                          "horizontal": "left",
                          "vertical": "top",
                        },
                        "value": 1,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "2",
                      "nodeType": "class",
                      "props": Object {
                        "anchorOrigin": Object {
                          "horizontal": "right",
                          "vertical": "top",
                        },
                        "checked": false,
                        "desktop": false,
                        "disabled": false,
                        "focusState": "none",
                        "insetChildren": false,
                        "primaryText": "Automatically by the owning device",
                        "targetOrigin": Object {
                          "horizontal": "left",
                          "vertical": "top",
                        },
                        "value": 2,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "3",
                      "nodeType": "class",
                      "props": Object {
                        "anchorOrigin": Object {
                          "horizontal": "right",
                          "vertical": "top",
                        },
                        "checked": false,
                        "desktop": false,
                        "disabled": false,
                        "focusState": "none",
                        "insetChildren": false,
                        "primaryText": "Manually by the Provider of the Service",
                        "targetOrigin": Object {
                          "horizontal": "left",
                          "vertical": "top",
                        },
                        "value": 3,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "4",
                      "nodeType": "class",
                      "props": Object {
                        "anchorOrigin": Object {
                          "horizontal": "right",
                          "vertical": "top",
                        },
                        "checked": false,
                        "desktop": false,
                        "disabled": false,
                        "focusState": "none",
                        "insetChildren": false,
                        "primaryText": "Manually by a Customer of the Provider",
                        "targetOrigin": Object {
                          "horizontal": "left",
                          "vertical": "top",
                        },
                        "value": 4,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "5",
                      "nodeType": "class",
                      "props": Object {
                        "anchorOrigin": Object {
                          "horizontal": "right",
                          "vertical": "top",
                        },
                        "checked": false,
                        "desktop": false,
                        "disabled": false,
                        "focusState": "none",
                        "insetChildren": false,
                        "primaryText": "Any of the above",
                        "targetOrigin": Object {
                          "horizontal": "left",
                          "vertical": "top",
                        },
                        "value": 5,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h3>
                    State
</h3>,
                  <SelectField
                    autoWidth={false}
                    disabled={false}
                    fullWidth={false}
                    hintText="State of the service..."
                    multiple={false}
                    onChange={[Function]}
                    value=""
>
                    <MenuItem
                                        anchorOrigin={
                                                            Object {
                                                                                "horizontal": "right",
                                                                                "vertical": "top",
                                                                              }
                                        }
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="feasibilityChecked"
                                        targetOrigin={
                                                            Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                        }
                                        value={0}
                    />
                    <MenuItem
                                        anchorOrigin={
                                                            Object {
                                                                                "horizontal": "right",
                                                                                "vertical": "top",
                                                                              }
                                        }
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="designed"
                                        targetOrigin={
                                                            Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                        }
                                        value={1}
                    />
                    <MenuItem
                                        anchorOrigin={
                                                            Object {
                                                                                "horizontal": "right",
                                                                                "vertical": "top",
                                                                              }
                                        }
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="reserved"
                                        targetOrigin={
                                                            Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                        }
                                        value={2}
                    />
                    <MenuItem
                                        anchorOrigin={
                                                            Object {
                                                                                "horizontal": "right",
                                                                                "vertical": "top",
                                                                              }
                                        }
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="active"
                                        targetOrigin={
                                                            Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                        }
                                        value={3}
                    />
                    <MenuItem
                                        anchorOrigin={
                                                            Object {
                                                                                "horizontal": "right",
                                                                                "vertical": "top",
                                                                              }
                                        }
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="inactive"
                                        targetOrigin={
                                                            Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                        }
                                        value={4}
                    />
                    <MenuItem
                                        anchorOrigin={
                                                            Object {
                                                                                "horizontal": "right",
                                                                                "vertical": "top",
                                                                              }
                                        }
                                        checked={false}
                                        desktop={false}
                                        disabled={false}
                                        focusState="none"
                                        insetChildren={false}
                                        primaryText="terminated"
                                        targetOrigin={
                                                            Object {
                                                                                "horizontal": "left",
                                                                                "vertical": "top",
                                                                              }
                                        }
                                        value={5}
                    />
</SelectField>,
                ],
                "className": undefined,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "State",
                  },
                  "ref": null,
                  "rendered": "State",
                  "type": "h3",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "autoWidth": false,
                    "children": Array [
                      <MenuItem
                        anchorOrigin={
                                                Object {
                                                                        "horizontal": "right",
                                                                        "vertical": "top",
                                                                      }
                        }
                        checked={false}
                        desktop={false}
                        disabled={false}
                        focusState="none"
                        insetChildren={false}
                        primaryText="feasibilityChecked"
                        targetOrigin={
                                                Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                        }
                        value={0}
/>,
                      <MenuItem
                        anchorOrigin={
                                                Object {
                                                                        "horizontal": "right",
                                                                        "vertical": "top",
                                                                      }
                        }
                        checked={false}
                        desktop={false}
                        disabled={false}
                        focusState="none"
                        insetChildren={false}
                        primaryText="designed"
                        targetOrigin={
                                                Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                        }
                        value={1}
/>,
                      <MenuItem
                        anchorOrigin={
                                                Object {
                                                                        "horizontal": "right",
                                                                        "vertical": "top",
                                                                      }
                        }
                        checked={false}
                        desktop={false}
                        disabled={false}
                        focusState="none"
                        insetChildren={false}
                        primaryText="reserved"
                        targetOrigin={
                                                Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                        }
                        value={2}
/>,
                      <MenuItem
                        anchorOrigin={
                                                Object {
                                                                        "horizontal": "right",
                                                                        "vertical": "top",
                                                                      }
                        }
                        checked={false}
                        desktop={false}
                        disabled={false}
                        focusState="none"
                        insetChildren={false}
                        primaryText="active"
                        targetOrigin={
                                                Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                        }
                        value={3}
/>,
                      <MenuItem
                        anchorOrigin={
                                                Object {
                                                                        "horizontal": "right",
                                                                        "vertical": "top",
                                                                      }
                        }
                        checked={false}
                        desktop={false}
                        disabled={false}
                        focusState="none"
                        insetChildren={false}
                        primaryText="inactive"
                        targetOrigin={
                                                Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                        }
                        value={4}
/>,
                      <MenuItem
                        anchorOrigin={
                                                Object {
                                                                        "horizontal": "right",
                                                                        "vertical": "top",
                                                                      }
                        }
                        checked={false}
                        desktop={false}
                        disabled={false}
                        focusState="none"
                        insetChildren={false}
                        primaryText="terminated"
                        targetOrigin={
                                                Object {
                                                                        "horizontal": "left",
                                                                        "vertical": "top",
                                                                      }
                        }
                        value={5}
/>,
                    ],
                    "disabled": false,
                    "fullWidth": false,
                    "hintText": "State of the service...",
                    "multiple": false,
                    "onChange": [Function],
                    "value": "",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": "0",
                      "nodeType": "class",
                      "props": Object {
                        "anchorOrigin": Object {
                          "horizontal": "right",
                          "vertical": "top",
                        },
                        "checked": false,
                        "desktop": false,
                        "disabled": false,
                        "focusState": "none",
                        "insetChildren": false,
                        "primaryText": "feasibilityChecked",
                        "targetOrigin": Object {
                          "horizontal": "left",
                          "vertical": "top",
                        },
                        "value": 0,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "1",
                      "nodeType": "class",
                      "props": Object {
                        "anchorOrigin": Object {
                          "horizontal": "right",
                          "vertical": "top",
                        },
                        "checked": false,
                        "desktop": false,
                        "disabled": false,
                        "focusState": "none",
                        "insetChildren": false,
                        "primaryText": "designed",
                        "targetOrigin": Object {
                          "horizontal": "left",
                          "vertical": "top",
                        },
                        "value": 1,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "2",
                      "nodeType": "class",
                      "props": Object {
                        "anchorOrigin": Object {
                          "horizontal": "right",
                          "vertical": "top",
                        },
                        "checked": false,
                        "desktop": false,
                        "disabled": false,
                        "focusState": "none",
                        "insetChildren": false,
                        "primaryText": "reserved",
                        "targetOrigin": Object {
                          "horizontal": "left",
                          "vertical": "top",
                        },
                        "value": 2,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "3",
                      "nodeType": "class",
                      "props": Object {
                        "anchorOrigin": Object {
                          "horizontal": "right",
                          "vertical": "top",
                        },
                        "checked": false,
                        "desktop": false,
                        "disabled": false,
                        "focusState": "none",
                        "insetChildren": false,
                        "primaryText": "active",
                        "targetOrigin": Object {
                          "horizontal": "left",
                          "vertical": "top",
                        },
                        "value": 3,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "4",
                      "nodeType": "class",
                      "props": Object {
                        "anchorOrigin": Object {
                          "horizontal": "right",
                          "vertical": "top",
                        },
                        "checked": false,
                        "desktop": false,
                        "disabled": false,
                        "focusState": "none",
                        "insetChildren": false,
                        "primaryText": "inactive",
                        "targetOrigin": Object {
                          "horizontal": "left",
                          "vertical": "top",
                        },
                        "value": 4,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": "5",
                      "nodeType": "class",
                      "props": Object {
                        "anchorOrigin": Object {
                          "horizontal": "right",
                          "vertical": "top",
                        },
                        "checked": false,
                        "desktop": false,
                        "disabled": false,
                        "focusState": "none",
                        "insetChildren": false,
                        "primaryText": "terminated",
                        "targetOrigin": Object {
                          "horizontal": "left",
                          "vertical": "top",
                        },
                        "value": 5,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": undefined,
                "inset": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h3>
                    Order date
</h3>,
                  <DatePicker
                    autoOk={false}
                    container="dialog"
                    disableYearSelection={false}
                    disabled={false}
                    firstDayOfWeek={1}
                    hideCalendarDate={false}
                    hintText="Order Date"
                    onChange={[Function]}
                    openToYearSelection={false}
                    style={Object {}}
                    value=""
/>,
                ],
                "className": undefined,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Order date",
                  },
                  "ref": null,
                  "rendered": "Order date",
                  "type": "h3",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "autoOk": false,
                    "container": "dialog",
                    "disableYearSelection": false,
                    "disabled": false,
                    "firstDayOfWeek": 1,
                    "hideCalendarDate": false,
                    "hintText": "Order Date",
                    "onChange": [Function],
                    "openToYearSelection": false,
                    "style": Object {},
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h3>
                    Start date
</h3>,
                  <DatePicker
                    autoOk={false}
                    container="dialog"
                    disableYearSelection={false}
                    disabled={false}
                    firstDayOfWeek={1}
                    hideCalendarDate={false}
                    hintText="Start Date"
                    onChange={[Function]}
                    openToYearSelection={false}
                    style={Object {}}
                    value=""
/>,
                ],
                "className": undefined,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Start date",
                  },
                  "ref": null,
                  "rendered": "Start date",
                  "type": "h3",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "autoOk": false,
                    "container": "dialog",
                    "disableYearSelection": false,
                    "disabled": false,
                    "firstDayOfWeek": 1,
                    "hideCalendarDate": false,
                    "hintText": "Start Date",
                    "onChange": [Function],
                    "openToYearSelection": false,
                    "style": Object {},
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h3>
                    End date
</h3>,
                  <DatePicker
                    autoOk={false}
                    container="dialog"
                    disableYearSelection={false}
                    disabled={false}
                    firstDayOfWeek={1}
                    hideCalendarDate={false}
                    hintText="End Date"
                    onChange={[Function]}
                    openToYearSelection={false}
                    style={Object {}}
                    value=""
/>,
                  <br />,
                ],
                "className": undefined,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "End date",
                  },
                  "ref": null,
                  "rendered": "End date",
                  "type": "h3",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "autoOk": false,
                    "container": "dialog",
                    "disableYearSelection": false,
                    "disabled": false,
                    "firstDayOfWeek": 1,
                    "hideCalendarDate": false,
                    "hintText": "End Date",
                    "onChange": [Function],
                    "openToYearSelection": false,
                    "style": Object {},
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": "br",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": undefined,
                "inset": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h3>
                    Service Specification
</h3>,
                  <ObjectInput
                    mapValues={[Function]}
                    onChange={[Function]}
                    value={
                                        Object {
                                                            "href": "",
                                                            "name": "",
                                                            "version": "",
                                                          }
                    }
>
                    <TextField
                                        className={undefined}
                                        disabled={false}
                                        floatingLabelFixed={false}
                                        floatingLabelText="Name"
                                        fullWidth={false}
                                        hintText="Name of the service specification..."
                                        multiLine={false}
                                        name="name"
                                        rows={1}
                                        type="name"
                                        underlineShow={true}
                    />
                    <TextField
                                        className={undefined}
                                        disabled={false}
                                        floatingLabelFixed={false}
                                        floatingLabelText="HREF"
                                        fullWidth={false}
                                        hintText="Href of the service specification..."
                                        multiLine={false}
                                        name="href"
                                        rows={1}
                                        type="text"
                                        underlineShow={true}
                    />
                    <TextField
                                        className={undefined}
                                        disabled={false}
                                        floatingLabelFixed={false}
                                        floatingLabelText="Version"
                                        fullWidth={false}
                                        hintText="Version of service specification..."
                                        multiLine={false}
                                        name="version"
                                        rows={1}
                                        type="text"
                                        underlineShow={true}
                    />
</ObjectInput>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Service Specification",
                  },
                  "ref": null,
                  "rendered": "Service Specification",
                  "type": "h3",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      <TextField
                        className={undefined}
                        disabled={false}
                        floatingLabelFixed={false}
                        floatingLabelText="Name"
                        fullWidth={false}
                        hintText="Name of the service specification..."
                        multiLine={false}
                        name="name"
                        rows={1}
                        type="name"
                        underlineShow={true}
/>,
                      <TextField
                        className={undefined}
                        disabled={false}
                        floatingLabelFixed={false}
                        floatingLabelText="HREF"
                        fullWidth={false}
                        hintText="Href of the service specification..."
                        multiLine={false}
                        name="href"
                        rows={1}
                        type="text"
                        underlineShow={true}
/>,
                      <TextField
                        className={undefined}
                        disabled={false}
                        floatingLabelFixed={false}
                        floatingLabelText="Version"
                        fullWidth={false}
                        hintText="Version of service specification..."
                        multiLine={false}
                        name="version"
                        rows={1}
                        type="text"
                        underlineShow={true}
/>,
                    ],
                    "mapValues": [Function],
                    "onChange": [Function],
                    "value": Object {
                      "href": "",
                      "name": "",
                      "version": "",
                    },
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "className": undefined,
                        "disabled": false,
                        "floatingLabelFixed": false,
                        "floatingLabelText": "Name",
                        "fullWidth": false,
                        "hintText": "Name of the service specification...",
                        "multiLine": false,
                        "name": "name",
                        "rows": 1,
                        "type": "name",
                        "underlineShow": true,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "className": undefined,
                        "disabled": false,
                        "floatingLabelFixed": false,
                        "floatingLabelText": "HREF",
                        "fullWidth": false,
                        "hintText": "Href of the service specification...",
                        "multiLine": false,
                        "name": "href",
                        "rows": 1,
                        "type": "text",
                        "underlineShow": true,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {
                        "className": undefined,
                        "disabled": false,
                        "floatingLabelFixed": false,
                        "floatingLabelText": "Version",
                        "fullWidth": false,
                        "hintText": "Version of service specification...",
                        "multiLine": false,
                        "name": "version",
                        "rows": 1,
                        "type": "text",
                        "underlineShow": true,
                      },
                      "ref": null,
                      "rendered": null,
                      "type": [Function],
                    },
                  ],
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": undefined,
                "inset": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h3>
                    Related Parties
</h3>,
                  <ListInput
                    component={[Function]}
                    count={0}
                    max={Infinity}
                    min={1}
                    onChange={[Function]}
                    values={Array []}
/>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Related Parties",
                  },
                  "ref": null,
                  "rendered": "Related Parties",
                  "type": "h3",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "count": 0,
                    "max": Infinity,
                    "min": 1,
                    "onChange": [Function],
                    "values": Array [],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": undefined,
                "inset": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h3>
                    Service Characteristic
</h3>,
                  <ListInput
                    component={[Function]}
                    count={0}
                    max={Infinity}
                    min={0}
                    onChange={[Function]}
                    values={Array []}
/>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Service Characteristic",
                  },
                  "ref": null,
                  "rendered": "Service Characteristic",
                  "type": "h3",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "count": 0,
                    "max": Infinity,
                    "min": 0,
                    "onChange": [Function],
                    "values": Array [],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": undefined,
                "inset": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h3>
                    Service Relationship
</h3>,
                  <ListInput
                    component={[Function]}
                    count={0}
                    max={Infinity}
                    min={0}
                    onChange={[Function]}
                    values={Array []}
/>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Service Relationship",
                  },
                  "ref": null,
                  "rendered": "Service Relationship",
                  "type": "h3",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "count": 0,
                    "max": Infinity,
                    "min": 0,
                    "onChange": [Function],
                    "values": Array [],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": undefined,
                "inset": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h3>
                    Supporting Service
</h3>,
                  <ListInput
                    component={[Function]}
                    count={0}
                    max={Infinity}
                    min={0}
                    onChange={[Function]}
                    values={Array []}
/>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Supporting Service",
                  },
                  "ref": null,
                  "rendered": "Supporting Service",
                  "type": "h3",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "count": 0,
                    "max": Infinity,
                    "min": 0,
                    "onChange": [Function],
                    "values": Array [],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": undefined,
                "inset": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h3>
                    Supporting Resource
</h3>,
                  <ListInput
                    component={[Function]}
                    count={0}
                    max={Infinity}
                    min={0}
                    onChange={[Function]}
                    values={Array []}
/>,
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Supporting Resource",
                  },
                  "ref": null,
                  "rendered": "Supporting Resource",
                  "type": "h3",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "component": [Function],
                    "count": 0,
                    "max": Infinity,
                    "min": 0,
                    "onChange": [Function],
                    "values": Array [],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": undefined,
                "inset": false,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <RaisedButton
                    disabled={true}
                    fullWidth={false}
                    label="Submit"
                    labelPosition="after"
                    onClick={[Function]}
                    primary={true}
                    secondary={false}
/>,
                  null,
                ],
                "className": undefined,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "disabled": true,
                    "fullWidth": false,
                    "label": "Submit",
                    "labelPosition": "after",
                    "onClick": [Function],
                    "primary": true,
                    "secondary": false,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                null,
              ],
              "type": "div",
            },
          ],
          "type": [Function],
        },
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
